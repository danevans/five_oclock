{"mappings":"A,S,E,C,C,C,E,A,C,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,C,C,C,C,E,I,E,M,A,C,E,U,O,E,A,S,C,C,C,E,G,U,O,G,C,E,O,E,I,E,C,C,O,W,C,C,G,K,I,E,C,I,E,E,I,C,E,G,W,G,U,O,E,O,C,O,A,U,+C,C,M,A,C,W,E,O,M,E,E,E,E,W,E,E,E,I,E,O,c,C,E,E,C,M,E,W,C,E,a,C,E,S,C,C,G,C,C,E,C,E,C,C,S,E,C,C,C,E,I,E,O,I,C,G,G,O,qB,C,C,I,E,O,qB,C,E,C,G,C,E,E,M,C,S,C,E,O,O,wB,C,E,G,U,A,E,E,E,I,C,K,C,E,E,C,O,C,C,S,E,C,E,I,I,E,E,E,U,M,C,I,C,I,E,M,S,C,E,C,S,C,E,C,C,C,C,E,E,E,O,G,C,G,O,C,S,C,E,E,E,E,C,C,E,C,G,O,yB,C,O,gB,C,E,O,yB,C,I,E,O,I,O,C,S,C,E,O,c,C,E,E,O,wB,C,E,G,E,C,O,C,C,IGAI8a,E,E,C,U,C,G,U,G,uB,G,c,G,sB,G,W,G,U,G,U,G,S,G,a,G,Y,G,iB,G,U,G,Y,G,Q,G,gB,G,a,G,yB,G,W,G,a,G,U,G,e,G,W,G,U,G,U,G,Q,G,mB,G,U,G,S,G,U,G,wB,G,S,G,U,G,S,G,W,G,U,G,S,G,S,G,gB,G,mC,G,2B,G,wB,G,c,G,c,G,e,G,Q,G,W,G,Q,G,W,G,a,G,O,G,a,G,U,G,mB,G,S,G,U,G,U,G,W,G,U,G,W,G,qB,G,U,G,U,G,U,G,Q,G,iB,G,U,G,Q,G,W,G,U,G,O,G,mB,G,a,G,gB,G,S,G,Q,G,iB,G,U,G,U,G,gB,G,W,G,Q,G,Y,G,Y,G,S,G,S,G,a,G,oB,G,S,G,+C,G,Y,G,O,G,gB,G,S,G,Y,G,W,G,U,G,Q,G,U,G,Y,G,U,G,S,G,c,G,Q,G,iC,G,O,G,O,G,U,G,Q,G,S,G,U,G,S,G,Q,G,Q,G,a,G,W,G,W,G,U,G,wB,G,c,G,c,G,S,G,iB,G,a,G,O,G,U,G,c,G,gB,G,Y,G,U,G,U,G,Y,G,a,G,S,G,Q,G,U,G,S,G,U,G,a,G,e,G,a,G,mB,G,kB,G,O,G,U,G,W,G,Q,G,2B,G,a,G,a,G,a,G,Q,G,Y,G,W,G,S,G,S,G,W,G,a,G,U,G,gB,G,Q,G,iB,G,U,G,Y,G,c,G,S,G,Q,G,Q,G,O,G,c,G,O,G,S,G,O,G,mB,G,mB,G,c,G,W,G,S,G,4B,G,W,G,c,G,Y,G,W,G,Q,G,W,G,Q,G,U,G,U,G,S,G,S,G,S,G,e,G,kB,G,a,G,Q,G,S,G,Y,G,+C,G,W,G,yB,G,W,G,e,G,a,G,U,G,U,G,W,G,c,G,wB,G,c,G,e,G,Q,G,W,G,2B,G,O,G,8B,G,O,G,W,G,a,G,U,G,c,G,e,G,U,G,Q,G,U,G,sB,G,S,G,S,G,W,G,U,G,S,G,uC,G,2B,G,U,G,a,G,W,G,mC,G,Y,G,sB,G,sB,G,U,G,U,G,oB,G,Q,G,Q,G,U,G,e,G,S,G,U,E,U,C,iB,C,E,E,E,C,K,K,K,K,K,K,K,K,K,K,K,K,A,E,e,C,E,iB,E,C,K,C,E,C,E,qB,C,E,iB,E,C,K,C,E,C,E,iB,C,E,G,E,C,K,A,E,gB,C,E,iB,E,C,K,C,E,C,E,gB,C,E,iB,E,C,K,C,E,C,E,gB,C,E,iB,E,C,K,C,E,C,E,gB,C,E,e,E,C,K,C,E,C,E,gB,C,E,iB,E,C,K,C,E,C,E,gB,C,E,E,E,C,K,A,E,kB,C,E,gB,E,C,K,C,E,C,E,qB,C,E,e,E,C,K,C,E,C,E,mB,C,E,gB,E,C,K,C,E,C,E,e,C,E,I,E,I,E,C,K,A,E,oB,C,E,G,E,E,E,C,K,A,E,e,C,E,G,E,I,E,C,K,A,E,iB,C,E,iB,E,C,K,C,E,C,E,e,C,E,iB,E,C,K,C,E,C,E,uB,C,E,iB,E,C,K,C,E,C,E,kB,C,E,iB,E,C,K,C,E,C,E,gB,C,E,e,E,C,K,C,E,C,E,kB,C,E,G,E,E,E,C,K,A,E,kB,C,E,iB,E,C,K,C,E,C,E,kB,C,E,gB,E,C,K,C,E,C,E,gB,C,E,gB,E,C,K,C,E,C,E,sB,C,E,I,E,C,K,K,K,A,E,c,C,E,I,E,C,K,A,E,iB,C,E,iB,E,C,K,C,E,C,E,kB,C,E,I,E,C,K,A,E,gB,C,E,gB,E,C,K,C,E,C,E,kB,C,E,e,E,C,K,C,E,C,E,e,C,E,G,E,C,K,K,K,K,K,K,K,K,K,K,A,E,oB,C,E,e,E,C,K,C,E,C,E,c,C,E,iB,E,C,K,C,E,C,E,gB,C,E,e,E,C,K,C,E,C,E,oB,C,E,gB,E,C,K,C,E,C,E,gB,C,E,gB,E,C,K,C,E,C,E,gB,C,E,e,E,C,K,C,E,C,E,gB,C,E,I,E,C,K,K,K,K,K,K,K,K,A,E,gB,C,E,sB,E,C,K,C,E,C,E,iB,C,E,sB,E,C,K,C,E,C,E,mB,C,E,iB,E,C,K,C,E,C,E,kB,C,E,E,E,C,K,A,E,iB,C,E,I,E,C,K,K,K,K,K,K,K,K,K,K,A,E,kB,C,E,G,E,C,K,A,E,gB,C,E,e,E,C,K,C,E,C,E,oB,C,E,iB,E,C,K,C,E,C,E,qB,C,E,iB,E,C,K,C,E,C,E,oB,C,E,e,E,C,K,C,E,C,E,kB,C,E,E,E,C,K,A,E,kB,C,E,iB,E,C,K,C,E,C,E,iB,C,E,I,E,C,K,A,E,e,C,E,G,E,C,K,A,E,kB,C,E,I,E,C,K,A,E,e,C,E,K,E,K,E,C,K,A,E,oB,C,E,K,E,K,E,C,K,A,E,mB,C,E,sB,E,C,K,C,E,C,E,kB,C,E,sB,E,C,K,C,E,C,E,oB,C,E,K,E,C,K,A,E,iC,C,E,K,E,C,K,A,E,8B,C,E,K,E,C,K,A,E,mC,C,E,8B,E,C,E,4B,C,E,K,E,C,K,A,E,0B,C,E,K,E,C,K,A,E,6B,C,E,K,E,C,K,A,E,4B,C,E,K,E,C,K,A,E,iC,C,E,K,E,C,K,A,E,0B,C,E,K,E,C,K,A,E,6B,C,E,K,E,C,K,A,E,6B,C,E,K,E,C,K,A,E,4B,C,E,K,E,C,K,A,E,4B,C,E,K,E,C,K,A,E,gB,C,E,sB,E,C,K,C,E,C,E,mB,C,E,K,E,K,E,C,K,A,E,mB,C,E,iB,E,C,K,C,E,C,E,e,C,E,e,E,C,E,gB,C,E,K,E,C,K,A,E,yB,C,E,K,E,C,K,A,E,mB,C,E,K,E,C,K,A,E,gB,C,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,uB,C,E,sB,E,C,K,C,E,C,E,oB,C,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,gB,C,E,K,E,K,E,C,K,A,E,uB,C,E,iC,E,C,E,wB,C,E,K,E,K,E,C,K,A,E,uB,C,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,kB,C,E,K,E,C,K,A,E,oB,C,E,8B,E,C,E,kB,C,E,K,E,C,K,A,E,iB,C,E,iB,E,C,K,C,E,C,E,kB,C,E,K,E,K,E,C,K,A,E,oB,C,E,K,E,C,K,A,E,wB,C,E,K,E,K,E,C,K,A,E,wB,C,E,iB,E,C,K,C,E,C,E,kB,C,E,4B,E,C,E,qB,C,E,K,E,C,K,A,E,kB,C,E,kB,E,C,K,C,E,C,E,iB,C,E,K,E,C,K,A,E,kB,C,E,sB,E,C,K,C,E,C,E,uB,C,E,E,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,uB,C,E,K,E,C,K,A,E,iB,C,E,K,E,K,E,C,K,A,E,kB,C,E,K,E,K,E,C,K,A,E,mB,C,E,sB,E,C,K,C,E,C,E,mB,C,E,K,E,K,E,C,K,A,E,mB,C,E,K,E,C,K,A,E,sB,C,E,K,E,C,K,A,E,mB,C,E,kB,E,C,E,sB,C,E,K,E,C,K,A,E,qB,C,E,+B,E,C,E,oB,C,E,K,E,C,K,A,E,oB,C,E,K,E,K,E,C,K,A,E,kB,C,E,e,E,C,E,oB,C,E,K,E,K,E,C,K,A,E,qB,C,E,K,E,K,E,C,K,A,E,kB,C,E,sB,E,C,K,C,E,C,E,qB,C,E,sB,E,C,K,C,E,C,E,oB,C,E,K,E,C,K,A,E,oB,C,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,kB,C,E,K,E,K,E,C,K,A,E,iB,C,E,K,E,K,E,C,K,A,E,qB,C,E,K,E,C,K,A,E,+B,C,E,K,E,K,E,C,K,A,E,uB,C,E,K,E,K,E,C,K,A,E,0B,C,E,K,E,K,E,C,K,A,E,6B,C,E,K,E,K,E,C,K,A,E,4B,C,E,K,E,K,E,C,K,A,E,wB,C,E,K,E,K,E,C,K,A,E,4B,C,E,K,E,K,E,C,K,A,E,0B,C,E,K,E,K,E,C,K,A,E,uB,C,E,+B,E,C,E,iB,C,E,K,E,K,E,C,K,A,E,kB,C,E,K,E,K,E,C,K,A,E,kB,C,E,K,E,C,K,A,E,gB,C,E,0B,E,C,E,iB,C,E,K,E,K,E,C,K,A,E,8B,C,E,K,E,K,E,C,K,A,E,8B,C,E,K,E,K,E,C,K,A,E,kB,C,E,uB,E,C,E,qB,C,E,sB,E,C,K,C,E,C,E,iB,C,E,K,E,C,K,A,E,e,C,E,K,E,C,K,A,E,sB,C,E,K,E,K,E,C,K,A,E,qB,C,E,8B,E,C,E,wB,C,E,sB,E,C,K,C,E,C,E,iB,C,E,K,E,C,K,A,E,kB,C,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,kB,C,E,sB,E,C,K,C,E,C,E,qB,C,E,K,E,C,K,A,E,oB,C,E,K,E,K,E,C,K,A,E,mB,C,E,K,E,C,K,A,E,kB,C,E,4B,E,C,E,oB,C,E,K,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,qB,C,E,K,E,K,E,C,K,A,E,sB,C,E,K,E,C,K,A,E,mB,C,E,K,E,K,E,C,K,A,E,kB,C,E,K,E,K,E,C,K,A,E,oB,C,E,K,E,C,K,A,E,qB,C,E,K,E,C,K,A,E,mB,C,E,kB,E,C,K,C,E,C,E,qB,C,E,sB,E,C,K,C,E,C,E,iB,C,E,kB,E,C,K,C,E,C,E,mB,C,E,K,E,K,E,C,K,A,E,kB,C,E,kB,E,C,K,C,E,C,E,e,C,E,K,E,K,E,C,K,A,E,kB,C,E,K,E,C,K,A,E,8B,C,E,K,E,K,E,C,K,A,E,8B,C,E,K,E,K,E,C,K,A,E,iC,C,E,K,E,K,E,C,K,A,E,e,C,E,K,E,I,E,C,K,A,E,kB,C,E,K,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,K,K,A,E,sB,C,E,kB,E,C,E,qB,C,E,K,E,C,K,A,E,kB,C,E,K,E,C,K,K,A,E,yB,C,E,K,E,K,E,C,K,A,E,wB,C,E,sB,E,C,K,C,E,C,E,qB,C,E,qB,E,C,E,sB,C,E,K,E,C,K,A,E,sB,C,E,K,E,C,K,K,K,K,K,K,K,K,K,K,K,K,K,K,K,K,K,K,K,K,A,E,uB,C,E,K,E,C,K,A,E,sB,C,E,mB,E,C,E,uB,C,E,K,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,iB,C,E,K,E,C,K,A,E,mB,C,E,K,E,K,E,C,K,A,E,qB,C,E,K,E,C,K,A,E,kB,C,E,4B,E,C,E,uB,C,E,kB,E,C,E,mB,C,E,K,E,C,K,A,E,mB,C,E,K,E,K,E,C,K,A,E,wB,C,E,K,E,C,K,A,E,oB,C,E,K,E,C,K,A,E,uB,C,E,K,E,I,E,C,K,A,E,mB,C,E,iB,E,C,E,gB,C,E,K,E,K,E,C,K,A,E,wB,C,E,sB,E,C,K,C,E,C,E,mB,C,E,K,E,K,E,C,K,A,E,mB,C,E,sB,E,C,K,C,E,C,E,mB,C,E,sB,E,C,K,C,E,C,E,oB,C,E,sB,E,C,K,C,E,C,E,qB,C,E,sB,E,C,K,C,E,C,E,wB,C,E,K,E,C,K,A,E,sB,C,E,K,E,C,K,A,E,gB,C,E,K,E,K,E,C,K,A,E,sB,C,E,kB,E,C,K,C,E,C,E,kB,C,E,K,E,K,E,C,K,A,E,kB,C,E,K,E,K,E,C,K,K,A,E,kB,C,E,sB,E,C,K,C,E,C,E,oB,C,E,K,E,K,E,C,K,A,E,iB,C,E,sB,E,C,K,C,E,C,E,qB,C,E,K,E,C,K,A,E,mB,C,E,K,E,K,E,C,K,A,E,kB,C,E,K,E,K,E,C,K,A,E,sB,C,E,mB,E,C,E,mB,C,E,I,E,C,K,A,E,mB,C,E,I,E,C,K,A,E,4B,C,E,uB,E,C,K,C,E,C,E,uB,C,E,I,E,I,E,C,K,A,E,oB,C,E,I,E,C,K,A,E,qB,C,E,mB,E,C,K,C,E,C,E,oB,C,E,K,E,C,K,A,E,qB,C,E,K,E,C,K,A,E,wB,C,E,mB,E,C,K,C,E,C,E,mB,C,E,c,E,C,K,C,E,C,E,mB,C,E,E,E,I,E,C,K,A,E,oB,C,E,I,E,C,K,A,E,sB,C,E,gB,E,C,K,C,E,C,E,Y,C,E,c,E,C,K,C,E,C,E,c,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,A,E,c,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,A,E,c,C,E,I,E,C,K,A,E,gB,C,E,I,E,C,K,A,E,iB,C,E,gB,E,C,E,c,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,e,C,E,a,E,C,K,C,E,C,E,Y,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,K,K,K,K,A,E,e,C,E,I,E,C,K,A,E,c,C,E,I,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,c,C,E,e,E,C,K,C,E,C,E,gB,C,E,e,E,C,E,a,C,E,I,E,C,K,A,E,kB,C,E,mB,E,C,E,iB,C,E,gB,E,C,E,iB,C,E,gB,E,C,E,e,C,E,I,E,C,K,A,E,a,C,E,a,E,C,E,gB,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,A,E,Y,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,K,K,K,K,A,E,gB,C,E,I,E,C,K,A,E,iB,C,E,I,E,I,E,C,K,A,E,Y,C,E,I,E,I,E,C,K,A,E,c,C,E,gB,E,C,E,c,C,E,I,E,I,E,C,K,A,E,mB,C,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,A,E,Y,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,gB,C,E,kB,E,C,E,e,C,E,I,E,C,K,A,E,gB,C,E,I,E,C,K,A,E,iB,C,E,I,E,I,E,C,K,A,E,a,C,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,e,C,E,c,E,C,E,iB,C,E,I,E,C,K,A,E,gB,C,E,iB,E,C,E,gB,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,mB,C,E,I,E,C,K,A,E,oB,C,E,iB,E,C,K,C,E,C,E,e,C,E,I,E,C,K,K,A,E,c,C,E,c,E,C,K,C,E,C,E,a,C,E,a,E,C,E,a,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,gB,C,E,I,E,C,K,A,E,c,C,E,I,E,C,K,A,E,c,C,E,a,E,C,K,C,E,C,E,e,C,E,I,E,I,E,C,K,A,E,oB,C,E,I,E,C,K,A,E,mB,C,E,I,E,C,K,A,E,Y,C,E,I,E,C,K,A,E,Y,C,E,I,E,C,K,A,E,kB,C,E,e,E,C,K,C,E,C,E,iB,C,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,K,A,E,gB,C,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,A,E,e,C,E,c,E,C,K,C,E,C,E,c,C,E,I,E,C,K,K,K,K,A,E,c,C,E,mB,E,C,E,gB,C,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,A,E,gB,C,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,K,A,E,qB,C,E,I,E,C,K,A,E,c,C,E,I,E,C,K,A,E,gB,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,c,C,E,I,E,C,K,A,E,gB,C,E,iB,E,C,E,c,C,E,e,E,C,E,e,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,A,E,a,C,E,I,E,C,K,A,E,qB,C,E,gB,E,C,E,mB,C,E,I,E,C,K,A,E,kB,C,E,mB,E,C,E,c,C,E,I,E,C,K,A,E,gB,C,E,I,E,C,K,A,E,iB,C,E,e,E,C,K,C,E,C,E,mB,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,c,C,E,I,E,C,K,K,A,E,qB,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,kB,C,E,I,E,E,E,C,K,A,E,mB,C,E,K,E,K,E,C,K,A,E,kB,C,E,E,E,G,E,C,K,A,E,sB,C,E,I,E,C,K,A,E,kB,C,E,iB,E,C,E,iB,C,E,E,E,G,E,C,K,A,E,qB,C,E,gB,E,C,K,C,E,C,E,mB,C,E,E,E,G,E,C,K,A,E,qB,C,E,iB,E,C,K,C,E,C,E,yB,C,E,K,E,C,K,A,E,qB,C,E,iB,E,C,K,C,E,C,E,mB,C,E,K,E,C,K,A,E,gB,C,E,mB,E,C,E,qB,C,E,I,E,I,E,C,K,A,E,qB,C,E,I,E,C,K,A,E,wB,C,E,I,E,I,E,C,K,A,E,qB,C,E,mB,E,C,E,mB,C,E,mB,E,C,E,mB,C,E,I,E,C,K,A,E,kB,C,E,I,E,C,K,A,E,mB,C,E,I,E,I,E,C,K,A,E,gB,C,E,sB,E,C,E,qB,C,E,I,E,C,K,A,E,sB,C,E,I,E,I,E,C,K,A,E,sB,C,E,I,E,I,E,C,K,A,E,gB,C,E,mB,E,C,E,kB,C,E,mB,E,C,E,kB,C,E,I,E,C,K,A,E,uB,C,E,qB,E,C,E,kB,C,E,qB,E,C,E,mB,C,E,I,E,I,E,C,K,A,E,qB,C,E,mB,E,C,E,qB,C,E,sB,E,C,E,iB,C,E,kB,E,C,E,uB,C,E,wB,E,C,E,c,C,E,qB,E,C,E,mB,C,E,kB,E,C,E,c,C,E,oB,E,C,E,c,C,E,iB,E,C,E,I,C,E,kB,E,C,E,Q,C,E,kB,E,C,E,kB,C,E,kB,E,C,E,iB,C,E,mB,E,C,E,iB,C,E,kB,E,C,K,C,E,C,E,kB,C,E,mB,E,C,E,sB,C,E,mB,E,C,E,iB,C,E,oB,E,C,E,sB,C,E,iB,E,C,E,e,C,E,qB,E,C,E,oB,C,E,mB,E,C,E,qB,C,E,iB,E,C,E,K,C,E,iB,E,C,E,I,C,E,gB,E,C,E,I,C,E,iB,E,C,E,Q,C,E,mB,E,C,E,M,C,E,e,E,C,E,K,C,E,gB,E,C,E,U,C,E,C,E,Y,C,E,U,E,C,E,Y,C,E,G,E,a,C,E,I,E,a,C,E,I,E,a,C,E,I,E,Y,C,E,I,E,Y,C,E,I,E,Y,C,E,I,E,Y,C,E,I,E,Y,C,E,I,E,Y,C,E,I,E,Y,C,E,I,E,Y,C,E,I,E,Y,C,E,U,E,C,E,Y,C,E,E,E,a,C,E,G,E,a,C,E,G,E,a,C,E,G,E,a,C,E,G,E,a,C,E,G,E,Y,C,E,G,E,Y,C,E,G,E,Y,C,E,G,E,Y,C,E,G,E,Y,C,E,G,E,Y,C,E,G,E,Y,C,E,G,E,Y,C,E,G,E,W,C,E,U,E,C,E,gB,C,E,U,E,C,E,U,C,E,U,E,C,E,U,C,E,C,E,gB,C,E,U,E,C,E,W,C,E,U,E,C,E,mB,C,E,kB,E,C,K,C,E,C,E,iB,C,E,G,E,I,E,C,K,A,E,mB,C,E,I,E,C,K,A,E,gB,C,E,I,E,I,E,C,K,A,E,iB,C,E,gB,E,C,K,C,E,C,E,kB,C,E,G,E,I,E,C,K,K,K,K,K,K,A,E,gB,C,E,G,E,I,E,C,K,K,K,K,K,A,E,oB,C,E,gB,E,C,K,C,E,C,E,kB,C,E,G,E,I,E,C,K,K,K,A,E,mB,C,E,I,E,I,E,C,K,A,E,kB,C,E,G,E,I,E,C,K,A,E,kB,C,E,gB,E,C,K,C,E,C,E,kB,C,E,I,E,I,E,C,K,A,E,oB,C,E,gB,E,C,K,C,E,C,E,gB,C,E,E,E,G,E,C,K,A,E,mB,C,E,G,E,I,E,C,K,A,E,kB,C,E,gB,E,C,K,C,E,C,E,kB,C,E,I,E,I,E,C,K,K,A,E,qB,C,E,gB,E,C,K,C,E,C,E,kB,C,E,I,E,C,K,A,E,gB,C,E,gB,E,C,K,C,E,C,E,qB,C,E,I,E,C,K,A,E,c,C,E,c,E,C,E,e,C,E,I,E,C,K,A,E,c,C,E,I,E,I,E,C,K,A,E,gB,C,E,E,E,G,E,C,K,A,E,mB,C,E,kB,E,C,K,C,E,C,E,gB,C,E,E,E,G,E,C,K,K,K,K,A,E,oB,C,E,kB,E,C,K,C,E,C,E,gB,C,E,G,E,I,E,C,K,A,E,e,C,E,G,E,I,E,C,K,A,E,mB,C,E,kB,E,C,K,C,E,C,E,e,C,E,I,E,C,K,A,E,gB,C,E,e,E,C,K,C,E,C,E,gB,C,E,I,E,C,K,A,E,iB,C,E,e,E,C,E,c,C,E,gB,E,C,K,C,E,C,E,e,C,E,G,E,I,E,C,K,K,A,E,mB,C,E,kB,E,C,K,C,E,C,E,gB,C,E,G,E,I,E,C,K,K,A,E,c,C,E,I,E,I,E,C,K,A,E,c,C,E,G,E,I,E,C,K,K,K,A,E,gB,C,E,I,E,C,K,A,E,oB,C,E,c,E,C,K,C,E,C,E,kB,C,E,kB,E,C,K,C,E,C,E,iB,C,E,I,E,C,K,A,E,oB,C,E,I,E,C,K,K,A,E,gB,C,E,kB,E,C,K,C,E,C,E,e,C,E,I,E,I,E,C,K,A,E,mB,C,E,gB,E,C,K,C,E,C,E,iB,C,E,I,E,I,E,C,K,A,E,gB,C,E,G,E,I,E,C,K,A,E,kB,C,E,kB,E,C,E,mB,C,E,I,E,C,K,A,E,kB,C,E,c,E,C,E,e,C,E,gB,E,C,K,C,E,C,E,iB,C,E,c,E,C,K,C,E,C,E,gB,C,E,G,E,I,E,C,K,A,E,iB,C,E,I,E,I,E,C,K,A,E,mB,C,E,I,E,C,K,A,E,gB,C,E,G,E,I,E,C,K,A,E,gB,C,E,kB,E,C,K,C,E,C,E,oB,C,E,c,E,C,E,gB,C,E,G,E,I,E,C,K,K,K,A,E,Q,C,E,C,E,G,C,E,gB,E,C,K,C,E,C,E,U,C,E,gB,E,C,K,C,E,C,E,I,C,E,U,E,C,E,Q,C,E,U,E,C,E,Q,C,E,U,E,C,E,K,C,E,U,E,C,E,U,C,E,U,E,C,E,I,C,E,mB,E,C,E,S,C,E,iB,E,C,E,Q,C,E,iB,E,C,K,C,E,C,E,sB,C,E,iB,E,C,K,C,E,C,E,gB,C,E,I,E,C,K,A,E,mB,C,E,e,E,C,K,C,E,C,E,e,C,E,c,E,C,K,C,E,C,E,gB,C,E,iB,E,C,K,C,E,C,E,mB,C,E,kB,E,C,K,C,E,C,E,c,C,E,a,E,C,K,C,E,C,E,kB,C,E,I,E,C,K,K,A,E,mB,C,E,I,E,C,K,A,E,iB,C,E,iB,E,C,K,C,E,C,E,iB,C,E,a,E,C,K,C,E,C,E,K,C,E,c,E,C,E,O,C,E,iB,E,C,E,Q,C,E,kB,E,C,E,M,C,E,a,E,C,E,U,C,E,oB,E,C,E,M,C,E,iB,E,C,E,I,C,E,kB,E,C,E,I,C,E,kB,E,C,E,Q,C,E,iB,E,C,E,mB,C,E,kB,E,C,E,iB,C,E,mB,E,C,E,iB,C,E,sB,E,C,E,G,C,E,mB,E,C,K,C,E,C,E,U,C,E,kB,E,C,E,O,C,E,iB,E,C,E,I,C,E,gB,E,C,E,Q,C,E,sB,E,C,E,e,C,E,I,E,C,K,A,E,mB,C,E,I,E,I,E,C,K,K,A,E,uB,C,E,I,E,C,K,A,E,kB,C,E,I,E,I,E,C,K,A,E,gB,C,E,uB,E,C,K,C,E,C,E,iB,C,E,K,E,K,E,C,K,A,E,gB,C,E,I,E,C,K,A,E,oB,C,E,iB,E,C,E,kB,C,E,I,E,C,K,A,E,e,C,E,I,E,C,K,A,E,mB,C,E,iB,E,C,K,C,E,C,E,oB,C,E,K,E,C,K,A,E,kB,C,E,K,E,C,K,A,E,sB,C,E,I,E,C,K,K,A,E,e,C,E,I,E,C,K,K,A,E,mB,C,E,K,E,C,K,A,E,mB,C,E,mB,E,C,K,C,E,C,E,iB,C,E,I,E,C,K,A,E,qB,C,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,A,E,oB,C,E,I,E,C,K,A,E,iB,C,E,iB,E,C,K,C,E,C,E,oB,C,E,K,E,C,K,A,E,iB,C,E,oB,E,C,K,C,E,C,E,gB,C,E,I,E,C,K,A,E,e,C,E,K,E,C,K,A,E,kB,C,E,I,E,I,E,C,K,A,E,iB,C,E,I,E,C,K,A,E,oB,C,E,K,E,C,K,K,A,E,gB,C,E,I,E,C,K,A,E,mB,C,E,K,E,C,K,A,E,kB,C,E,sB,E,C,K,C,E,C,E,iB,C,E,sB,E,C,K,C,E,C,E,uB,C,E,I,E,C,K,K,K,A,E,oB,C,E,K,E,C,K,A,E,iB,C,E,e,E,C,K,C,E,C,E,gB,C,E,oB,E,C,K,C,E,C,E,iB,C,E,K,E,C,K,A,E,iB,C,E,I,E,C,K,K,K,K,K,A,E,oB,C,E,I,E,C,K,A,E,e,C,E,uB,E,C,K,C,E,C,E,e,C,E,iB,E,C,K,C,E,C,E,iB,C,E,iB,E,C,K,C,E,C,E,c,C,E,uB,E,C,K,C,E,C,E,O,C,E,gB,E,C,E,S,C,E,gB,E,C,E,I,C,E,c,E,C,E,I,C,E,a,E,C,E,U,C,E,iB,E,C,K,C,E,C,E,O,C,E,kB,E,C,E,I,C,E,U,E,C,E,Y,C,E,oB,E,C,E,c,C,E,e,E,C,E,a,C,E,kB,E,C,K,C,E,C,E,a,C,E,kB,E,C,E,kB,C,E,+B,E,C,E,a,C,E,mB,E,C,E,Y,C,E,mB,E,C,E,oB,C,E,uB,E,C,E,c,C,E,kB,E,C,E,c,C,E,iB,E,C,E,a,C,E,sB,E,C,E,W,C,E,oB,E,C,K,C,E,C,E,I,C,E,U,E,C,E,U,C,E,U,E,C,E,O,C,E,gB,E,C,E,I,C,E,gB,E,C,E,K,C,E,U,E,C,C,C,EC4BJ,SAASQ,EAAgB7G,CAAM,EAC7B,IAAMC,EAAQC,KAAKC,KAAK,CAACD,KAAKE,GAAG,CAACJ,GAAU,IAEtCK,EAAOL,EAAS,EAAI,IAAM,IAEhC,MAAA,GAAAM,MAAA,CAAUD,GAAIC,MAAA,CAAGyG,EAAgB9G,GAAM,KAAAK,MAAA,CAAIyG,EAH/B/G,EAAS,IAIvB,CAEA,SAAS+G,EAAgBvG,CAAK,EAC5B,IAAMC,EAAUP,KAAKE,GAAG,CAACI,GACnBE,EAASD,EAAU,GAAK,IAAM,GACpC,MAAA,GAAAH,MAAA,CAAUI,GAAMJ,MAAA,CAAGG,EACrB,C,I,E,C,e,CCpCMuG,EAAiBxa,OAAOO,IAAI,CAACqU,EAAK/D,SAAS,EAAE3R,MAAM,CACnDmC,EAAY,CAAA,EACZwP,EAAY,CAAA,EACd4J,EAAoB,EA2BjB,SAASI,EAAYpG,CAAI,MAKPC,EAHvB,OADK7D,CAAS,CAAC4D,EAAK,GAIGC,EAJeyF,ADnCzB,SAAuBvF,CAAI,CAAEH,CAAI,EAC9C,IAAMC,EAAWE,EAAK/D,SAAS,CAAC4D,EAAK,CACrC,GAAI,CAACC,EAAU,OAAO,KAEtB,IAAAG,EAA4BH,EAArBzV,CAAC,CAAE6V,EAAOD,AAAG,KAAA,IAAHA,EAAG,KAAIA,EAElBE,EAAEqF,EAAAA,EACHtC,CAAAA,EAFWhD,EAAUF,EAAK/D,SAAS,CAACiE,EAAQ,CAAG,CAAA,GAG/CF,EAAK/D,SAAS,CAAC4D,EAAK,EAGnBpT,EAAY0T,EAAGhE,CAAC,EAAI,EAAE,CACtBiE,EAAYD,EAAGjE,CAAC,CAChBmE,EAAYlV,OAAOmV,SAAS,CAACH,EAAG/D,CAAC,EAAI+D,EAAG/D,CAAC,CAAGgE,EAE5CG,EAAS,CACbV,KAAAA,EACApT,UAAAA,EACA2T,UAAAA,EACAI,aAAciF,EAAgBrF,GAC9BC,UAAAA,EACAI,aAAcgF,EAAgBpF,GAC9BH,QAAAA,CACD,EAED,OADIJ,EAAS1V,CAAC,EAAEmW,CAAAA,EAAOG,UAAU,CAAG,CAAA,CAApC,EACOH,CACT,ECSsDP,EAAMH,MAM1D5D,CAAS,CAAC6D,EAASD,IAAI,CAAC,CAAGC,EAC3B+F,EAAoBza,OAAOO,IAAI,CAACmU,GAAUxV,MAAM,EANzC2R,CAAS,CAAC4D,EAAK,CAAA2F,EAAOvJ,CAAAA,EAAAA,CAAS,CAAC4D,EAAK,EAAI,IAClD,CJ9BA,MAAM,EAAM,AAAA,WIQkC,IAAde,EAAOzU,UAAA7B,MAAA,CAAA,GAAA6B,AAAA0U,KAAAA,IAAA1U,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,CAAA,EACxC,GAAIyZ,IAAmBC,EACrB,IAAA,IAAA/E,EAAAC,EAAAA,EAAmB3V,OAAOO,IAAI,CAACqU,EAAK/D,SAAS,EAAC6E,EAAAC,EAAAzW,MAAA,CAAAwW,IAC5CmF,EADalF,CAAA,CAAAD,EAAA,EAIjB,MA4CIJ,AAAe,CAAA,IADFM,AAAIJ,CAAAA,AA3CcA,GA2CH,CAAA,CAAA,EAAzBF,UAAU,CA3COzE,EA6CjB7Q,OAAOO,IAAI,CA7CMsQ,GA6CAgF,MAAM,CAAC,SAACC,CAAQ,CAAEC,CAAG,EAE3C,OADKC,AA9CiBnF,CA8Cd,CAACkF,EAAI,CAACT,UAAU,EAAEtV,OAAOiW,MAAM,CAACH,EAAQoE,EAAA,CAAA,EAAInE,EAAMC,AA9CpCnF,CA8CuC,CAACkF,EAAI,GAC3DD,CACR,EAAE,CAAA,EA/CL,IJbM,EAAQ,SAAS,cAAc,CAAC,SAChC,EAAM,SAAS,cAAc,CAAC,OAEpC,GAAI,GAAS,EAAK,CAChB,IAAM,EAAM,IAAI,KACV,EAAW,EAAI,WAAW,GAE1B,EAAU,CAAC,CAAC,EAAE,EAAI,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,GAChD,CAAA,EAAI,WAAW,CAAG,CAAC,EAAE,EAAS,CAAC,EAAE,EAAQ,CAAC,CAE1C,IAAI,EAA6B,EAAE,CAGjC,EADE,AAhBU,KAgBV,EACY,CAAC,EAAE,CAEH,CAAC,AAnBH,GAmBa,EAAU,CAAE,CAAA,GAAK,EAnB9B,EAmByC,EAAS,CAEhE,OAAO,OAAO,CAAC,GAAK,OAAO,CAAC,CAAC,CAAC,EAAM,EAAQ,IAE1C,IAAM,EAAS,KAAK,KAAK,CAAC,EAAQ,SAAS,CAAG,IAC1C,EAAY,QAAQ,CAAC,IAIvB,AAHkB,AAAA,CAAA,SIegBuB,CAAM,EAAgB,IAAd7B,EAAOzU,UAAA7B,MAAA,CAAA,GAAA6B,AAAA0U,KAAAA,IAAA1U,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,CAAA,EAGxD,MAAOuW,AADQ5C,CAAAA,AADEmG,CAAAA,EAAYxD,IAAW,CAAA,CAAA,EAChBhW,SAAS,EAAI,EAAE,AAAF,EACvBkW,GAAG,CAAC,SAACxG,CAAC,EAAA,OAAK4J,AAxBpB,SAAoBlD,CAAE,EAAgB,IAKrBC,EALOlC,EAAOzU,UAAA7B,MAAA,CAAA,GAAA6B,AAAA0U,KAAAA,IAAA1U,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,CAAA,EAEvC,OADKM,CAAS,CAACoW,EAAG,GAIIC,EAJaoC,AFvBtB,SAAsBlF,CAAI,CAAE6C,CAAE,EAC3C,IAAMhD,EAAOG,EAAKvT,SAAS,CAACoW,EAAG,CAC/B,GAAI,CAAChD,EAAM,OAAO,KAElB,IAAMmD,EAAQmC,CAWdF,GAAAA,CAAAA,EAKO7Z,OAAOO,IAAI,CAACqU,AAhBWA,EAgBN/D,SAAS,EAAEgF,MAAM,CAAC,SAACV,CAAM,CAAEsC,CAAE,EACnD,IAAM1C,EAAKH,AAjBiBA,EAiBZ/D,SAAS,CAAC4G,EAAG,CACtB1G,EAAQgE,EAARhE,CAAC,CAAE9R,EAAK8V,EAAL9V,CAAC,CACL6Y,EAAUlD,AAnBYA,EAmBP/D,SAAS,CAAC5R,EAAE,EAAI,CAAA,EAC/BoC,EAAY0P,GAAK+G,EAAQ/G,CAAC,CAEhC,GAAI,CAAC1P,EAAW,OAAO8T,EAAO,IAEC4C,EAFDC,EAAAiC,A,S,C,C,C,E,I,E,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,C,E,C,G,M,O,C,I,C,E,A,S,C,C,C,E,G,E,C,G,U,O,E,O,E,E,K,G,I,E,A,C,C,C,E,Q,C,I,C,G,K,C,E,I,M,W,G,E,W,E,C,E,E,W,C,I,A,E,Q,G,Q,E,M,I,C,G,c,G,2C,I,C,G,E,E,K,G,K,C,C,E,E,E,C,G,C,E,C,E,I,E,E,E,W,E,M,C,E,E,E,W,O,G,E,M,C,C,K,C,C,E,C,K,C,E,M,C,C,I,A,C,E,E,S,C,E,M,C,E,E,C,C,C,M,A,U,wI,C,I,E,E,C,E,E,C,E,M,C,E,W,E,E,I,C,E,E,E,W,I,E,E,I,G,O,E,E,I,C,C,E,E,S,C,E,E,C,E,E,C,E,E,W,G,C,G,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,C,EAER5Y,GAAS,GAAA,CAA/B,IAAA2W,EAAAU,CAAA,GAAAX,CAAAA,AAAAA,CAAAA,EAAAC,EAAA5Y,CAAA,EAAA,EAAAuZ,IAAA,EAAiC,CAAA,IAAtBjB,EAAOK,EAAA7X,KAAA,AACXiV,CAAAA,CAAM,CAACuC,EAAQ,EAClB1X,OAAOiW,MAAM,CAACd,EAAM+E,EAAA,CAAA,EAAIxC,EAAU,CAACqB,QAAS,EAAE,CAAEC,IAAK,EAAA,AAAE,IAC5CvD,KAAAA,IAATV,EAAG/V,CAAC,EAAgBmW,CAAM,CAACuC,EAAQ,CAACqB,OAAO,CAACnY,IAAI,CAAC6W,GACrDtC,CAAM,CAACuC,EAAQ,CAACsB,GAAG,CAACpY,IAAI,CAAC6W,EAC3B,CAAC,CAAA,MAAAwB,EAAA,CAAAjB,EAAA7Y,CAAA,CAAA8Z,EAAA,QAAA,CAAAjB,EAAAY,CAAA,EAAA,CAED,OAAOzD,CACR,EAAE,CAAA,EArBgCP,EAC5BiF,EAZ4B,CAACpC,EAAG,EAAI,CAAA,EAE3C,MAAO,CACLA,GAAAA,EACAhD,KAAAA,EACA5D,UAAW+G,EAAMmB,OAAO,EAAI,EAAE,CAC9BG,aAActB,EAAMoB,GAAG,EAAI,EAAA,AAC5B,CACH,EEWkDpE,EAAM6C,KAMtDpW,CAAAA,CAAS,CAACqW,EAAQD,EAAE,CAAC,CAAGC,CAAxBrW,EALO2Z,AA8CT,SAAwBtD,CAAO,CAAElC,CAAO,EACtC,GAAI,CAACkC,EAAS,OAAO,KACrB,IAAOpC,EAAU8D,AAAI5D,CAAAA,GAAW,CAAA,CAAA,EAAzBF,UAAU,AACgBoC,CAAAA,EAA1BwB,YAAY,CAAKG,IAAAA,EAAKqC,A,S,C,C,C,E,G,M,E,M,C,E,I,E,E,E,A,S,C,C,C,E,G,M,E,M,C,E,I,E,C,E,I,I,K,E,G,A,C,C,C,E,c,C,I,C,E,G,C,G,E,Q,C,G,Q,C,C,C,E,C,C,C,E,A,C,O,C,E,E,G,G,O,qB,C,C,I,E,O,qB,C,G,I,E,E,E,E,M,C,I,E,C,C,E,C,E,Q,C,I,A,C,C,C,E,oB,C,I,C,E,I,C,C,C,E,C,C,C,E,A,C,C,O,C,EAAIhE,EAAOiE,GAClC5G,EAAKO,EAAaoC,EAAQwB,YAAY,CAAGxB,EAAQ7G,SAAS,CAChE,OAAAuJ,EAAAA,EAAA,CAAA,EAAWf,GAAK,CAAA,EAAA,CAAExI,UAAWkE,CAAE,EACjC,EApDwB1T,CAAS,CAACoW,EAAG,CAAEjC,EACvC,EAqBsCzE,EAAGyE,EAAS,EAClD,CJnBwB,EAAwB,GAAM,GAAG,CACjD,AAAC,GAAY,EAAQ,IAAI,EAEjB,OAAO,CAAC,AAAC,IACjB,IAAM,EAAK,SAAS,aAAa,CAAC,KAClC,CAAA,EAAG,WAAW,CAAG,CAAC,EAAE,EAAQ,EAAE,EAAE,EAAK,EAAE,EAAE,EAAQ,SAAS,CAAG,GAAG,CAAC,CACjE,EAAM,WAAW,CAAC,EACpB,EAEJ,EACF","sources":["<anon>","index.ts","node_modules/countries-and-timezones/esm/index.js","node_modules/countries-and-timezones/src/build-country.js","node_modules/countries-and-timezones/src/build-timezone.js","node_modules/countries-and-timezones/src/index.js"],"sourcesContent":["function $12e2750474abc44b$var$_arrayLikeToArray(r, a) {\n    (null == a || a > r.length) && (a = r.length);\n    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];\n    return n;\n}\nfunction $12e2750474abc44b$var$_arrayWithHoles(r) {\n    if (Array.isArray(r)) return r;\n}\nfunction $12e2750474abc44b$var$_createForOfIteratorHelper(r, e) {\n    var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (!t) {\n        if (Array.isArray(r) || (t = $12e2750474abc44b$var$_unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n            t && (r = t);\n            var n = 0, F = function() {};\n            return {\n                s: F,\n                n: function() {\n                    return n >= r.length ? {\n                        done: !0\n                    } : {\n                        done: !1,\n                        value: r[n++]\n                    };\n                },\n                e: function(r) {\n                    throw r;\n                },\n                f: F\n            };\n        }\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var o, a = !0, u = !1;\n    return {\n        s: function() {\n            t = t.call(r);\n        },\n        n: function() {\n            var r = t.next();\n            return a = r.done, r;\n        },\n        e: function(r) {\n            u = !0, o = r;\n        },\n        f: function() {\n            try {\n                a || null == t.return || t.return();\n            } finally{\n                if (u) throw o;\n            }\n        }\n    };\n}\nfunction $12e2750474abc44b$var$_defineProperty(e, r, t) {\n    return (r = $12e2750474abc44b$var$_toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\nfunction $12e2750474abc44b$var$_iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) {\n                if (Object(t) !== t) return;\n                f = !1;\n            } else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction $12e2750474abc44b$var$_nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction $12e2750474abc44b$var$ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction $12e2750474abc44b$var$_objectSpread2(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? $12e2750474abc44b$var$ownKeys(Object(t), !0).forEach(function(r) {\n            $12e2750474abc44b$var$_defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : $12e2750474abc44b$var$ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction $12e2750474abc44b$var$_objectWithoutProperties(e, t) {\n    if (null == e) return {};\n    var o, r, i = $12e2750474abc44b$var$_objectWithoutPropertiesLoose(e, t);\n    if (Object.getOwnPropertySymbols) {\n        var s = Object.getOwnPropertySymbols(e);\n        for(r = 0; r < s.length; r++)o = s[r], t.includes(o) || ({}).propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n    }\n    return i;\n}\nfunction $12e2750474abc44b$var$_objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (e.includes(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\nfunction $12e2750474abc44b$var$_slicedToArray(r, e) {\n    return $12e2750474abc44b$var$_arrayWithHoles(r) || $12e2750474abc44b$var$_iterableToArrayLimit(r, e) || $12e2750474abc44b$var$_unsupportedIterableToArray(r, e) || $12e2750474abc44b$var$_nonIterableRest();\n}\nfunction $12e2750474abc44b$var$_toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction $12e2750474abc44b$var$_toPropertyKey(t) {\n    var i = $12e2750474abc44b$var$_toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction $12e2750474abc44b$var$_unsupportedIterableToArray(r, a) {\n    if (r) {\n        if (\"string\" == typeof r) return $12e2750474abc44b$var$_arrayLikeToArray(r, a);\n        var t = ({}).toString.call(r).slice(8, -1);\n        return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? $12e2750474abc44b$var$_arrayLikeToArray(r, a) : void 0;\n    }\n}\nvar $12e2750474abc44b$var$countries$1 = {\n    AD: \"Andorra\",\n    AE: \"United Arab Emirates\",\n    AF: \"Afghanistan\",\n    AG: \"Antigua and Barbuda\",\n    AI: \"Anguilla\",\n    AL: \"Albania\",\n    AM: \"Armenia\",\n    AO: \"Angola\",\n    AQ: \"Antarctica\",\n    AR: \"Argentina\",\n    AS: \"American Samoa\",\n    AT: \"Austria\",\n    AU: \"Australia\",\n    AW: \"Aruba\",\n    AX: \"\\xc5land Islands\",\n    AZ: \"Azerbaijan\",\n    BA: \"Bosnia and Herzegovina\",\n    BB: \"Barbados\",\n    BD: \"Bangladesh\",\n    BE: \"Belgium\",\n    BF: \"Burkina Faso\",\n    BG: \"Bulgaria\",\n    BH: \"Bahrain\",\n    BI: \"Burundi\",\n    BJ: \"Benin\",\n    BL: \"Saint Barth\\xe9lemy\",\n    BM: \"Bermuda\",\n    BN: \"Brunei\",\n    BO: \"Bolivia\",\n    BQ: \"Caribbean Netherlands\",\n    BR: \"Brazil\",\n    BS: \"Bahamas\",\n    BT: \"Bhutan\",\n    BW: \"Botswana\",\n    BY: \"Belarus\",\n    BZ: \"Belize\",\n    CA: \"Canada\",\n    CC: \"Cocos Islands\",\n    CD: \"Democratic Republic of the Congo\",\n    CF: \"Central African Republic\",\n    CG: \"Republic of the Congo\",\n    CH: \"Switzerland\",\n    CI: \"Ivory Coast\",\n    CK: \"Cook Islands\",\n    CL: \"Chile\",\n    CM: \"Cameroon\",\n    CN: \"China\",\n    CO: \"Colombia\",\n    CR: \"Costa Rica\",\n    CU: \"Cuba\",\n    CV: \"Cabo Verde\",\n    CW: \"Cura\\xe7ao\",\n    CX: \"Christmas Island\",\n    CY: \"Cyprus\",\n    CZ: \"Czechia\",\n    DE: \"Germany\",\n    DJ: \"Djibouti\",\n    DK: \"Denmark\",\n    DM: \"Dominica\",\n    DO: \"Dominican Republic\",\n    DZ: \"Algeria\",\n    EC: \"Ecuador\",\n    EE: \"Estonia\",\n    EG: \"Egypt\",\n    EH: \"Western Sahara\",\n    ER: \"Eritrea\",\n    ES: \"Spain\",\n    ET: \"Ethiopia\",\n    FI: \"Finland\",\n    FJ: \"Fiji\",\n    FK: \"Falkland Islands\",\n    FM: \"Micronesia\",\n    FO: \"Faroe Islands\",\n    FR: \"France\",\n    GA: \"Gabon\",\n    GB: \"United Kingdom\",\n    GD: \"Grenada\",\n    GE: \"Georgia\",\n    GF: \"French Guiana\",\n    GG: \"Guernsey\",\n    GH: \"Ghana\",\n    GI: \"Gibraltar\",\n    GL: \"Greenland\",\n    GM: \"Gambia\",\n    GN: \"Guinea\",\n    GP: \"Guadeloupe\",\n    GQ: \"Equatorial Guinea\",\n    GR: \"Greece\",\n    GS: \"South Georgia and the South Sandwich Islands\",\n    GT: \"Guatemala\",\n    GU: \"Guam\",\n    GW: \"Guinea-Bissau\",\n    GY: \"Guyana\",\n    HK: \"Hong Kong\",\n    HN: \"Honduras\",\n    HR: \"Croatia\",\n    HT: \"Haiti\",\n    HU: \"Hungary\",\n    ID: \"Indonesia\",\n    IE: \"Ireland\",\n    IL: \"Israel\",\n    IM: \"Isle of Man\",\n    IN: \"India\",\n    IO: \"British Indian Ocean Territory\",\n    IQ: \"Iraq\",\n    IR: \"Iran\",\n    IS: \"Iceland\",\n    IT: \"Italy\",\n    JE: \"Jersey\",\n    JM: \"Jamaica\",\n    JO: \"Jordan\",\n    JP: \"Japan\",\n    KE: \"Kenya\",\n    KG: \"Kyrgyzstan\",\n    KH: \"Cambodia\",\n    KI: \"Kiribati\",\n    KM: \"Comoros\",\n    KN: \"Saint Kitts and Nevis\",\n    KP: \"North Korea\",\n    KR: \"South Korea\",\n    KW: \"Kuwait\",\n    KY: \"Cayman Islands\",\n    KZ: \"Kazakhstan\",\n    LA: \"Laos\",\n    LB: \"Lebanon\",\n    LC: \"Saint Lucia\",\n    LI: \"Liechtenstein\",\n    LK: \"Sri Lanka\",\n    LR: \"Liberia\",\n    LS: \"Lesotho\",\n    LT: \"Lithuania\",\n    LU: \"Luxembourg\",\n    LV: \"Latvia\",\n    LY: \"Libya\",\n    MA: \"Morocco\",\n    MC: \"Monaco\",\n    MD: \"Moldova\",\n    ME: \"Montenegro\",\n    MF: \"Saint Martin\",\n    MG: \"Madagascar\",\n    MH: \"Marshall Islands\",\n    MK: \"North Macedonia\",\n    ML: \"Mali\",\n    MM: \"Myanmar\",\n    MN: \"Mongolia\",\n    MO: \"Macao\",\n    MP: \"Northern Mariana Islands\",\n    MQ: \"Martinique\",\n    MR: \"Mauritania\",\n    MS: \"Montserrat\",\n    MT: \"Malta\",\n    MU: \"Mauritius\",\n    MV: \"Maldives\",\n    MW: \"Malawi\",\n    MX: \"Mexico\",\n    MY: \"Malaysia\",\n    MZ: \"Mozambique\",\n    NA: \"Namibia\",\n    NC: \"New Caledonia\",\n    NE: \"Niger\",\n    NF: \"Norfolk Island\",\n    NG: \"Nigeria\",\n    NI: \"Nicaragua\",\n    NL: \"Netherlands\",\n    NO: \"Norway\",\n    NP: \"Nepal\",\n    NR: \"Nauru\",\n    NU: \"Niue\",\n    NZ: \"New Zealand\",\n    OM: \"Oman\",\n    PA: \"Panama\",\n    PE: \"Peru\",\n    PF: \"French Polynesia\",\n    PG: \"Papua New Guinea\",\n    PH: \"Philippines\",\n    PK: \"Pakistan\",\n    PL: \"Poland\",\n    PM: \"Saint Pierre and Miquelon\",\n    PN: \"Pitcairn\",\n    PR: \"Puerto Rico\",\n    PS: \"Palestine\",\n    PT: \"Portugal\",\n    PW: \"Palau\",\n    PY: \"Paraguay\",\n    QA: \"Qatar\",\n    RE: \"R\\xe9union\",\n    RO: \"Romania\",\n    RS: \"Serbia\",\n    RU: \"Russia\",\n    RW: \"Rwanda\",\n    SA: \"Saudi Arabia\",\n    SB: \"Solomon Islands\",\n    SC: \"Seychelles\",\n    SD: \"Sudan\",\n    SE: \"Sweden\",\n    SG: \"Singapore\",\n    SH: \"Saint Helena, Ascension and Tristan da Cunha\",\n    SI: \"Slovenia\",\n    SJ: \"Svalbard and Jan Mayen\",\n    SK: \"Slovakia\",\n    SL: \"Sierra Leone\",\n    SM: \"San Marino\",\n    SN: \"Senegal\",\n    SO: \"Somalia\",\n    SR: \"Suriname\",\n    SS: \"South Sudan\",\n    ST: \"Sao Tome and Principe\",\n    SV: \"El Salvador\",\n    SX: \"Sint Maarten\",\n    SY: \"Syria\",\n    SZ: \"Eswatini\",\n    TC: \"Turks and Caicos Islands\",\n    TD: \"Chad\",\n    TF: \"French Southern Territories\",\n    TG: \"Togo\",\n    TH: \"Thailand\",\n    TJ: \"Tajikistan\",\n    TK: \"Tokelau\",\n    TL: \"Timor-Leste\",\n    TM: \"Turkmenistan\",\n    TN: \"Tunisia\",\n    TO: \"Tonga\",\n    TR: \"T\\xfcrkiye\",\n    TT: \"Trinidad and Tobago\",\n    TV: \"Tuvalu\",\n    TW: \"Taiwan\",\n    TZ: \"Tanzania\",\n    UA: \"Ukraine\",\n    UG: \"Uganda\",\n    UM: \"United States Minor Outlying Islands\",\n    US: \"United States of America\",\n    UY: \"Uruguay\",\n    UZ: \"Uzbekistan\",\n    VA: \"Holy See\",\n    VC: \"Saint Vincent and the Grenadines\",\n    VE: \"Venezuela\",\n    VG: \"Virgin Islands (UK)\",\n    VI: \"Virgin Islands (US)\",\n    VN: \"Vietnam\",\n    VU: \"Vanuatu\",\n    WF: \"Wallis and Futuna\",\n    WS: \"Samoa\",\n    YE: \"Yemen\",\n    YT: \"Mayotte\",\n    ZA: \"South Africa\",\n    ZM: \"Zambia\",\n    ZW: \"Zimbabwe\"\n};\nvar $12e2750474abc44b$var$timezones$1 = {\n    \"Africa/Abidjan\": {\n        u: 0,\n        c: [\n            \"CI\",\n            \"BF\",\n            \"GH\",\n            \"GM\",\n            \"GN\",\n            \"IS\",\n            \"ML\",\n            \"MR\",\n            \"SH\",\n            \"SL\",\n            \"SN\",\n            \"TG\"\n        ]\n    },\n    \"Africa/Accra\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"GH\"\n        ],\n        r: 1\n    },\n    \"Africa/Addis_Ababa\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"ET\"\n        ],\n        r: 1\n    },\n    \"Africa/Algiers\": {\n        u: 60,\n        c: [\n            \"DZ\"\n        ]\n    },\n    \"Africa/Asmara\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"ER\"\n        ],\n        r: 1\n    },\n    \"Africa/Asmera\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"ER\"\n        ],\n        r: 1\n    },\n    \"Africa/Bamako\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"ML\"\n        ],\n        r: 1\n    },\n    \"Africa/Bangui\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"CF\"\n        ],\n        r: 1\n    },\n    \"Africa/Banjul\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"GM\"\n        ],\n        r: 1\n    },\n    \"Africa/Bissau\": {\n        u: 0,\n        c: [\n            \"GW\"\n        ]\n    },\n    \"Africa/Blantyre\": {\n        a: \"Africa/Maputo\",\n        c: [\n            \"MW\"\n        ],\n        r: 1\n    },\n    \"Africa/Brazzaville\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"CG\"\n        ],\n        r: 1\n    },\n    \"Africa/Bujumbura\": {\n        a: \"Africa/Maputo\",\n        c: [\n            \"BI\"\n        ],\n        r: 1\n    },\n    \"Africa/Cairo\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"EG\"\n        ]\n    },\n    \"Africa/Casablanca\": {\n        u: 60,\n        d: 0,\n        c: [\n            \"MA\"\n        ]\n    },\n    \"Africa/Ceuta\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"ES\"\n        ]\n    },\n    \"Africa/Conakry\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"GN\"\n        ],\n        r: 1\n    },\n    \"Africa/Dakar\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"SN\"\n        ],\n        r: 1\n    },\n    \"Africa/Dar_es_Salaam\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"TZ\"\n        ],\n        r: 1\n    },\n    \"Africa/Djibouti\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"DJ\"\n        ],\n        r: 1\n    },\n    \"Africa/Douala\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"CM\"\n        ],\n        r: 1\n    },\n    \"Africa/El_Aaiun\": {\n        u: 60,\n        d: 0,\n        c: [\n            \"EH\"\n        ]\n    },\n    \"Africa/Freetown\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"SL\"\n        ],\n        r: 1\n    },\n    \"Africa/Gaborone\": {\n        a: \"Africa/Maputo\",\n        c: [\n            \"BW\"\n        ],\n        r: 1\n    },\n    \"Africa/Harare\": {\n        a: \"Africa/Maputo\",\n        c: [\n            \"ZW\"\n        ],\n        r: 1\n    },\n    \"Africa/Johannesburg\": {\n        u: 120,\n        c: [\n            \"ZA\",\n            \"LS\",\n            \"SZ\"\n        ]\n    },\n    \"Africa/Juba\": {\n        u: 120,\n        c: [\n            \"SS\"\n        ]\n    },\n    \"Africa/Kampala\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"UG\"\n        ],\n        r: 1\n    },\n    \"Africa/Khartoum\": {\n        u: 120,\n        c: [\n            \"SD\"\n        ]\n    },\n    \"Africa/Kigali\": {\n        a: \"Africa/Maputo\",\n        c: [\n            \"RW\"\n        ],\n        r: 1\n    },\n    \"Africa/Kinshasa\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"CD\"\n        ],\n        r: 1\n    },\n    \"Africa/Lagos\": {\n        u: 60,\n        c: [\n            \"NG\",\n            \"AO\",\n            \"BJ\",\n            \"CD\",\n            \"CF\",\n            \"CG\",\n            \"CM\",\n            \"GA\",\n            \"GQ\",\n            \"NE\"\n        ]\n    },\n    \"Africa/Libreville\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"GA\"\n        ],\n        r: 1\n    },\n    \"Africa/Lome\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"TG\"\n        ],\n        r: 1\n    },\n    \"Africa/Luanda\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"AO\"\n        ],\n        r: 1\n    },\n    \"Africa/Lubumbashi\": {\n        a: \"Africa/Maputo\",\n        c: [\n            \"CD\"\n        ],\n        r: 1\n    },\n    \"Africa/Lusaka\": {\n        a: \"Africa/Maputo\",\n        c: [\n            \"ZM\"\n        ],\n        r: 1\n    },\n    \"Africa/Malabo\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"GQ\"\n        ],\n        r: 1\n    },\n    \"Africa/Maputo\": {\n        u: 120,\n        c: [\n            \"MZ\",\n            \"BI\",\n            \"BW\",\n            \"CD\",\n            \"MW\",\n            \"RW\",\n            \"ZM\",\n            \"ZW\"\n        ]\n    },\n    \"Africa/Maseru\": {\n        a: \"Africa/Johannesburg\",\n        c: [\n            \"LS\"\n        ],\n        r: 1\n    },\n    \"Africa/Mbabane\": {\n        a: \"Africa/Johannesburg\",\n        c: [\n            \"SZ\"\n        ],\n        r: 1\n    },\n    \"Africa/Mogadishu\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"SO\"\n        ],\n        r: 1\n    },\n    \"Africa/Monrovia\": {\n        u: 0,\n        c: [\n            \"LR\"\n        ]\n    },\n    \"Africa/Nairobi\": {\n        u: 180,\n        c: [\n            \"KE\",\n            \"DJ\",\n            \"ER\",\n            \"ET\",\n            \"KM\",\n            \"MG\",\n            \"SO\",\n            \"TZ\",\n            \"UG\",\n            \"YT\"\n        ]\n    },\n    \"Africa/Ndjamena\": {\n        u: 60,\n        c: [\n            \"TD\"\n        ]\n    },\n    \"Africa/Niamey\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"NE\"\n        ],\n        r: 1\n    },\n    \"Africa/Nouakchott\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"MR\"\n        ],\n        r: 1\n    },\n    \"Africa/Ouagadougou\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"BF\"\n        ],\n        r: 1\n    },\n    \"Africa/Porto-Novo\": {\n        a: \"Africa/Lagos\",\n        c: [\n            \"BJ\"\n        ],\n        r: 1\n    },\n    \"Africa/Sao_Tome\": {\n        u: 0,\n        c: [\n            \"ST\"\n        ]\n    },\n    \"Africa/Timbuktu\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"ML\"\n        ],\n        r: 1\n    },\n    \"Africa/Tripoli\": {\n        u: 120,\n        c: [\n            \"LY\"\n        ]\n    },\n    \"Africa/Tunis\": {\n        u: 60,\n        c: [\n            \"TN\"\n        ]\n    },\n    \"Africa/Windhoek\": {\n        u: 120,\n        c: [\n            \"NA\"\n        ]\n    },\n    \"America/Adak\": {\n        u: -600,\n        d: -540,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Anchorage\": {\n        u: -540,\n        d: -480,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Anguilla\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"AI\"\n        ],\n        r: 1\n    },\n    \"America/Antigua\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"AG\"\n        ],\n        r: 1\n    },\n    \"America/Araguaina\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Argentina/Buenos_Aires\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/Catamarca\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/ComodRivadavia\": {\n        a: \"America/Argentina/Catamarca\",\n        r: 1\n    },\n    \"America/Argentina/Cordoba\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/Jujuy\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/La_Rioja\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/Mendoza\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/Rio_Gallegos\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/Salta\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/San_Juan\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/San_Luis\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/Tucuman\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Argentina/Ushuaia\": {\n        u: -180,\n        c: [\n            \"AR\"\n        ]\n    },\n    \"America/Aruba\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"AW\"\n        ],\n        r: 1\n    },\n    \"America/Asuncion\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"PY\"\n        ]\n    },\n    \"America/Atikokan\": {\n        a: \"America/Panama\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"America/Atka\": {\n        a: \"America/Adak\",\n        r: 1\n    },\n    \"America/Bahia\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Bahia_Banderas\": {\n        u: -360,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Barbados\": {\n        u: -240,\n        c: [\n            \"BB\"\n        ]\n    },\n    \"America/Belem\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Belize\": {\n        u: -360,\n        c: [\n            \"BZ\"\n        ]\n    },\n    \"America/Blanc-Sablon\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"America/Boa_Vista\": {\n        u: -240,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Bogota\": {\n        u: -300,\n        c: [\n            \"CO\"\n        ]\n    },\n    \"America/Boise\": {\n        u: -420,\n        d: -360,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Buenos_Aires\": {\n        a: \"America/Argentina/Buenos_Aires\",\n        r: 1\n    },\n    \"America/Cambridge_Bay\": {\n        u: -420,\n        d: -360,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Campo_Grande\": {\n        u: -240,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Cancun\": {\n        u: -300,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Caracas\": {\n        u: -240,\n        c: [\n            \"VE\"\n        ]\n    },\n    \"America/Catamarca\": {\n        a: \"America/Argentina/Catamarca\",\n        r: 1\n    },\n    \"America/Cayenne\": {\n        u: -180,\n        c: [\n            \"GF\"\n        ]\n    },\n    \"America/Cayman\": {\n        a: \"America/Panama\",\n        c: [\n            \"KY\"\n        ],\n        r: 1\n    },\n    \"America/Chicago\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Chihuahua\": {\n        u: -360,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Ciudad_Juarez\": {\n        u: -420,\n        d: -360,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Coral_Harbour\": {\n        a: \"America/Panama\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"America/Cordoba\": {\n        a: \"America/Argentina/Cordoba\",\n        r: 1\n    },\n    \"America/Costa_Rica\": {\n        u: -360,\n        c: [\n            \"CR\"\n        ]\n    },\n    \"America/Creston\": {\n        a: \"America/Phoenix\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"America/Cuiaba\": {\n        u: -240,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Curacao\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"CW\"\n        ],\n        r: 1\n    },\n    \"America/Danmarkshavn\": {\n        u: 0,\n        c: [\n            \"GL\"\n        ]\n    },\n    \"America/Dawson\": {\n        u: -420,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Dawson_Creek\": {\n        u: -420,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Denver\": {\n        u: -420,\n        d: -360,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Detroit\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Dominica\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"DM\"\n        ],\n        r: 1\n    },\n    \"America/Edmonton\": {\n        u: -420,\n        d: -360,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Eirunepe\": {\n        u: -300,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/El_Salvador\": {\n        u: -360,\n        c: [\n            \"SV\"\n        ]\n    },\n    \"America/Ensenada\": {\n        a: \"America/Tijuana\",\n        r: 1\n    },\n    \"America/Fort_Nelson\": {\n        u: -420,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Fort_Wayne\": {\n        a: \"America/Indiana/Indianapolis\",\n        r: 1\n    },\n    \"America/Fortaleza\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Glace_Bay\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Godthab\": {\n        a: \"America/Nuuk\",\n        r: 1\n    },\n    \"America/Goose_Bay\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Grand_Turk\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"TC\"\n        ]\n    },\n    \"America/Grenada\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"GD\"\n        ],\n        r: 1\n    },\n    \"America/Guadeloupe\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"GP\"\n        ],\n        r: 1\n    },\n    \"America/Guatemala\": {\n        u: -360,\n        c: [\n            \"GT\"\n        ]\n    },\n    \"America/Guayaquil\": {\n        u: -300,\n        c: [\n            \"EC\"\n        ]\n    },\n    \"America/Guyana\": {\n        u: -240,\n        c: [\n            \"GY\"\n        ]\n    },\n    \"America/Halifax\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Havana\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"CU\"\n        ]\n    },\n    \"America/Hermosillo\": {\n        u: -420,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Indiana/Indianapolis\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indiana/Knox\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indiana/Marengo\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indiana/Petersburg\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indiana/Tell_City\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indiana/Vevay\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indiana/Vincennes\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indiana/Winamac\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Indianapolis\": {\n        a: \"America/Indiana/Indianapolis\",\n        r: 1\n    },\n    \"America/Inuvik\": {\n        u: -420,\n        d: -360,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Iqaluit\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Jamaica\": {\n        u: -300,\n        c: [\n            \"JM\"\n        ]\n    },\n    \"America/Jujuy\": {\n        a: \"America/Argentina/Jujuy\",\n        r: 1\n    },\n    \"America/Juneau\": {\n        u: -540,\n        d: -480,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Kentucky/Louisville\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Kentucky/Monticello\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Knox_IN\": {\n        a: \"America/Indiana/Knox\",\n        r: 1\n    },\n    \"America/Kralendijk\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"BQ\"\n        ],\n        r: 1\n    },\n    \"America/La_Paz\": {\n        u: -240,\n        c: [\n            \"BO\"\n        ]\n    },\n    \"America/Lima\": {\n        u: -300,\n        c: [\n            \"PE\"\n        ]\n    },\n    \"America/Los_Angeles\": {\n        u: -480,\n        d: -420,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Louisville\": {\n        a: \"America/Kentucky/Louisville\",\n        r: 1\n    },\n    \"America/Lower_Princes\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"SX\"\n        ],\n        r: 1\n    },\n    \"America/Maceio\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Managua\": {\n        u: -360,\n        c: [\n            \"NI\"\n        ]\n    },\n    \"America/Manaus\": {\n        u: -240,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Marigot\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"MF\"\n        ],\n        r: 1\n    },\n    \"America/Martinique\": {\n        u: -240,\n        c: [\n            \"MQ\"\n        ]\n    },\n    \"America/Matamoros\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Mazatlan\": {\n        u: -420,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Mendoza\": {\n        a: \"America/Argentina/Mendoza\",\n        r: 1\n    },\n    \"America/Menominee\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Merida\": {\n        u: -360,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Metlakatla\": {\n        u: -540,\n        d: -480,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Mexico_City\": {\n        u: -360,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Miquelon\": {\n        u: -180,\n        d: -120,\n        c: [\n            \"PM\"\n        ]\n    },\n    \"America/Moncton\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Monterrey\": {\n        u: -360,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Montevideo\": {\n        u: -180,\n        c: [\n            \"UY\"\n        ]\n    },\n    \"America/Montreal\": {\n        a: \"America/Toronto\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"America/Montserrat\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"MS\"\n        ],\n        r: 1\n    },\n    \"America/Nassau\": {\n        a: \"America/Toronto\",\n        c: [\n            \"BS\"\n        ],\n        r: 1\n    },\n    \"America/New_York\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Nipigon\": {\n        a: \"America/Toronto\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"America/Nome\": {\n        u: -540,\n        d: -480,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Noronha\": {\n        u: -120,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/North_Dakota/Beulah\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/North_Dakota/Center\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/North_Dakota/New_Salem\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Nuuk\": {\n        u: -120,\n        d: -60,\n        c: [\n            \"GL\"\n        ]\n    },\n    \"America/Ojinaga\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Panama\": {\n        u: -300,\n        c: [\n            \"PA\",\n            \"CA\",\n            \"KY\"\n        ]\n    },\n    \"America/Pangnirtung\": {\n        a: \"America/Iqaluit\",\n        r: 1\n    },\n    \"America/Paramaribo\": {\n        u: -180,\n        c: [\n            \"SR\"\n        ]\n    },\n    \"America/Phoenix\": {\n        u: -420,\n        c: [\n            \"US\",\n            \"CA\"\n        ]\n    },\n    \"America/Port-au-Prince\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"HT\"\n        ]\n    },\n    \"America/Port_of_Spain\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"TT\"\n        ],\n        r: 1\n    },\n    \"America/Porto_Acre\": {\n        a: \"America/Rio_Branco\",\n        r: 1\n    },\n    \"America/Porto_Velho\": {\n        u: -240,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Puerto_Rico\": {\n        u: -240,\n        c: [\n            \"PR\",\n            \"AG\",\n            \"CA\",\n            \"AI\",\n            \"AW\",\n            \"BL\",\n            \"BQ\",\n            \"CW\",\n            \"DM\",\n            \"GD\",\n            \"GP\",\n            \"KN\",\n            \"LC\",\n            \"MF\",\n            \"MS\",\n            \"SX\",\n            \"TT\",\n            \"VC\",\n            \"VG\",\n            \"VI\"\n        ]\n    },\n    \"America/Punta_Arenas\": {\n        u: -180,\n        c: [\n            \"CL\"\n        ]\n    },\n    \"America/Rainy_River\": {\n        a: \"America/Winnipeg\",\n        r: 1\n    },\n    \"America/Rankin_Inlet\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Recife\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Regina\": {\n        u: -360,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Resolute\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Rio_Branco\": {\n        u: -300,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Rosario\": {\n        a: \"America/Argentina/Cordoba\",\n        r: 1\n    },\n    \"America/Santa_Isabel\": {\n        a: \"America/Tijuana\",\n        r: 1\n    },\n    \"America/Santarem\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Santiago\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"CL\"\n        ]\n    },\n    \"America/Santo_Domingo\": {\n        u: -240,\n        c: [\n            \"DO\"\n        ]\n    },\n    \"America/Sao_Paulo\": {\n        u: -180,\n        c: [\n            \"BR\"\n        ]\n    },\n    \"America/Scoresbysund\": {\n        u: -120,\n        d: -60,\n        c: [\n            \"GL\"\n        ]\n    },\n    \"America/Shiprock\": {\n        a: \"America/Denver\",\n        r: 1\n    },\n    \"America/Sitka\": {\n        u: -540,\n        d: -480,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/St_Barthelemy\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"BL\"\n        ],\n        r: 1\n    },\n    \"America/St_Johns\": {\n        u: -210,\n        d: -150,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/St_Kitts\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"KN\"\n        ],\n        r: 1\n    },\n    \"America/St_Lucia\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"LC\"\n        ],\n        r: 1\n    },\n    \"America/St_Thomas\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"VI\"\n        ],\n        r: 1\n    },\n    \"America/St_Vincent\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"VC\"\n        ],\n        r: 1\n    },\n    \"America/Swift_Current\": {\n        u: -360,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Tegucigalpa\": {\n        u: -360,\n        c: [\n            \"HN\"\n        ]\n    },\n    \"America/Thule\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"GL\"\n        ]\n    },\n    \"America/Thunder_Bay\": {\n        a: \"America/Toronto\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"America/Tijuana\": {\n        u: -480,\n        d: -420,\n        c: [\n            \"MX\"\n        ]\n    },\n    \"America/Toronto\": {\n        u: -300,\n        d: -240,\n        c: [\n            \"CA\",\n            \"BS\"\n        ]\n    },\n    \"America/Tortola\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"VG\"\n        ],\n        r: 1\n    },\n    \"America/Vancouver\": {\n        u: -480,\n        d: -420,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Virgin\": {\n        a: \"America/Puerto_Rico\",\n        c: [\n            \"VI\"\n        ],\n        r: 1\n    },\n    \"America/Whitehorse\": {\n        u: -420,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Winnipeg\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"CA\"\n        ]\n    },\n    \"America/Yakutat\": {\n        u: -540,\n        d: -480,\n        c: [\n            \"US\"\n        ]\n    },\n    \"America/Yellowknife\": {\n        a: \"America/Edmonton\",\n        r: 1\n    },\n    \"Antarctica/Casey\": {\n        u: 480,\n        c: [\n            \"AQ\"\n        ]\n    },\n    \"Antarctica/Davis\": {\n        u: 420,\n        c: [\n            \"AQ\"\n        ]\n    },\n    \"Antarctica/DumontDUrville\": {\n        a: \"Pacific/Port_Moresby\",\n        c: [\n            \"AQ\"\n        ],\n        r: 1\n    },\n    \"Antarctica/Macquarie\": {\n        u: 600,\n        d: 660,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Antarctica/Mawson\": {\n        u: 300,\n        c: [\n            \"AQ\"\n        ]\n    },\n    \"Antarctica/McMurdo\": {\n        a: \"Pacific/Auckland\",\n        c: [\n            \"AQ\"\n        ],\n        r: 1\n    },\n    \"Antarctica/Palmer\": {\n        u: -180,\n        c: [\n            \"AQ\"\n        ]\n    },\n    \"Antarctica/Rothera\": {\n        u: -180,\n        c: [\n            \"AQ\"\n        ]\n    },\n    \"Antarctica/South_Pole\": {\n        a: \"Pacific/Auckland\",\n        c: [\n            \"AQ\"\n        ],\n        r: 1\n    },\n    \"Antarctica/Syowa\": {\n        a: \"Asia/Riyadh\",\n        c: [\n            \"AQ\"\n        ],\n        r: 1\n    },\n    \"Antarctica/Troll\": {\n        u: 0,\n        d: 120,\n        c: [\n            \"AQ\"\n        ]\n    },\n    \"Antarctica/Vostok\": {\n        u: 300,\n        c: [\n            \"AQ\"\n        ]\n    },\n    \"Arctic/Longyearbyen\": {\n        a: \"Europe/Berlin\",\n        c: [\n            \"SJ\"\n        ],\n        r: 1\n    },\n    \"Asia/Aden\": {\n        a: \"Asia/Riyadh\",\n        c: [\n            \"YE\"\n        ],\n        r: 1\n    },\n    \"Asia/Almaty\": {\n        u: 300,\n        c: [\n            \"KZ\"\n        ]\n    },\n    \"Asia/Amman\": {\n        u: 180,\n        c: [\n            \"JO\"\n        ]\n    },\n    \"Asia/Anadyr\": {\n        u: 720,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Aqtau\": {\n        u: 300,\n        c: [\n            \"KZ\"\n        ]\n    },\n    \"Asia/Aqtobe\": {\n        u: 300,\n        c: [\n            \"KZ\"\n        ]\n    },\n    \"Asia/Ashgabat\": {\n        u: 300,\n        c: [\n            \"TM\"\n        ]\n    },\n    \"Asia/Ashkhabad\": {\n        a: \"Asia/Ashgabat\",\n        r: 1\n    },\n    \"Asia/Atyrau\": {\n        u: 300,\n        c: [\n            \"KZ\"\n        ]\n    },\n    \"Asia/Baghdad\": {\n        u: 180,\n        c: [\n            \"IQ\"\n        ]\n    },\n    \"Asia/Bahrain\": {\n        a: \"Asia/Qatar\",\n        c: [\n            \"BH\"\n        ],\n        r: 1\n    },\n    \"Asia/Baku\": {\n        u: 240,\n        c: [\n            \"AZ\"\n        ]\n    },\n    \"Asia/Bangkok\": {\n        u: 420,\n        c: [\n            \"TH\",\n            \"CX\",\n            \"KH\",\n            \"LA\",\n            \"VN\"\n        ]\n    },\n    \"Asia/Barnaul\": {\n        u: 420,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Beirut\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"LB\"\n        ]\n    },\n    \"Asia/Bishkek\": {\n        u: 360,\n        c: [\n            \"KG\"\n        ]\n    },\n    \"Asia/Brunei\": {\n        a: \"Asia/Kuching\",\n        c: [\n            \"BN\"\n        ],\n        r: 1\n    },\n    \"Asia/Calcutta\": {\n        a: \"Asia/Kolkata\",\n        r: 1\n    },\n    \"Asia/Chita\": {\n        u: 540,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Choibalsan\": {\n        a: \"Asia/Ulaanbaatar\",\n        r: 1\n    },\n    \"Asia/Chongqing\": {\n        a: \"Asia/Shanghai\",\n        r: 1\n    },\n    \"Asia/Chungking\": {\n        a: \"Asia/Shanghai\",\n        r: 1\n    },\n    \"Asia/Colombo\": {\n        u: 330,\n        c: [\n            \"LK\"\n        ]\n    },\n    \"Asia/Dacca\": {\n        a: \"Asia/Dhaka\",\n        r: 1\n    },\n    \"Asia/Damascus\": {\n        u: 180,\n        c: [\n            \"SY\"\n        ]\n    },\n    \"Asia/Dhaka\": {\n        u: 360,\n        c: [\n            \"BD\"\n        ]\n    },\n    \"Asia/Dili\": {\n        u: 540,\n        c: [\n            \"TL\"\n        ]\n    },\n    \"Asia/Dubai\": {\n        u: 240,\n        c: [\n            \"AE\",\n            \"OM\",\n            \"RE\",\n            \"SC\",\n            \"TF\"\n        ]\n    },\n    \"Asia/Dushanbe\": {\n        u: 300,\n        c: [\n            \"TJ\"\n        ]\n    },\n    \"Asia/Famagusta\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"CY\"\n        ]\n    },\n    \"Asia/Gaza\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"PS\"\n        ]\n    },\n    \"Asia/Harbin\": {\n        a: \"Asia/Shanghai\",\n        r: 1\n    },\n    \"Asia/Hebron\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"PS\"\n        ]\n    },\n    \"Asia/Ho_Chi_Minh\": {\n        u: 420,\n        c: [\n            \"VN\"\n        ]\n    },\n    \"Asia/Hong_Kong\": {\n        u: 480,\n        c: [\n            \"HK\"\n        ]\n    },\n    \"Asia/Hovd\": {\n        u: 420,\n        c: [\n            \"MN\"\n        ]\n    },\n    \"Asia/Irkutsk\": {\n        u: 480,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Istanbul\": {\n        a: \"Europe/Istanbul\",\n        r: 1\n    },\n    \"Asia/Jakarta\": {\n        u: 420,\n        c: [\n            \"ID\"\n        ]\n    },\n    \"Asia/Jayapura\": {\n        u: 540,\n        c: [\n            \"ID\"\n        ]\n    },\n    \"Asia/Jerusalem\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"IL\"\n        ]\n    },\n    \"Asia/Kabul\": {\n        u: 270,\n        c: [\n            \"AF\"\n        ]\n    },\n    \"Asia/Kamchatka\": {\n        u: 720,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Karachi\": {\n        u: 300,\n        c: [\n            \"PK\"\n        ]\n    },\n    \"Asia/Kashgar\": {\n        a: \"Asia/Urumqi\",\n        r: 1\n    },\n    \"Asia/Kathmandu\": {\n        u: 345,\n        c: [\n            \"NP\"\n        ]\n    },\n    \"Asia/Katmandu\": {\n        a: \"Asia/Kathmandu\",\n        r: 1\n    },\n    \"Asia/Khandyga\": {\n        u: 540,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Kolkata\": {\n        u: 330,\n        c: [\n            \"IN\"\n        ]\n    },\n    \"Asia/Krasnoyarsk\": {\n        u: 420,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Kuala_Lumpur\": {\n        a: \"Asia/Singapore\",\n        c: [\n            \"MY\"\n        ],\n        r: 1\n    },\n    \"Asia/Kuching\": {\n        u: 480,\n        c: [\n            \"MY\",\n            \"BN\"\n        ]\n    },\n    \"Asia/Kuwait\": {\n        a: \"Asia/Riyadh\",\n        c: [\n            \"KW\"\n        ],\n        r: 1\n    },\n    \"Asia/Macao\": {\n        a: \"Asia/Macau\",\n        r: 1\n    },\n    \"Asia/Macau\": {\n        u: 480,\n        c: [\n            \"MO\"\n        ]\n    },\n    \"Asia/Magadan\": {\n        u: 660,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Makassar\": {\n        u: 480,\n        c: [\n            \"ID\"\n        ]\n    },\n    \"Asia/Manila\": {\n        u: 480,\n        c: [\n            \"PH\"\n        ]\n    },\n    \"Asia/Muscat\": {\n        a: \"Asia/Dubai\",\n        c: [\n            \"OM\"\n        ],\n        r: 1\n    },\n    \"Asia/Nicosia\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"CY\"\n        ]\n    },\n    \"Asia/Novokuznetsk\": {\n        u: 420,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Novosibirsk\": {\n        u: 420,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Omsk\": {\n        u: 360,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Oral\": {\n        u: 300,\n        c: [\n            \"KZ\"\n        ]\n    },\n    \"Asia/Phnom_Penh\": {\n        a: \"Asia/Bangkok\",\n        c: [\n            \"KH\"\n        ],\n        r: 1\n    },\n    \"Asia/Pontianak\": {\n        u: 420,\n        c: [\n            \"ID\"\n        ]\n    },\n    \"Asia/Pyongyang\": {\n        u: 540,\n        c: [\n            \"KP\"\n        ]\n    },\n    \"Asia/Qatar\": {\n        u: 180,\n        c: [\n            \"QA\",\n            \"BH\"\n        ]\n    },\n    \"Asia/Qostanay\": {\n        u: 300,\n        c: [\n            \"KZ\"\n        ]\n    },\n    \"Asia/Qyzylorda\": {\n        u: 300,\n        c: [\n            \"KZ\"\n        ]\n    },\n    \"Asia/Rangoon\": {\n        a: \"Asia/Yangon\",\n        c: [\n            \"MM\"\n        ],\n        r: 1\n    },\n    \"Asia/Riyadh\": {\n        u: 180,\n        c: [\n            \"SA\",\n            \"AQ\",\n            \"KW\",\n            \"YE\"\n        ]\n    },\n    \"Asia/Saigon\": {\n        a: \"Asia/Ho_Chi_Minh\",\n        r: 1\n    },\n    \"Asia/Sakhalin\": {\n        u: 660,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Samarkand\": {\n        u: 300,\n        c: [\n            \"UZ\"\n        ]\n    },\n    \"Asia/Seoul\": {\n        u: 540,\n        c: [\n            \"KR\"\n        ]\n    },\n    \"Asia/Shanghai\": {\n        u: 480,\n        c: [\n            \"CN\"\n        ]\n    },\n    \"Asia/Singapore\": {\n        u: 480,\n        c: [\n            \"SG\",\n            \"MY\"\n        ]\n    },\n    \"Asia/Srednekolymsk\": {\n        u: 660,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Taipei\": {\n        u: 480,\n        c: [\n            \"TW\"\n        ]\n    },\n    \"Asia/Tashkent\": {\n        u: 300,\n        c: [\n            \"UZ\"\n        ]\n    },\n    \"Asia/Tbilisi\": {\n        u: 240,\n        c: [\n            \"GE\"\n        ]\n    },\n    \"Asia/Tehran\": {\n        u: 210,\n        c: [\n            \"IR\"\n        ]\n    },\n    \"Asia/Tel_Aviv\": {\n        a: \"Asia/Jerusalem\",\n        r: 1\n    },\n    \"Asia/Thimbu\": {\n        a: \"Asia/Thimphu\",\n        r: 1\n    },\n    \"Asia/Thimphu\": {\n        u: 360,\n        c: [\n            \"BT\"\n        ]\n    },\n    \"Asia/Tokyo\": {\n        u: 540,\n        c: [\n            \"JP\"\n        ]\n    },\n    \"Asia/Tomsk\": {\n        u: 420,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Ujung_Pandang\": {\n        a: \"Asia/Makassar\",\n        r: 1\n    },\n    \"Asia/Ulaanbaatar\": {\n        u: 480,\n        c: [\n            \"MN\"\n        ]\n    },\n    \"Asia/Ulan_Bator\": {\n        a: \"Asia/Ulaanbaatar\",\n        r: 1\n    },\n    \"Asia/Urumqi\": {\n        u: 360,\n        c: [\n            \"CN\"\n        ]\n    },\n    \"Asia/Ust-Nera\": {\n        u: 600,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Vientiane\": {\n        a: \"Asia/Bangkok\",\n        c: [\n            \"LA\"\n        ],\n        r: 1\n    },\n    \"Asia/Vladivostok\": {\n        u: 600,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Yakutsk\": {\n        u: 540,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Yangon\": {\n        u: 390,\n        c: [\n            \"MM\",\n            \"CC\"\n        ]\n    },\n    \"Asia/Yekaterinburg\": {\n        u: 300,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Asia/Yerevan\": {\n        u: 240,\n        c: [\n            \"AM\"\n        ]\n    },\n    \"Atlantic/Azores\": {\n        u: -60,\n        d: 0,\n        c: [\n            \"PT\"\n        ]\n    },\n    \"Atlantic/Bermuda\": {\n        u: -240,\n        d: -180,\n        c: [\n            \"BM\"\n        ]\n    },\n    \"Atlantic/Canary\": {\n        u: 0,\n        d: 60,\n        c: [\n            \"ES\"\n        ]\n    },\n    \"Atlantic/Cape_Verde\": {\n        u: -60,\n        c: [\n            \"CV\"\n        ]\n    },\n    \"Atlantic/Faeroe\": {\n        a: \"Atlantic/Faroe\",\n        r: 1\n    },\n    \"Atlantic/Faroe\": {\n        u: 0,\n        d: 60,\n        c: [\n            \"FO\"\n        ]\n    },\n    \"Atlantic/Jan_Mayen\": {\n        a: \"Europe/Berlin\",\n        c: [\n            \"SJ\"\n        ],\n        r: 1\n    },\n    \"Atlantic/Madeira\": {\n        u: 0,\n        d: 60,\n        c: [\n            \"PT\"\n        ]\n    },\n    \"Atlantic/Reykjavik\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"IS\"\n        ],\n        r: 1\n    },\n    \"Atlantic/South_Georgia\": {\n        u: -120,\n        c: [\n            \"GS\"\n        ]\n    },\n    \"Atlantic/St_Helena\": {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"SH\"\n        ],\n        r: 1\n    },\n    \"Atlantic/Stanley\": {\n        u: -180,\n        c: [\n            \"FK\"\n        ]\n    },\n    \"Australia/ACT\": {\n        a: \"Australia/Sydney\",\n        r: 1\n    },\n    \"Australia/Adelaide\": {\n        u: 570,\n        d: 630,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Brisbane\": {\n        u: 600,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Broken_Hill\": {\n        u: 570,\n        d: 630,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Canberra\": {\n        a: \"Australia/Sydney\",\n        r: 1\n    },\n    \"Australia/Currie\": {\n        a: \"Australia/Hobart\",\n        r: 1\n    },\n    \"Australia/Darwin\": {\n        u: 570,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Eucla\": {\n        u: 525,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Hobart\": {\n        u: 600,\n        d: 660,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/LHI\": {\n        a: \"Australia/Lord_Howe\",\n        r: 1\n    },\n    \"Australia/Lindeman\": {\n        u: 600,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Lord_Howe\": {\n        u: 630,\n        d: 660,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Melbourne\": {\n        u: 600,\n        d: 660,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/NSW\": {\n        a: \"Australia/Sydney\",\n        r: 1\n    },\n    \"Australia/North\": {\n        a: \"Australia/Darwin\",\n        r: 1\n    },\n    \"Australia/Perth\": {\n        u: 480,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Queensland\": {\n        a: \"Australia/Brisbane\",\n        r: 1\n    },\n    \"Australia/South\": {\n        a: \"Australia/Adelaide\",\n        r: 1\n    },\n    \"Australia/Sydney\": {\n        u: 600,\n        d: 660,\n        c: [\n            \"AU\"\n        ]\n    },\n    \"Australia/Tasmania\": {\n        a: \"Australia/Hobart\",\n        r: 1\n    },\n    \"Australia/Victoria\": {\n        a: \"Australia/Melbourne\",\n        r: 1\n    },\n    \"Australia/West\": {\n        a: \"Australia/Perth\",\n        r: 1\n    },\n    \"Australia/Yancowinna\": {\n        a: \"Australia/Broken_Hill\",\n        r: 1\n    },\n    \"Brazil/Acre\": {\n        a: \"America/Rio_Branco\",\n        r: 1\n    },\n    \"Brazil/DeNoronha\": {\n        a: \"America/Noronha\",\n        r: 1\n    },\n    \"Brazil/East\": {\n        a: \"America/Sao_Paulo\",\n        r: 1\n    },\n    \"Brazil/West\": {\n        a: \"America/Manaus\",\n        r: 1\n    },\n    CET: {\n        a: \"Europe/Brussels\",\n        r: 1\n    },\n    CST6CDT: {\n        a: \"America/Chicago\",\n        r: 1\n    },\n    \"Canada/Atlantic\": {\n        a: \"America/Halifax\",\n        r: 1\n    },\n    \"Canada/Central\": {\n        a: \"America/Winnipeg\",\n        r: 1\n    },\n    \"Canada/Eastern\": {\n        a: \"America/Toronto\",\n        c: [\n            \"CA\"\n        ],\n        r: 1\n    },\n    \"Canada/Mountain\": {\n        a: \"America/Edmonton\",\n        r: 1\n    },\n    \"Canada/Newfoundland\": {\n        a: \"America/St_Johns\",\n        r: 1\n    },\n    \"Canada/Pacific\": {\n        a: \"America/Vancouver\",\n        r: 1\n    },\n    \"Canada/Saskatchewan\": {\n        a: \"America/Regina\",\n        r: 1\n    },\n    \"Canada/Yukon\": {\n        a: \"America/Whitehorse\",\n        r: 1\n    },\n    \"Chile/Continental\": {\n        a: \"America/Santiago\",\n        r: 1\n    },\n    \"Chile/EasterIsland\": {\n        a: \"Pacific/Easter\",\n        r: 1\n    },\n    Cuba: {\n        a: \"America/Havana\",\n        r: 1\n    },\n    EET: {\n        a: \"Europe/Athens\",\n        r: 1\n    },\n    EST: {\n        a: \"America/Panama\",\n        r: 1\n    },\n    EST5EDT: {\n        a: \"America/New_York\",\n        r: 1\n    },\n    Egypt: {\n        a: \"Africa/Cairo\",\n        r: 1\n    },\n    Eire: {\n        a: \"Europe/Dublin\",\n        r: 1\n    },\n    \"Etc/GMT\": {\n        u: 0\n    },\n    \"Etc/GMT+0\": {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    \"Etc/GMT+1\": {\n        u: -60\n    },\n    \"Etc/GMT+10\": {\n        u: -600\n    },\n    \"Etc/GMT+11\": {\n        u: -660\n    },\n    \"Etc/GMT+12\": {\n        u: -720\n    },\n    \"Etc/GMT+2\": {\n        u: -120\n    },\n    \"Etc/GMT+3\": {\n        u: -180\n    },\n    \"Etc/GMT+4\": {\n        u: -240\n    },\n    \"Etc/GMT+5\": {\n        u: -300\n    },\n    \"Etc/GMT+6\": {\n        u: -360\n    },\n    \"Etc/GMT+7\": {\n        u: -420\n    },\n    \"Etc/GMT+8\": {\n        u: -480\n    },\n    \"Etc/GMT+9\": {\n        u: -540\n    },\n    \"Etc/GMT-0\": {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    \"Etc/GMT-1\": {\n        u: 60\n    },\n    \"Etc/GMT-10\": {\n        u: 600\n    },\n    \"Etc/GMT-11\": {\n        u: 660\n    },\n    \"Etc/GMT-12\": {\n        u: 720\n    },\n    \"Etc/GMT-13\": {\n        u: 780\n    },\n    \"Etc/GMT-14\": {\n        u: 840\n    },\n    \"Etc/GMT-2\": {\n        u: 120\n    },\n    \"Etc/GMT-3\": {\n        u: 180\n    },\n    \"Etc/GMT-4\": {\n        u: 240\n    },\n    \"Etc/GMT-5\": {\n        u: 300\n    },\n    \"Etc/GMT-6\": {\n        u: 360\n    },\n    \"Etc/GMT-7\": {\n        u: 420\n    },\n    \"Etc/GMT-8\": {\n        u: 480\n    },\n    \"Etc/GMT-9\": {\n        u: 540\n    },\n    \"Etc/GMT0\": {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    \"Etc/Greenwich\": {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    \"Etc/UCT\": {\n        a: \"Etc/UTC\",\n        r: 1\n    },\n    \"Etc/UTC\": {\n        u: 0\n    },\n    \"Etc/Universal\": {\n        a: \"Etc/UTC\",\n        r: 1\n    },\n    \"Etc/Zulu\": {\n        a: \"Etc/UTC\",\n        r: 1\n    },\n    \"Europe/Amsterdam\": {\n        a: \"Europe/Brussels\",\n        c: [\n            \"NL\"\n        ],\n        r: 1\n    },\n    \"Europe/Andorra\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"AD\"\n        ]\n    },\n    \"Europe/Astrakhan\": {\n        u: 240,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/Athens\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"GR\"\n        ]\n    },\n    \"Europe/Belfast\": {\n        a: \"Europe/London\",\n        c: [\n            \"GB\"\n        ],\n        r: 1\n    },\n    \"Europe/Belgrade\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"RS\",\n            \"BA\",\n            \"HR\",\n            \"ME\",\n            \"MK\",\n            \"SI\"\n        ]\n    },\n    \"Europe/Berlin\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"DE\",\n            \"DK\",\n            \"NO\",\n            \"SE\",\n            \"SJ\"\n        ]\n    },\n    \"Europe/Bratislava\": {\n        a: \"Europe/Prague\",\n        c: [\n            \"SK\"\n        ],\n        r: 1\n    },\n    \"Europe/Brussels\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"BE\",\n            \"LU\",\n            \"NL\"\n        ]\n    },\n    \"Europe/Bucharest\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"RO\"\n        ]\n    },\n    \"Europe/Budapest\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"HU\"\n        ]\n    },\n    \"Europe/Busingen\": {\n        a: \"Europe/Zurich\",\n        c: [\n            \"DE\"\n        ],\n        r: 1\n    },\n    \"Europe/Chisinau\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"MD\"\n        ]\n    },\n    \"Europe/Copenhagen\": {\n        a: \"Europe/Berlin\",\n        c: [\n            \"DK\"\n        ],\n        r: 1\n    },\n    \"Europe/Dublin\": {\n        u: 0,\n        d: 60,\n        c: [\n            \"IE\"\n        ]\n    },\n    \"Europe/Gibraltar\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"GI\"\n        ]\n    },\n    \"Europe/Guernsey\": {\n        a: \"Europe/London\",\n        c: [\n            \"GG\"\n        ],\n        r: 1\n    },\n    \"Europe/Helsinki\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"FI\",\n            \"AX\"\n        ]\n    },\n    \"Europe/Isle_of_Man\": {\n        a: \"Europe/London\",\n        c: [\n            \"IM\"\n        ],\n        r: 1\n    },\n    \"Europe/Istanbul\": {\n        u: 180,\n        c: [\n            \"TR\"\n        ]\n    },\n    \"Europe/Jersey\": {\n        a: \"Europe/London\",\n        c: [\n            \"JE\"\n        ],\n        r: 1\n    },\n    \"Europe/Kaliningrad\": {\n        u: 120,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/Kiev\": {\n        a: \"Europe/Kyiv\",\n        r: 1\n    },\n    \"Europe/Kirov\": {\n        u: 180,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/Kyiv\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"UA\"\n        ]\n    },\n    \"Europe/Lisbon\": {\n        u: 0,\n        d: 60,\n        c: [\n            \"PT\"\n        ]\n    },\n    \"Europe/Ljubljana\": {\n        a: \"Europe/Belgrade\",\n        c: [\n            \"SI\"\n        ],\n        r: 1\n    },\n    \"Europe/London\": {\n        u: 0,\n        d: 60,\n        c: [\n            \"GB\",\n            \"GG\",\n            \"IM\",\n            \"JE\"\n        ]\n    },\n    \"Europe/Luxembourg\": {\n        a: \"Europe/Brussels\",\n        c: [\n            \"LU\"\n        ],\n        r: 1\n    },\n    \"Europe/Madrid\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"ES\"\n        ]\n    },\n    \"Europe/Malta\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"MT\"\n        ]\n    },\n    \"Europe/Mariehamn\": {\n        a: \"Europe/Helsinki\",\n        c: [\n            \"AX\"\n        ],\n        r: 1\n    },\n    \"Europe/Minsk\": {\n        u: 180,\n        c: [\n            \"BY\"\n        ]\n    },\n    \"Europe/Monaco\": {\n        a: \"Europe/Paris\",\n        c: [\n            \"MC\"\n        ],\n        r: 1\n    },\n    \"Europe/Moscow\": {\n        u: 180,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/Nicosia\": {\n        a: \"Asia/Nicosia\",\n        r: 1\n    },\n    \"Europe/Oslo\": {\n        a: \"Europe/Berlin\",\n        c: [\n            \"NO\"\n        ],\n        r: 1\n    },\n    \"Europe/Paris\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"FR\",\n            \"MC\"\n        ]\n    },\n    \"Europe/Podgorica\": {\n        a: \"Europe/Belgrade\",\n        c: [\n            \"ME\"\n        ],\n        r: 1\n    },\n    \"Europe/Prague\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"CZ\",\n            \"SK\"\n        ]\n    },\n    \"Europe/Riga\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"LV\"\n        ]\n    },\n    \"Europe/Rome\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"IT\",\n            \"SM\",\n            \"VA\"\n        ]\n    },\n    \"Europe/Samara\": {\n        u: 240,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/San_Marino\": {\n        a: \"Europe/Rome\",\n        c: [\n            \"SM\"\n        ],\n        r: 1\n    },\n    \"Europe/Sarajevo\": {\n        a: \"Europe/Belgrade\",\n        c: [\n            \"BA\"\n        ],\n        r: 1\n    },\n    \"Europe/Saratov\": {\n        u: 240,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/Simferopol\": {\n        u: 180,\n        c: [\n            \"RU\",\n            \"UA\"\n        ]\n    },\n    \"Europe/Skopje\": {\n        a: \"Europe/Belgrade\",\n        c: [\n            \"MK\"\n        ],\n        r: 1\n    },\n    \"Europe/Sofia\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"BG\"\n        ]\n    },\n    \"Europe/Stockholm\": {\n        a: \"Europe/Berlin\",\n        c: [\n            \"SE\"\n        ],\n        r: 1\n    },\n    \"Europe/Tallinn\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"EE\"\n        ]\n    },\n    \"Europe/Tirane\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"AL\"\n        ]\n    },\n    \"Europe/Tiraspol\": {\n        a: \"Europe/Chisinau\",\n        r: 1\n    },\n    \"Europe/Ulyanovsk\": {\n        u: 240,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/Uzhgorod\": {\n        a: \"Europe/Kyiv\",\n        r: 1\n    },\n    \"Europe/Vaduz\": {\n        a: \"Europe/Zurich\",\n        c: [\n            \"LI\"\n        ],\n        r: 1\n    },\n    \"Europe/Vatican\": {\n        a: \"Europe/Rome\",\n        c: [\n            \"VA\"\n        ],\n        r: 1\n    },\n    \"Europe/Vienna\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"AT\"\n        ]\n    },\n    \"Europe/Vilnius\": {\n        u: 120,\n        d: 180,\n        c: [\n            \"LT\"\n        ]\n    },\n    \"Europe/Volgograd\": {\n        u: 180,\n        c: [\n            \"RU\"\n        ]\n    },\n    \"Europe/Warsaw\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"PL\"\n        ]\n    },\n    \"Europe/Zagreb\": {\n        a: \"Europe/Belgrade\",\n        c: [\n            \"HR\"\n        ],\n        r: 1\n    },\n    \"Europe/Zaporozhye\": {\n        a: \"Europe/Kyiv\",\n        r: 1\n    },\n    \"Europe/Zurich\": {\n        u: 60,\n        d: 120,\n        c: [\n            \"CH\",\n            \"DE\",\n            \"LI\"\n        ]\n    },\n    Factory: {\n        u: 0\n    },\n    GB: {\n        a: \"Europe/London\",\n        c: [\n            \"GB\"\n        ],\n        r: 1\n    },\n    \"GB-Eire\": {\n        a: \"Europe/London\",\n        c: [\n            \"GB\"\n        ],\n        r: 1\n    },\n    GMT: {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    \"GMT+0\": {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    \"GMT-0\": {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    GMT0: {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    Greenwich: {\n        a: \"Etc/GMT\",\n        r: 1\n    },\n    HST: {\n        a: \"Pacific/Honolulu\",\n        r: 1\n    },\n    Hongkong: {\n        a: \"Asia/Hong_Kong\",\n        r: 1\n    },\n    Iceland: {\n        a: \"Africa/Abidjan\",\n        c: [\n            \"IS\"\n        ],\n        r: 1\n    },\n    \"Indian/Antananarivo\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"MG\"\n        ],\n        r: 1\n    },\n    \"Indian/Chagos\": {\n        u: 360,\n        c: [\n            \"IO\"\n        ]\n    },\n    \"Indian/Christmas\": {\n        a: \"Asia/Bangkok\",\n        c: [\n            \"CX\"\n        ],\n        r: 1\n    },\n    \"Indian/Cocos\": {\n        a: \"Asia/Yangon\",\n        c: [\n            \"CC\"\n        ],\n        r: 1\n    },\n    \"Indian/Comoro\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"KM\"\n        ],\n        r: 1\n    },\n    \"Indian/Kerguelen\": {\n        a: \"Indian/Maldives\",\n        c: [\n            \"TF\"\n        ],\n        r: 1\n    },\n    \"Indian/Mahe\": {\n        a: \"Asia/Dubai\",\n        c: [\n            \"SC\"\n        ],\n        r: 1\n    },\n    \"Indian/Maldives\": {\n        u: 300,\n        c: [\n            \"MV\",\n            \"TF\"\n        ]\n    },\n    \"Indian/Mauritius\": {\n        u: 240,\n        c: [\n            \"MU\"\n        ]\n    },\n    \"Indian/Mayotte\": {\n        a: \"Africa/Nairobi\",\n        c: [\n            \"YT\"\n        ],\n        r: 1\n    },\n    \"Indian/Reunion\": {\n        a: \"Asia/Dubai\",\n        c: [\n            \"RE\"\n        ],\n        r: 1\n    },\n    Iran: {\n        a: \"Asia/Tehran\",\n        r: 1\n    },\n    Israel: {\n        a: \"Asia/Jerusalem\",\n        r: 1\n    },\n    Jamaica: {\n        a: \"America/Jamaica\",\n        r: 1\n    },\n    Japan: {\n        a: \"Asia/Tokyo\",\n        r: 1\n    },\n    Kwajalein: {\n        a: \"Pacific/Kwajalein\",\n        r: 1\n    },\n    Libya: {\n        a: \"Africa/Tripoli\",\n        r: 1\n    },\n    MET: {\n        a: \"Europe/Brussels\",\n        r: 1\n    },\n    MST: {\n        a: \"America/Phoenix\",\n        r: 1\n    },\n    MST7MDT: {\n        a: \"America/Denver\",\n        r: 1\n    },\n    \"Mexico/BajaNorte\": {\n        a: \"America/Tijuana\",\n        r: 1\n    },\n    \"Mexico/BajaSur\": {\n        a: \"America/Mazatlan\",\n        r: 1\n    },\n    \"Mexico/General\": {\n        a: \"America/Mexico_City\",\n        r: 1\n    },\n    NZ: {\n        a: \"Pacific/Auckland\",\n        c: [\n            \"NZ\"\n        ],\n        r: 1\n    },\n    \"NZ-CHAT\": {\n        a: \"Pacific/Chatham\",\n        r: 1\n    },\n    Navajo: {\n        a: \"America/Denver\",\n        r: 1\n    },\n    PRC: {\n        a: \"Asia/Shanghai\",\n        r: 1\n    },\n    PST8PDT: {\n        a: \"America/Los_Angeles\",\n        r: 1\n    },\n    \"Pacific/Apia\": {\n        u: 780,\n        c: [\n            \"WS\"\n        ]\n    },\n    \"Pacific/Auckland\": {\n        u: 720,\n        d: 780,\n        c: [\n            \"NZ\",\n            \"AQ\"\n        ]\n    },\n    \"Pacific/Bougainville\": {\n        u: 660,\n        c: [\n            \"PG\"\n        ]\n    },\n    \"Pacific/Chatham\": {\n        u: 765,\n        d: 825,\n        c: [\n            \"NZ\"\n        ]\n    },\n    \"Pacific/Chuuk\": {\n        a: \"Pacific/Port_Moresby\",\n        c: [\n            \"FM\"\n        ],\n        r: 1\n    },\n    \"Pacific/Easter\": {\n        u: -360,\n        d: -300,\n        c: [\n            \"CL\"\n        ]\n    },\n    \"Pacific/Efate\": {\n        u: 660,\n        c: [\n            \"VU\"\n        ]\n    },\n    \"Pacific/Enderbury\": {\n        a: \"Pacific/Kanton\",\n        r: 1\n    },\n    \"Pacific/Fakaofo\": {\n        u: 780,\n        c: [\n            \"TK\"\n        ]\n    },\n    \"Pacific/Fiji\": {\n        u: 720,\n        c: [\n            \"FJ\"\n        ]\n    },\n    \"Pacific/Funafuti\": {\n        a: \"Pacific/Tarawa\",\n        c: [\n            \"TV\"\n        ],\n        r: 1\n    },\n    \"Pacific/Galapagos\": {\n        u: -360,\n        c: [\n            \"EC\"\n        ]\n    },\n    \"Pacific/Gambier\": {\n        u: -540,\n        c: [\n            \"PF\"\n        ]\n    },\n    \"Pacific/Guadalcanal\": {\n        u: 660,\n        c: [\n            \"SB\",\n            \"FM\"\n        ]\n    },\n    \"Pacific/Guam\": {\n        u: 600,\n        c: [\n            \"GU\",\n            \"MP\"\n        ]\n    },\n    \"Pacific/Honolulu\": {\n        u: -600,\n        c: [\n            \"US\"\n        ]\n    },\n    \"Pacific/Johnston\": {\n        a: \"Pacific/Honolulu\",\n        c: [\n            \"UM\"\n        ],\n        r: 1\n    },\n    \"Pacific/Kanton\": {\n        u: 780,\n        c: [\n            \"KI\"\n        ]\n    },\n    \"Pacific/Kiritimati\": {\n        u: 840,\n        c: [\n            \"KI\"\n        ]\n    },\n    \"Pacific/Kosrae\": {\n        u: 660,\n        c: [\n            \"FM\"\n        ]\n    },\n    \"Pacific/Kwajalein\": {\n        u: 720,\n        c: [\n            \"MH\"\n        ]\n    },\n    \"Pacific/Majuro\": {\n        a: \"Pacific/Tarawa\",\n        c: [\n            \"MH\"\n        ],\n        r: 1\n    },\n    \"Pacific/Marquesas\": {\n        u: -570,\n        c: [\n            \"PF\"\n        ]\n    },\n    \"Pacific/Midway\": {\n        a: \"Pacific/Pago_Pago\",\n        c: [\n            \"UM\"\n        ],\n        r: 1\n    },\n    \"Pacific/Nauru\": {\n        u: 720,\n        c: [\n            \"NR\"\n        ]\n    },\n    \"Pacific/Niue\": {\n        u: -660,\n        c: [\n            \"NU\"\n        ]\n    },\n    \"Pacific/Norfolk\": {\n        u: 660,\n        d: 720,\n        c: [\n            \"NF\"\n        ]\n    },\n    \"Pacific/Noumea\": {\n        u: 660,\n        c: [\n            \"NC\"\n        ]\n    },\n    \"Pacific/Pago_Pago\": {\n        u: -660,\n        c: [\n            \"AS\",\n            \"UM\"\n        ]\n    },\n    \"Pacific/Palau\": {\n        u: 540,\n        c: [\n            \"PW\"\n        ]\n    },\n    \"Pacific/Pitcairn\": {\n        u: -480,\n        c: [\n            \"PN\"\n        ]\n    },\n    \"Pacific/Pohnpei\": {\n        a: \"Pacific/Guadalcanal\",\n        c: [\n            \"FM\"\n        ],\n        r: 1\n    },\n    \"Pacific/Ponape\": {\n        a: \"Pacific/Guadalcanal\",\n        c: [\n            \"FM\"\n        ],\n        r: 1\n    },\n    \"Pacific/Port_Moresby\": {\n        u: 600,\n        c: [\n            \"PG\",\n            \"AQ\",\n            \"FM\"\n        ]\n    },\n    \"Pacific/Rarotonga\": {\n        u: -600,\n        c: [\n            \"CK\"\n        ]\n    },\n    \"Pacific/Saipan\": {\n        a: \"Pacific/Guam\",\n        c: [\n            \"MP\"\n        ],\n        r: 1\n    },\n    \"Pacific/Samoa\": {\n        a: \"Pacific/Pago_Pago\",\n        c: [\n            \"AS\"\n        ],\n        r: 1\n    },\n    \"Pacific/Tahiti\": {\n        u: -600,\n        c: [\n            \"PF\"\n        ]\n    },\n    \"Pacific/Tarawa\": {\n        u: 720,\n        c: [\n            \"KI\",\n            \"MH\",\n            \"TV\",\n            \"UM\",\n            \"WF\"\n        ]\n    },\n    \"Pacific/Tongatapu\": {\n        u: 780,\n        c: [\n            \"TO\"\n        ]\n    },\n    \"Pacific/Truk\": {\n        a: \"Pacific/Port_Moresby\",\n        c: [\n            \"FM\"\n        ],\n        r: 1\n    },\n    \"Pacific/Wake\": {\n        a: \"Pacific/Tarawa\",\n        c: [\n            \"UM\"\n        ],\n        r: 1\n    },\n    \"Pacific/Wallis\": {\n        a: \"Pacific/Tarawa\",\n        c: [\n            \"WF\"\n        ],\n        r: 1\n    },\n    \"Pacific/Yap\": {\n        a: \"Pacific/Port_Moresby\",\n        c: [\n            \"FM\"\n        ],\n        r: 1\n    },\n    Poland: {\n        a: \"Europe/Warsaw\",\n        r: 1\n    },\n    Portugal: {\n        a: \"Europe/Lisbon\",\n        r: 1\n    },\n    ROC: {\n        a: \"Asia/Taipei\",\n        r: 1\n    },\n    ROK: {\n        a: \"Asia/Seoul\",\n        r: 1\n    },\n    Singapore: {\n        a: \"Asia/Singapore\",\n        c: [\n            \"SG\"\n        ],\n        r: 1\n    },\n    Turkey: {\n        a: \"Europe/Istanbul\",\n        r: 1\n    },\n    UCT: {\n        a: \"Etc/UTC\",\n        r: 1\n    },\n    \"US/Alaska\": {\n        a: \"America/Anchorage\",\n        r: 1\n    },\n    \"US/Aleutian\": {\n        a: \"America/Adak\",\n        r: 1\n    },\n    \"US/Arizona\": {\n        a: \"America/Phoenix\",\n        c: [\n            \"US\"\n        ],\n        r: 1\n    },\n    \"US/Central\": {\n        a: \"America/Chicago\",\n        r: 1\n    },\n    \"US/East-Indiana\": {\n        a: \"America/Indiana/Indianapolis\",\n        r: 1\n    },\n    \"US/Eastern\": {\n        a: \"America/New_York\",\n        r: 1\n    },\n    \"US/Hawaii\": {\n        a: \"Pacific/Honolulu\",\n        r: 1\n    },\n    \"US/Indiana-Starke\": {\n        a: \"America/Indiana/Knox\",\n        r: 1\n    },\n    \"US/Michigan\": {\n        a: \"America/Detroit\",\n        r: 1\n    },\n    \"US/Mountain\": {\n        a: \"America/Denver\",\n        r: 1\n    },\n    \"US/Pacific\": {\n        a: \"America/Los_Angeles\",\n        r: 1\n    },\n    \"US/Samoa\": {\n        a: \"Pacific/Pago_Pago\",\n        c: [\n            \"AS\"\n        ],\n        r: 1\n    },\n    UTC: {\n        a: \"Etc/UTC\",\n        r: 1\n    },\n    Universal: {\n        a: \"Etc/UTC\",\n        r: 1\n    },\n    \"W-SU\": {\n        a: \"Europe/Moscow\",\n        r: 1\n    },\n    WET: {\n        a: \"Europe/Lisbon\",\n        r: 1\n    },\n    Zulu: {\n        a: \"Etc/UTC\",\n        r: 1\n    }\n};\nvar $12e2750474abc44b$var$data = {\n    countries: $12e2750474abc44b$var$countries$1,\n    timezones: $12e2750474abc44b$var$timezones$1\n};\nvar $12e2750474abc44b$var$timezonesMap;\nfunction $12e2750474abc44b$var$buildCountry(data, id) {\n    var name = data.countries[id];\n    if (!name) return null;\n    var tzMap = $12e2750474abc44b$var$getTimezonesMap(data)[id] || {};\n    return {\n        id: id,\n        name: name,\n        timezones: tzMap.current || [],\n        allTimezones: tzMap.all || []\n    };\n}\nfunction $12e2750474abc44b$var$getTimezonesMap(data) {\n    $12e2750474abc44b$var$timezonesMap || ($12e2750474abc44b$var$timezonesMap = $12e2750474abc44b$var$buildTimezonesMap(data));\n    return $12e2750474abc44b$var$timezonesMap;\n}\nfunction $12e2750474abc44b$var$buildTimezonesMap(data) {\n    return Object.keys(data.timezones).reduce(function(result, id) {\n        var tz = data.timezones[id];\n        var c = tz.c, a = tz.a;\n        var aliasTz = data.timezones[a] || {};\n        var countries = c || aliasTz.c;\n        if (!countries) return result;\n        var _iterator = $12e2750474abc44b$var$_createForOfIteratorHelper(countries), _step;\n        try {\n            for(_iterator.s(); !(_step = _iterator.n()).done;){\n                var country = _step.value;\n                if (!result[country]) Object.assign(result, $12e2750474abc44b$var$_defineProperty({}, country, {\n                    current: [],\n                    all: []\n                }));\n                if (tz.r === undefined) result[country].current.push(id);\n                result[country].all.push(id);\n            }\n        } catch (err) {\n            _iterator.e(err);\n        } finally{\n            _iterator.f();\n        }\n        return result;\n    }, {});\n}\nfunction $12e2750474abc44b$var$buildTimezone(data, name) {\n    var timezone = data.timezones[name];\n    if (!timezone) return null;\n    var _timezone$a = timezone.a, aliasOf = _timezone$a === void 0 ? null : _timezone$a;\n    var aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n    var tz = $12e2750474abc44b$var$_objectSpread2($12e2750474abc44b$var$_objectSpread2({}, aliasTz), data.timezones[name]);\n    var countries = tz.c || [];\n    var utcOffset = tz.u;\n    var dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n    var result = {\n        name: name,\n        countries: countries,\n        utcOffset: utcOffset,\n        utcOffsetStr: $12e2750474abc44b$var$getOffsetString(utcOffset),\n        dstOffset: dstOffset,\n        dstOffsetStr: $12e2750474abc44b$var$getOffsetString(dstOffset),\n        aliasOf: aliasOf\n    };\n    if (timezone.r) result.deprecated = true;\n    return result;\n}\nfunction $12e2750474abc44b$var$getOffsetString(offset) {\n    var hours = Math.floor(Math.abs(offset) / 60);\n    var min = offset % 60;\n    var sign = offset < 0 ? \"-\" : \"+\";\n    return \"\".concat(sign).concat($12e2750474abc44b$var$getNumberString(hours), \":\").concat($12e2750474abc44b$var$getNumberString(min));\n}\nfunction $12e2750474abc44b$var$getNumberString(input) {\n    var number_ = Math.abs(input);\n    var prefix = number_ < 10 ? \"0\" : \"\";\n    return \"\".concat(prefix).concat(number_);\n}\nvar $12e2750474abc44b$var$_excluded = [\n    \"allTimezones\"\n];\nvar $12e2750474abc44b$var$totalTimezones = Object.keys($12e2750474abc44b$var$data.timezones).length;\nvar $12e2750474abc44b$var$countries = {};\nvar $12e2750474abc44b$var$timezones = {};\nvar $12e2750474abc44b$var$memoizedTimezones = 0;\nfunction $12e2750474abc44b$export$295b74b5bfa1a9f4() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Object.keys($12e2750474abc44b$var$data.countries).reduce(function(previous, id) {\n        return Object.assign(previous, $12e2750474abc44b$var$_defineProperty({}, id, $12e2750474abc44b$export$a27f7d52d5670305(id, options)));\n    }, {});\n}\nfunction $12e2750474abc44b$export$eb9595b7abb8aac3() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if ($12e2750474abc44b$var$totalTimezones !== $12e2750474abc44b$var$memoizedTimezones) for(var _i = 0, _Object$keys = Object.keys($12e2750474abc44b$var$data.timezones); _i < _Object$keys.length; _i++){\n        var name = _Object$keys[_i];\n        $12e2750474abc44b$export$5ba2b8988138595d(name);\n    }\n    return $12e2750474abc44b$var$deliverTimezones($12e2750474abc44b$var$timezones, options);\n}\nfunction $12e2750474abc44b$export$a27f7d52d5670305(id) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!$12e2750474abc44b$var$countries[id]) $12e2750474abc44b$var$memoizeCountry($12e2750474abc44b$var$buildCountry($12e2750474abc44b$var$data, id));\n    return $12e2750474abc44b$var$deliverCountry($12e2750474abc44b$var$countries[id], options);\n}\nfunction $12e2750474abc44b$var$memoizeCountry(country) {\n    if (!country) return;\n    $12e2750474abc44b$var$countries[country.id] = country;\n}\nfunction $12e2750474abc44b$export$5ba2b8988138595d(name) {\n    if (!$12e2750474abc44b$var$timezones[name]) $12e2750474abc44b$var$memoizeTimezone($12e2750474abc44b$var$buildTimezone($12e2750474abc44b$var$data, name));\n    return $12e2750474abc44b$var$timezones[name] ? $12e2750474abc44b$var$_objectSpread2({}, $12e2750474abc44b$var$timezones[name]) : null;\n}\nfunction $12e2750474abc44b$var$memoizeTimezone(timezone) {\n    if (!timezone) return;\n    $12e2750474abc44b$var$timezones[timezone.name] = timezone;\n    $12e2750474abc44b$var$memoizedTimezones = Object.keys(timezone).length;\n}\nfunction $12e2750474abc44b$export$80082e5417665d(tzName) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var timezone = $12e2750474abc44b$export$5ba2b8988138595d(tzName) || {};\n    var values = timezone.countries || [];\n    return values.map(function(c) {\n        return $12e2750474abc44b$export$a27f7d52d5670305(c, options);\n    });\n}\nfunction $12e2750474abc44b$export$1e3b6f9ee1c45a55(tzName) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _getCountriesForTimez = $12e2750474abc44b$export$80082e5417665d(tzName, options), _getCountriesForTimez2 = $12e2750474abc44b$var$_slicedToArray(_getCountriesForTimez, 1), main = _getCountriesForTimez2[0];\n    return main || null;\n}\nfunction $12e2750474abc44b$export$5ef965ff0c36ab68(countryId) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var country = $12e2750474abc44b$export$a27f7d52d5670305(countryId, options);\n    if (!country) return null;\n    var values = country.timezones || [];\n    return values.map(function(timezone) {\n        return $12e2750474abc44b$export$5ba2b8988138595d(timezone);\n    });\n}\nfunction $12e2750474abc44b$var$deliverTimezones(tzs, options) {\n    var _ref = options || {}, deprecated = _ref.deprecated;\n    if (deprecated === true) return tzs;\n    return Object.keys(tzs).reduce(function(previous, key) {\n        if (!tzs[key].deprecated) Object.assign(previous, $12e2750474abc44b$var$_defineProperty({}, key, tzs[key]));\n        return previous;\n    }, {});\n}\nfunction $12e2750474abc44b$var$deliverCountry(country, options) {\n    if (!country) return null;\n    var _ref2 = options || {}, deprecated = _ref2.deprecated;\n    country.allTimezones;\n    var other = $12e2750474abc44b$var$_objectWithoutProperties(country, $12e2750474abc44b$var$_excluded);\n    var tz = deprecated ? country.allTimezones : country.timezones;\n    return $12e2750474abc44b$var$_objectSpread2($12e2750474abc44b$var$_objectSpread2({}, other), {}, {\n        timezones: tz\n    });\n}\nvar $12e2750474abc44b$export$2e2bcd8739ae039 = {\n    getCountry: $12e2750474abc44b$export$a27f7d52d5670305,\n    getTimezone: $12e2750474abc44b$export$5ba2b8988138595d,\n    getAllCountries: $12e2750474abc44b$export$295b74b5bfa1a9f4,\n    getAllTimezones: $12e2750474abc44b$export$eb9595b7abb8aac3,\n    getTimezonesForCountry: $12e2750474abc44b$export$5ef965ff0c36ab68,\n    getCountriesForTimezone: $12e2750474abc44b$export$80082e5417665d,\n    getCountryForTimezone: $12e2750474abc44b$export$1e3b6f9ee1c45a55\n};\n\n\nconst $543d6d2a56ed7d8d$var$FIVE_PM = 17;\nconst $543d6d2a56ed7d8d$var$tzs = (0, $12e2750474abc44b$export$eb9595b7abb8aac3)();\nconst $543d6d2a56ed7d8d$var$zones = document.getElementById(\"zones\");\nconst $543d6d2a56ed7d8d$var$utc = document.getElementById(\"utc\");\nif ($543d6d2a56ed7d8d$var$zones && $543d6d2a56ed7d8d$var$utc) {\n    const now = new Date();\n    const utcHours = now.getUTCHours();\n    const minutes = `0${now.getUTCMinutes()}`.slice(-2);\n    $543d6d2a56ed7d8d$var$utc.textContent = `${utcHours}:${minutes}`;\n    let offsetHours = [];\n    // west of utc is BEHIND in time, negative. east of utc is AHEAD in time, positive\n    if (utcHours === $543d6d2a56ed7d8d$var$FIVE_PM) offsetHours = [\n        0\n    ];\n    else offsetHours = [\n        $543d6d2a56ed7d8d$var$FIVE_PM - utcHours,\n        -(24 + utcHours - $543d6d2a56ed7d8d$var$FIVE_PM)\n    ];\n    Object.entries($543d6d2a56ed7d8d$var$tzs).forEach(([zone, details])=>{\n        // floor should help include time zones that are not on the exact hour\n        const target = Math.floor(details.dstOffset / 60);\n        if (offsetHours.includes(target)) {\n            const countries = (0, $12e2750474abc44b$export$80082e5417665d)(zone).map((country)=>country.name);\n            countries.forEach((country)=>{\n                const li = document.createElement(\"li\");\n                li.textContent = `${country}, ${zone}, ${details.dstOffset / 60}`;\n                $543d6d2a56ed7d8d$var$zones.appendChild(li);\n            });\n        }\n    });\n}\n\n\n//# sourceMappingURL=index.4e7854cd.js.map\n","import {\n  getAllTimezones,\n  getCountriesForTimezone,\n} from 'countries-and-timezones';\n\nconst FIVE_PM = 17;\n\nconst tzs = getAllTimezones();\n\nconst zones = document.getElementById('zones');\nconst utc = document.getElementById('utc');\n\nif (zones && utc) {\n  const now = new Date();\n  const utcHours = now.getUTCHours();\n\n  const minutes = `0${now.getUTCMinutes()}`.slice(-2);\n  utc.textContent = `${utcHours}:${minutes}`;\n\n  let offsetHours: Array<Number> = [];\n  // west of utc is BEHIND in time, negative. east of utc is AHEAD in time, positive\n  if (utcHours === FIVE_PM) {\n    offsetHours = [0];\n  } else {\n    offsetHours = [FIVE_PM - utcHours, -(24 + utcHours - FIVE_PM)];\n  }\n  Object.entries(tzs).forEach(([zone, details]) => {\n    // floor should help include time zones that are not on the exact hour\n    const target = Math.floor(details.dstOffset / 60);\n    if (offsetHours.includes(target)) {\n      const countries = getCountriesForTimezone(zone).map(\n        (country) => country.name\n      );\n      countries.forEach((country) => {\n        const li = document.createElement('li');\n        li.textContent = `${country}, ${zone}, ${details.dstOffset / 60}`;\n        zones.appendChild(li);\n      });\n    }\n  });\n}\n","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _createForOfIteratorHelper(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (!t) {\n    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n      t && (r = t);\n      var n = 0,\n        F = function () {};\n      return {\n        s: F,\n        n: function () {\n          return n >= r.length ? {\n            done: !0\n          } : {\n            done: !1,\n            value: r[n++]\n          };\n        },\n        e: function (r) {\n          throw r;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var o,\n    a = !0,\n    u = !1;\n  return {\n    s: function () {\n      t = t.call(r);\n    },\n    n: function () {\n      var r = t.next();\n      return a = r.done, r;\n    },\n    e: function (r) {\n      u = !0, o = r;\n    },\n    f: function () {\n      try {\n        a || null == t.return || t.return();\n      } finally {\n        if (u) throw o;\n      }\n    }\n  };\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = _objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var s = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar countries$1 = {\n\tAD: \"Andorra\",\n\tAE: \"United Arab Emirates\",\n\tAF: \"Afghanistan\",\n\tAG: \"Antigua and Barbuda\",\n\tAI: \"Anguilla\",\n\tAL: \"Albania\",\n\tAM: \"Armenia\",\n\tAO: \"Angola\",\n\tAQ: \"Antarctica\",\n\tAR: \"Argentina\",\n\tAS: \"American Samoa\",\n\tAT: \"Austria\",\n\tAU: \"Australia\",\n\tAW: \"Aruba\",\n\tAX: \"Åland Islands\",\n\tAZ: \"Azerbaijan\",\n\tBA: \"Bosnia and Herzegovina\",\n\tBB: \"Barbados\",\n\tBD: \"Bangladesh\",\n\tBE: \"Belgium\",\n\tBF: \"Burkina Faso\",\n\tBG: \"Bulgaria\",\n\tBH: \"Bahrain\",\n\tBI: \"Burundi\",\n\tBJ: \"Benin\",\n\tBL: \"Saint Barthélemy\",\n\tBM: \"Bermuda\",\n\tBN: \"Brunei\",\n\tBO: \"Bolivia\",\n\tBQ: \"Caribbean Netherlands\",\n\tBR: \"Brazil\",\n\tBS: \"Bahamas\",\n\tBT: \"Bhutan\",\n\tBW: \"Botswana\",\n\tBY: \"Belarus\",\n\tBZ: \"Belize\",\n\tCA: \"Canada\",\n\tCC: \"Cocos Islands\",\n\tCD: \"Democratic Republic of the Congo\",\n\tCF: \"Central African Republic\",\n\tCG: \"Republic of the Congo\",\n\tCH: \"Switzerland\",\n\tCI: \"Ivory Coast\",\n\tCK: \"Cook Islands\",\n\tCL: \"Chile\",\n\tCM: \"Cameroon\",\n\tCN: \"China\",\n\tCO: \"Colombia\",\n\tCR: \"Costa Rica\",\n\tCU: \"Cuba\",\n\tCV: \"Cabo Verde\",\n\tCW: \"Curaçao\",\n\tCX: \"Christmas Island\",\n\tCY: \"Cyprus\",\n\tCZ: \"Czechia\",\n\tDE: \"Germany\",\n\tDJ: \"Djibouti\",\n\tDK: \"Denmark\",\n\tDM: \"Dominica\",\n\tDO: \"Dominican Republic\",\n\tDZ: \"Algeria\",\n\tEC: \"Ecuador\",\n\tEE: \"Estonia\",\n\tEG: \"Egypt\",\n\tEH: \"Western Sahara\",\n\tER: \"Eritrea\",\n\tES: \"Spain\",\n\tET: \"Ethiopia\",\n\tFI: \"Finland\",\n\tFJ: \"Fiji\",\n\tFK: \"Falkland Islands\",\n\tFM: \"Micronesia\",\n\tFO: \"Faroe Islands\",\n\tFR: \"France\",\n\tGA: \"Gabon\",\n\tGB: \"United Kingdom\",\n\tGD: \"Grenada\",\n\tGE: \"Georgia\",\n\tGF: \"French Guiana\",\n\tGG: \"Guernsey\",\n\tGH: \"Ghana\",\n\tGI: \"Gibraltar\",\n\tGL: \"Greenland\",\n\tGM: \"Gambia\",\n\tGN: \"Guinea\",\n\tGP: \"Guadeloupe\",\n\tGQ: \"Equatorial Guinea\",\n\tGR: \"Greece\",\n\tGS: \"South Georgia and the South Sandwich Islands\",\n\tGT: \"Guatemala\",\n\tGU: \"Guam\",\n\tGW: \"Guinea-Bissau\",\n\tGY: \"Guyana\",\n\tHK: \"Hong Kong\",\n\tHN: \"Honduras\",\n\tHR: \"Croatia\",\n\tHT: \"Haiti\",\n\tHU: \"Hungary\",\n\tID: \"Indonesia\",\n\tIE: \"Ireland\",\n\tIL: \"Israel\",\n\tIM: \"Isle of Man\",\n\tIN: \"India\",\n\tIO: \"British Indian Ocean Territory\",\n\tIQ: \"Iraq\",\n\tIR: \"Iran\",\n\tIS: \"Iceland\",\n\tIT: \"Italy\",\n\tJE: \"Jersey\",\n\tJM: \"Jamaica\",\n\tJO: \"Jordan\",\n\tJP: \"Japan\",\n\tKE: \"Kenya\",\n\tKG: \"Kyrgyzstan\",\n\tKH: \"Cambodia\",\n\tKI: \"Kiribati\",\n\tKM: \"Comoros\",\n\tKN: \"Saint Kitts and Nevis\",\n\tKP: \"North Korea\",\n\tKR: \"South Korea\",\n\tKW: \"Kuwait\",\n\tKY: \"Cayman Islands\",\n\tKZ: \"Kazakhstan\",\n\tLA: \"Laos\",\n\tLB: \"Lebanon\",\n\tLC: \"Saint Lucia\",\n\tLI: \"Liechtenstein\",\n\tLK: \"Sri Lanka\",\n\tLR: \"Liberia\",\n\tLS: \"Lesotho\",\n\tLT: \"Lithuania\",\n\tLU: \"Luxembourg\",\n\tLV: \"Latvia\",\n\tLY: \"Libya\",\n\tMA: \"Morocco\",\n\tMC: \"Monaco\",\n\tMD: \"Moldova\",\n\tME: \"Montenegro\",\n\tMF: \"Saint Martin\",\n\tMG: \"Madagascar\",\n\tMH: \"Marshall Islands\",\n\tMK: \"North Macedonia\",\n\tML: \"Mali\",\n\tMM: \"Myanmar\",\n\tMN: \"Mongolia\",\n\tMO: \"Macao\",\n\tMP: \"Northern Mariana Islands\",\n\tMQ: \"Martinique\",\n\tMR: \"Mauritania\",\n\tMS: \"Montserrat\",\n\tMT: \"Malta\",\n\tMU: \"Mauritius\",\n\tMV: \"Maldives\",\n\tMW: \"Malawi\",\n\tMX: \"Mexico\",\n\tMY: \"Malaysia\",\n\tMZ: \"Mozambique\",\n\tNA: \"Namibia\",\n\tNC: \"New Caledonia\",\n\tNE: \"Niger\",\n\tNF: \"Norfolk Island\",\n\tNG: \"Nigeria\",\n\tNI: \"Nicaragua\",\n\tNL: \"Netherlands\",\n\tNO: \"Norway\",\n\tNP: \"Nepal\",\n\tNR: \"Nauru\",\n\tNU: \"Niue\",\n\tNZ: \"New Zealand\",\n\tOM: \"Oman\",\n\tPA: \"Panama\",\n\tPE: \"Peru\",\n\tPF: \"French Polynesia\",\n\tPG: \"Papua New Guinea\",\n\tPH: \"Philippines\",\n\tPK: \"Pakistan\",\n\tPL: \"Poland\",\n\tPM: \"Saint Pierre and Miquelon\",\n\tPN: \"Pitcairn\",\n\tPR: \"Puerto Rico\",\n\tPS: \"Palestine\",\n\tPT: \"Portugal\",\n\tPW: \"Palau\",\n\tPY: \"Paraguay\",\n\tQA: \"Qatar\",\n\tRE: \"Réunion\",\n\tRO: \"Romania\",\n\tRS: \"Serbia\",\n\tRU: \"Russia\",\n\tRW: \"Rwanda\",\n\tSA: \"Saudi Arabia\",\n\tSB: \"Solomon Islands\",\n\tSC: \"Seychelles\",\n\tSD: \"Sudan\",\n\tSE: \"Sweden\",\n\tSG: \"Singapore\",\n\tSH: \"Saint Helena, Ascension and Tristan da Cunha\",\n\tSI: \"Slovenia\",\n\tSJ: \"Svalbard and Jan Mayen\",\n\tSK: \"Slovakia\",\n\tSL: \"Sierra Leone\",\n\tSM: \"San Marino\",\n\tSN: \"Senegal\",\n\tSO: \"Somalia\",\n\tSR: \"Suriname\",\n\tSS: \"South Sudan\",\n\tST: \"Sao Tome and Principe\",\n\tSV: \"El Salvador\",\n\tSX: \"Sint Maarten\",\n\tSY: \"Syria\",\n\tSZ: \"Eswatini\",\n\tTC: \"Turks and Caicos Islands\",\n\tTD: \"Chad\",\n\tTF: \"French Southern Territories\",\n\tTG: \"Togo\",\n\tTH: \"Thailand\",\n\tTJ: \"Tajikistan\",\n\tTK: \"Tokelau\",\n\tTL: \"Timor-Leste\",\n\tTM: \"Turkmenistan\",\n\tTN: \"Tunisia\",\n\tTO: \"Tonga\",\n\tTR: \"Türkiye\",\n\tTT: \"Trinidad and Tobago\",\n\tTV: \"Tuvalu\",\n\tTW: \"Taiwan\",\n\tTZ: \"Tanzania\",\n\tUA: \"Ukraine\",\n\tUG: \"Uganda\",\n\tUM: \"United States Minor Outlying Islands\",\n\tUS: \"United States of America\",\n\tUY: \"Uruguay\",\n\tUZ: \"Uzbekistan\",\n\tVA: \"Holy See\",\n\tVC: \"Saint Vincent and the Grenadines\",\n\tVE: \"Venezuela\",\n\tVG: \"Virgin Islands (UK)\",\n\tVI: \"Virgin Islands (US)\",\n\tVN: \"Vietnam\",\n\tVU: \"Vanuatu\",\n\tWF: \"Wallis and Futuna\",\n\tWS: \"Samoa\",\n\tYE: \"Yemen\",\n\tYT: \"Mayotte\",\n\tZA: \"South Africa\",\n\tZM: \"Zambia\",\n\tZW: \"Zimbabwe\"\n};\nvar timezones$1 = {\n\t\"Africa/Abidjan\": {\n\t\tu: 0,\n\t\tc: [\n\t\t\t\"CI\",\n\t\t\t\"BF\",\n\t\t\t\"GH\",\n\t\t\t\"GM\",\n\t\t\t\"GN\",\n\t\t\t\"IS\",\n\t\t\t\"ML\",\n\t\t\t\"MR\",\n\t\t\t\"SH\",\n\t\t\t\"SL\",\n\t\t\t\"SN\",\n\t\t\t\"TG\"\n\t\t]\n\t},\n\t\"Africa/Accra\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"GH\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Addis_Ababa\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"ET\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Algiers\": {\n\t\tu: 60,\n\t\tc: [\n\t\t\t\"DZ\"\n\t\t]\n\t},\n\t\"Africa/Asmara\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"ER\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Asmera\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"ER\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Bamako\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"ML\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Bangui\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"CF\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Banjul\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"GM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Bissau\": {\n\t\tu: 0,\n\t\tc: [\n\t\t\t\"GW\"\n\t\t]\n\t},\n\t\"Africa/Blantyre\": {\n\t\ta: \"Africa/Maputo\",\n\t\tc: [\n\t\t\t\"MW\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Brazzaville\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"CG\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Bujumbura\": {\n\t\ta: \"Africa/Maputo\",\n\t\tc: [\n\t\t\t\"BI\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Cairo\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"EG\"\n\t\t]\n\t},\n\t\"Africa/Casablanca\": {\n\t\tu: 60,\n\t\td: 0,\n\t\tc: [\n\t\t\t\"MA\"\n\t\t]\n\t},\n\t\"Africa/Ceuta\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"ES\"\n\t\t]\n\t},\n\t\"Africa/Conakry\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"GN\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Dakar\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"SN\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Dar_es_Salaam\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"TZ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Djibouti\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"DJ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Douala\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"CM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/El_Aaiun\": {\n\t\tu: 60,\n\t\td: 0,\n\t\tc: [\n\t\t\t\"EH\"\n\t\t]\n\t},\n\t\"Africa/Freetown\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"SL\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Gaborone\": {\n\t\ta: \"Africa/Maputo\",\n\t\tc: [\n\t\t\t\"BW\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Harare\": {\n\t\ta: \"Africa/Maputo\",\n\t\tc: [\n\t\t\t\"ZW\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Johannesburg\": {\n\t\tu: 120,\n\t\tc: [\n\t\t\t\"ZA\",\n\t\t\t\"LS\",\n\t\t\t\"SZ\"\n\t\t]\n\t},\n\t\"Africa/Juba\": {\n\t\tu: 120,\n\t\tc: [\n\t\t\t\"SS\"\n\t\t]\n\t},\n\t\"Africa/Kampala\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"UG\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Khartoum\": {\n\t\tu: 120,\n\t\tc: [\n\t\t\t\"SD\"\n\t\t]\n\t},\n\t\"Africa/Kigali\": {\n\t\ta: \"Africa/Maputo\",\n\t\tc: [\n\t\t\t\"RW\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Kinshasa\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"CD\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Lagos\": {\n\t\tu: 60,\n\t\tc: [\n\t\t\t\"NG\",\n\t\t\t\"AO\",\n\t\t\t\"BJ\",\n\t\t\t\"CD\",\n\t\t\t\"CF\",\n\t\t\t\"CG\",\n\t\t\t\"CM\",\n\t\t\t\"GA\",\n\t\t\t\"GQ\",\n\t\t\t\"NE\"\n\t\t]\n\t},\n\t\"Africa/Libreville\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"GA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Lome\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"TG\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Luanda\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"AO\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Lubumbashi\": {\n\t\ta: \"Africa/Maputo\",\n\t\tc: [\n\t\t\t\"CD\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Lusaka\": {\n\t\ta: \"Africa/Maputo\",\n\t\tc: [\n\t\t\t\"ZM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Malabo\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"GQ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Maputo\": {\n\t\tu: 120,\n\t\tc: [\n\t\t\t\"MZ\",\n\t\t\t\"BI\",\n\t\t\t\"BW\",\n\t\t\t\"CD\",\n\t\t\t\"MW\",\n\t\t\t\"RW\",\n\t\t\t\"ZM\",\n\t\t\t\"ZW\"\n\t\t]\n\t},\n\t\"Africa/Maseru\": {\n\t\ta: \"Africa/Johannesburg\",\n\t\tc: [\n\t\t\t\"LS\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Mbabane\": {\n\t\ta: \"Africa/Johannesburg\",\n\t\tc: [\n\t\t\t\"SZ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Mogadishu\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"SO\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Monrovia\": {\n\t\tu: 0,\n\t\tc: [\n\t\t\t\"LR\"\n\t\t]\n\t},\n\t\"Africa/Nairobi\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"KE\",\n\t\t\t\"DJ\",\n\t\t\t\"ER\",\n\t\t\t\"ET\",\n\t\t\t\"KM\",\n\t\t\t\"MG\",\n\t\t\t\"SO\",\n\t\t\t\"TZ\",\n\t\t\t\"UG\",\n\t\t\t\"YT\"\n\t\t]\n\t},\n\t\"Africa/Ndjamena\": {\n\t\tu: 60,\n\t\tc: [\n\t\t\t\"TD\"\n\t\t]\n\t},\n\t\"Africa/Niamey\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"NE\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Nouakchott\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"MR\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Ouagadougou\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"BF\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Porto-Novo\": {\n\t\ta: \"Africa/Lagos\",\n\t\tc: [\n\t\t\t\"BJ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Sao_Tome\": {\n\t\tu: 0,\n\t\tc: [\n\t\t\t\"ST\"\n\t\t]\n\t},\n\t\"Africa/Timbuktu\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"ML\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Africa/Tripoli\": {\n\t\tu: 120,\n\t\tc: [\n\t\t\t\"LY\"\n\t\t]\n\t},\n\t\"Africa/Tunis\": {\n\t\tu: 60,\n\t\tc: [\n\t\t\t\"TN\"\n\t\t]\n\t},\n\t\"Africa/Windhoek\": {\n\t\tu: 120,\n\t\tc: [\n\t\t\t\"NA\"\n\t\t]\n\t},\n\t\"America/Adak\": {\n\t\tu: -600,\n\t\td: -540,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Anchorage\": {\n\t\tu: -540,\n\t\td: -480,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Anguilla\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"AI\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Antigua\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"AG\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Araguaina\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Argentina/Buenos_Aires\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/Catamarca\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/ComodRivadavia\": {\n\t\ta: \"America/Argentina/Catamarca\",\n\t\tr: 1\n\t},\n\t\"America/Argentina/Cordoba\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/Jujuy\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/La_Rioja\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/Mendoza\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/Rio_Gallegos\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/Salta\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/San_Juan\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/San_Luis\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/Tucuman\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Argentina/Ushuaia\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AR\"\n\t\t]\n\t},\n\t\"America/Aruba\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"AW\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Asuncion\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"PY\"\n\t\t]\n\t},\n\t\"America/Atikokan\": {\n\t\ta: \"America/Panama\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Atka\": {\n\t\ta: \"America/Adak\",\n\t\tr: 1\n\t},\n\t\"America/Bahia\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Bahia_Banderas\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Barbados\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"BB\"\n\t\t]\n\t},\n\t\"America/Belem\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Belize\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"BZ\"\n\t\t]\n\t},\n\t\"America/Blanc-Sablon\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Boa_Vista\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Bogota\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"CO\"\n\t\t]\n\t},\n\t\"America/Boise\": {\n\t\tu: -420,\n\t\td: -360,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Buenos_Aires\": {\n\t\ta: \"America/Argentina/Buenos_Aires\",\n\t\tr: 1\n\t},\n\t\"America/Cambridge_Bay\": {\n\t\tu: -420,\n\t\td: -360,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Campo_Grande\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Cancun\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Caracas\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"VE\"\n\t\t]\n\t},\n\t\"America/Catamarca\": {\n\t\ta: \"America/Argentina/Catamarca\",\n\t\tr: 1\n\t},\n\t\"America/Cayenne\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"GF\"\n\t\t]\n\t},\n\t\"America/Cayman\": {\n\t\ta: \"America/Panama\",\n\t\tc: [\n\t\t\t\"KY\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Chicago\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Chihuahua\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Ciudad_Juarez\": {\n\t\tu: -420,\n\t\td: -360,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Coral_Harbour\": {\n\t\ta: \"America/Panama\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Cordoba\": {\n\t\ta: \"America/Argentina/Cordoba\",\n\t\tr: 1\n\t},\n\t\"America/Costa_Rica\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"CR\"\n\t\t]\n\t},\n\t\"America/Creston\": {\n\t\ta: \"America/Phoenix\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Cuiaba\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Curacao\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"CW\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Danmarkshavn\": {\n\t\tu: 0,\n\t\tc: [\n\t\t\t\"GL\"\n\t\t]\n\t},\n\t\"America/Dawson\": {\n\t\tu: -420,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Dawson_Creek\": {\n\t\tu: -420,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Denver\": {\n\t\tu: -420,\n\t\td: -360,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Detroit\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Dominica\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"DM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Edmonton\": {\n\t\tu: -420,\n\t\td: -360,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Eirunepe\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/El_Salvador\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"SV\"\n\t\t]\n\t},\n\t\"America/Ensenada\": {\n\t\ta: \"America/Tijuana\",\n\t\tr: 1\n\t},\n\t\"America/Fort_Nelson\": {\n\t\tu: -420,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Fort_Wayne\": {\n\t\ta: \"America/Indiana/Indianapolis\",\n\t\tr: 1\n\t},\n\t\"America/Fortaleza\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Glace_Bay\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Godthab\": {\n\t\ta: \"America/Nuuk\",\n\t\tr: 1\n\t},\n\t\"America/Goose_Bay\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Grand_Turk\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"TC\"\n\t\t]\n\t},\n\t\"America/Grenada\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"GD\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Guadeloupe\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"GP\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Guatemala\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"GT\"\n\t\t]\n\t},\n\t\"America/Guayaquil\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"EC\"\n\t\t]\n\t},\n\t\"America/Guyana\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"GY\"\n\t\t]\n\t},\n\t\"America/Halifax\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Havana\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"CU\"\n\t\t]\n\t},\n\t\"America/Hermosillo\": {\n\t\tu: -420,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Indiana/Indianapolis\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indiana/Knox\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indiana/Marengo\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indiana/Petersburg\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indiana/Tell_City\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indiana/Vevay\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indiana/Vincennes\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indiana/Winamac\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Indianapolis\": {\n\t\ta: \"America/Indiana/Indianapolis\",\n\t\tr: 1\n\t},\n\t\"America/Inuvik\": {\n\t\tu: -420,\n\t\td: -360,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Iqaluit\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Jamaica\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"JM\"\n\t\t]\n\t},\n\t\"America/Jujuy\": {\n\t\ta: \"America/Argentina/Jujuy\",\n\t\tr: 1\n\t},\n\t\"America/Juneau\": {\n\t\tu: -540,\n\t\td: -480,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Kentucky/Louisville\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Kentucky/Monticello\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Knox_IN\": {\n\t\ta: \"America/Indiana/Knox\",\n\t\tr: 1\n\t},\n\t\"America/Kralendijk\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"BQ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/La_Paz\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"BO\"\n\t\t]\n\t},\n\t\"America/Lima\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"PE\"\n\t\t]\n\t},\n\t\"America/Los_Angeles\": {\n\t\tu: -480,\n\t\td: -420,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Louisville\": {\n\t\ta: \"America/Kentucky/Louisville\",\n\t\tr: 1\n\t},\n\t\"America/Lower_Princes\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"SX\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Maceio\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Managua\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"NI\"\n\t\t]\n\t},\n\t\"America/Manaus\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Marigot\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"MF\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Martinique\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"MQ\"\n\t\t]\n\t},\n\t\"America/Matamoros\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Mazatlan\": {\n\t\tu: -420,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Mendoza\": {\n\t\ta: \"America/Argentina/Mendoza\",\n\t\tr: 1\n\t},\n\t\"America/Menominee\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Merida\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Metlakatla\": {\n\t\tu: -540,\n\t\td: -480,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Mexico_City\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Miquelon\": {\n\t\tu: -180,\n\t\td: -120,\n\t\tc: [\n\t\t\t\"PM\"\n\t\t]\n\t},\n\t\"America/Moncton\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Monterrey\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Montevideo\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"UY\"\n\t\t]\n\t},\n\t\"America/Montreal\": {\n\t\ta: \"America/Toronto\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Montserrat\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"MS\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Nassau\": {\n\t\ta: \"America/Toronto\",\n\t\tc: [\n\t\t\t\"BS\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/New_York\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Nipigon\": {\n\t\ta: \"America/Toronto\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Nome\": {\n\t\tu: -540,\n\t\td: -480,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Noronha\": {\n\t\tu: -120,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/North_Dakota/Beulah\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/North_Dakota/Center\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/North_Dakota/New_Salem\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Nuuk\": {\n\t\tu: -120,\n\t\td: -60,\n\t\tc: [\n\t\t\t\"GL\"\n\t\t]\n\t},\n\t\"America/Ojinaga\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Panama\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"PA\",\n\t\t\t\"CA\",\n\t\t\t\"KY\"\n\t\t]\n\t},\n\t\"America/Pangnirtung\": {\n\t\ta: \"America/Iqaluit\",\n\t\tr: 1\n\t},\n\t\"America/Paramaribo\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"SR\"\n\t\t]\n\t},\n\t\"America/Phoenix\": {\n\t\tu: -420,\n\t\tc: [\n\t\t\t\"US\",\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Port-au-Prince\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"HT\"\n\t\t]\n\t},\n\t\"America/Port_of_Spain\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"TT\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Porto_Acre\": {\n\t\ta: \"America/Rio_Branco\",\n\t\tr: 1\n\t},\n\t\"America/Porto_Velho\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Puerto_Rico\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"PR\",\n\t\t\t\"AG\",\n\t\t\t\"CA\",\n\t\t\t\"AI\",\n\t\t\t\"AW\",\n\t\t\t\"BL\",\n\t\t\t\"BQ\",\n\t\t\t\"CW\",\n\t\t\t\"DM\",\n\t\t\t\"GD\",\n\t\t\t\"GP\",\n\t\t\t\"KN\",\n\t\t\t\"LC\",\n\t\t\t\"MF\",\n\t\t\t\"MS\",\n\t\t\t\"SX\",\n\t\t\t\"TT\",\n\t\t\t\"VC\",\n\t\t\t\"VG\",\n\t\t\t\"VI\"\n\t\t]\n\t},\n\t\"America/Punta_Arenas\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"CL\"\n\t\t]\n\t},\n\t\"America/Rainy_River\": {\n\t\ta: \"America/Winnipeg\",\n\t\tr: 1\n\t},\n\t\"America/Rankin_Inlet\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Recife\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Regina\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Resolute\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Rio_Branco\": {\n\t\tu: -300,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Rosario\": {\n\t\ta: \"America/Argentina/Cordoba\",\n\t\tr: 1\n\t},\n\t\"America/Santa_Isabel\": {\n\t\ta: \"America/Tijuana\",\n\t\tr: 1\n\t},\n\t\"America/Santarem\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Santiago\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"CL\"\n\t\t]\n\t},\n\t\"America/Santo_Domingo\": {\n\t\tu: -240,\n\t\tc: [\n\t\t\t\"DO\"\n\t\t]\n\t},\n\t\"America/Sao_Paulo\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"BR\"\n\t\t]\n\t},\n\t\"America/Scoresbysund\": {\n\t\tu: -120,\n\t\td: -60,\n\t\tc: [\n\t\t\t\"GL\"\n\t\t]\n\t},\n\t\"America/Shiprock\": {\n\t\ta: \"America/Denver\",\n\t\tr: 1\n\t},\n\t\"America/Sitka\": {\n\t\tu: -540,\n\t\td: -480,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/St_Barthelemy\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"BL\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/St_Johns\": {\n\t\tu: -210,\n\t\td: -150,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/St_Kitts\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"KN\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/St_Lucia\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"LC\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/St_Thomas\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"VI\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/St_Vincent\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"VC\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Swift_Current\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Tegucigalpa\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"HN\"\n\t\t]\n\t},\n\t\"America/Thule\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"GL\"\n\t\t]\n\t},\n\t\"America/Thunder_Bay\": {\n\t\ta: \"America/Toronto\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Tijuana\": {\n\t\tu: -480,\n\t\td: -420,\n\t\tc: [\n\t\t\t\"MX\"\n\t\t]\n\t},\n\t\"America/Toronto\": {\n\t\tu: -300,\n\t\td: -240,\n\t\tc: [\n\t\t\t\"CA\",\n\t\t\t\"BS\"\n\t\t]\n\t},\n\t\"America/Tortola\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"VG\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Vancouver\": {\n\t\tu: -480,\n\t\td: -420,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Virgin\": {\n\t\ta: \"America/Puerto_Rico\",\n\t\tc: [\n\t\t\t\"VI\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"America/Whitehorse\": {\n\t\tu: -420,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Winnipeg\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"CA\"\n\t\t]\n\t},\n\t\"America/Yakutat\": {\n\t\tu: -540,\n\t\td: -480,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"America/Yellowknife\": {\n\t\ta: \"America/Edmonton\",\n\t\tr: 1\n\t},\n\t\"Antarctica/Casey\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Antarctica/Davis\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Antarctica/DumontDUrville\": {\n\t\ta: \"Pacific/Port_Moresby\",\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Antarctica/Macquarie\": {\n\t\tu: 600,\n\t\td: 660,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Antarctica/Mawson\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Antarctica/McMurdo\": {\n\t\ta: \"Pacific/Auckland\",\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Antarctica/Palmer\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Antarctica/Rothera\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Antarctica/South_Pole\": {\n\t\ta: \"Pacific/Auckland\",\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Antarctica/Syowa\": {\n\t\ta: \"Asia/Riyadh\",\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Antarctica/Troll\": {\n\t\tu: 0,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Antarctica/Vostok\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Arctic/Longyearbyen\": {\n\t\ta: \"Europe/Berlin\",\n\t\tc: [\n\t\t\t\"SJ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Aden\": {\n\t\ta: \"Asia/Riyadh\",\n\t\tc: [\n\t\t\t\"YE\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Almaty\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"KZ\"\n\t\t]\n\t},\n\t\"Asia/Amman\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"JO\"\n\t\t]\n\t},\n\t\"Asia/Anadyr\": {\n\t\tu: 720,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Aqtau\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"KZ\"\n\t\t]\n\t},\n\t\"Asia/Aqtobe\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"KZ\"\n\t\t]\n\t},\n\t\"Asia/Ashgabat\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"TM\"\n\t\t]\n\t},\n\t\"Asia/Ashkhabad\": {\n\t\ta: \"Asia/Ashgabat\",\n\t\tr: 1\n\t},\n\t\"Asia/Atyrau\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"KZ\"\n\t\t]\n\t},\n\t\"Asia/Baghdad\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"IQ\"\n\t\t]\n\t},\n\t\"Asia/Bahrain\": {\n\t\ta: \"Asia/Qatar\",\n\t\tc: [\n\t\t\t\"BH\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Baku\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"AZ\"\n\t\t]\n\t},\n\t\"Asia/Bangkok\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"TH\",\n\t\t\t\"CX\",\n\t\t\t\"KH\",\n\t\t\t\"LA\",\n\t\t\t\"VN\"\n\t\t]\n\t},\n\t\"Asia/Barnaul\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Beirut\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"LB\"\n\t\t]\n\t},\n\t\"Asia/Bishkek\": {\n\t\tu: 360,\n\t\tc: [\n\t\t\t\"KG\"\n\t\t]\n\t},\n\t\"Asia/Brunei\": {\n\t\ta: \"Asia/Kuching\",\n\t\tc: [\n\t\t\t\"BN\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Calcutta\": {\n\t\ta: \"Asia/Kolkata\",\n\t\tr: 1\n\t},\n\t\"Asia/Chita\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Choibalsan\": {\n\t\ta: \"Asia/Ulaanbaatar\",\n\t\tr: 1\n\t},\n\t\"Asia/Chongqing\": {\n\t\ta: \"Asia/Shanghai\",\n\t\tr: 1\n\t},\n\t\"Asia/Chungking\": {\n\t\ta: \"Asia/Shanghai\",\n\t\tr: 1\n\t},\n\t\"Asia/Colombo\": {\n\t\tu: 330,\n\t\tc: [\n\t\t\t\"LK\"\n\t\t]\n\t},\n\t\"Asia/Dacca\": {\n\t\ta: \"Asia/Dhaka\",\n\t\tr: 1\n\t},\n\t\"Asia/Damascus\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"SY\"\n\t\t]\n\t},\n\t\"Asia/Dhaka\": {\n\t\tu: 360,\n\t\tc: [\n\t\t\t\"BD\"\n\t\t]\n\t},\n\t\"Asia/Dili\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"TL\"\n\t\t]\n\t},\n\t\"Asia/Dubai\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"AE\",\n\t\t\t\"OM\",\n\t\t\t\"RE\",\n\t\t\t\"SC\",\n\t\t\t\"TF\"\n\t\t]\n\t},\n\t\"Asia/Dushanbe\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"TJ\"\n\t\t]\n\t},\n\t\"Asia/Famagusta\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"CY\"\n\t\t]\n\t},\n\t\"Asia/Gaza\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"PS\"\n\t\t]\n\t},\n\t\"Asia/Harbin\": {\n\t\ta: \"Asia/Shanghai\",\n\t\tr: 1\n\t},\n\t\"Asia/Hebron\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"PS\"\n\t\t]\n\t},\n\t\"Asia/Ho_Chi_Minh\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"VN\"\n\t\t]\n\t},\n\t\"Asia/Hong_Kong\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"HK\"\n\t\t]\n\t},\n\t\"Asia/Hovd\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"MN\"\n\t\t]\n\t},\n\t\"Asia/Irkutsk\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Istanbul\": {\n\t\ta: \"Europe/Istanbul\",\n\t\tr: 1\n\t},\n\t\"Asia/Jakarta\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"ID\"\n\t\t]\n\t},\n\t\"Asia/Jayapura\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"ID\"\n\t\t]\n\t},\n\t\"Asia/Jerusalem\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"IL\"\n\t\t]\n\t},\n\t\"Asia/Kabul\": {\n\t\tu: 270,\n\t\tc: [\n\t\t\t\"AF\"\n\t\t]\n\t},\n\t\"Asia/Kamchatka\": {\n\t\tu: 720,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Karachi\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"PK\"\n\t\t]\n\t},\n\t\"Asia/Kashgar\": {\n\t\ta: \"Asia/Urumqi\",\n\t\tr: 1\n\t},\n\t\"Asia/Kathmandu\": {\n\t\tu: 345,\n\t\tc: [\n\t\t\t\"NP\"\n\t\t]\n\t},\n\t\"Asia/Katmandu\": {\n\t\ta: \"Asia/Kathmandu\",\n\t\tr: 1\n\t},\n\t\"Asia/Khandyga\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Kolkata\": {\n\t\tu: 330,\n\t\tc: [\n\t\t\t\"IN\"\n\t\t]\n\t},\n\t\"Asia/Krasnoyarsk\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Kuala_Lumpur\": {\n\t\ta: \"Asia/Singapore\",\n\t\tc: [\n\t\t\t\"MY\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Kuching\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"MY\",\n\t\t\t\"BN\"\n\t\t]\n\t},\n\t\"Asia/Kuwait\": {\n\t\ta: \"Asia/Riyadh\",\n\t\tc: [\n\t\t\t\"KW\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Macao\": {\n\t\ta: \"Asia/Macau\",\n\t\tr: 1\n\t},\n\t\"Asia/Macau\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"MO\"\n\t\t]\n\t},\n\t\"Asia/Magadan\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Makassar\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"ID\"\n\t\t]\n\t},\n\t\"Asia/Manila\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"PH\"\n\t\t]\n\t},\n\t\"Asia/Muscat\": {\n\t\ta: \"Asia/Dubai\",\n\t\tc: [\n\t\t\t\"OM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Nicosia\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"CY\"\n\t\t]\n\t},\n\t\"Asia/Novokuznetsk\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Novosibirsk\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Omsk\": {\n\t\tu: 360,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Oral\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"KZ\"\n\t\t]\n\t},\n\t\"Asia/Phnom_Penh\": {\n\t\ta: \"Asia/Bangkok\",\n\t\tc: [\n\t\t\t\"KH\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Pontianak\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"ID\"\n\t\t]\n\t},\n\t\"Asia/Pyongyang\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"KP\"\n\t\t]\n\t},\n\t\"Asia/Qatar\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"QA\",\n\t\t\t\"BH\"\n\t\t]\n\t},\n\t\"Asia/Qostanay\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"KZ\"\n\t\t]\n\t},\n\t\"Asia/Qyzylorda\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"KZ\"\n\t\t]\n\t},\n\t\"Asia/Rangoon\": {\n\t\ta: \"Asia/Yangon\",\n\t\tc: [\n\t\t\t\"MM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Riyadh\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"SA\",\n\t\t\t\"AQ\",\n\t\t\t\"KW\",\n\t\t\t\"YE\"\n\t\t]\n\t},\n\t\"Asia/Saigon\": {\n\t\ta: \"Asia/Ho_Chi_Minh\",\n\t\tr: 1\n\t},\n\t\"Asia/Sakhalin\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Samarkand\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"UZ\"\n\t\t]\n\t},\n\t\"Asia/Seoul\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"KR\"\n\t\t]\n\t},\n\t\"Asia/Shanghai\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"CN\"\n\t\t]\n\t},\n\t\"Asia/Singapore\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"SG\",\n\t\t\t\"MY\"\n\t\t]\n\t},\n\t\"Asia/Srednekolymsk\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Taipei\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"TW\"\n\t\t]\n\t},\n\t\"Asia/Tashkent\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"UZ\"\n\t\t]\n\t},\n\t\"Asia/Tbilisi\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"GE\"\n\t\t]\n\t},\n\t\"Asia/Tehran\": {\n\t\tu: 210,\n\t\tc: [\n\t\t\t\"IR\"\n\t\t]\n\t},\n\t\"Asia/Tel_Aviv\": {\n\t\ta: \"Asia/Jerusalem\",\n\t\tr: 1\n\t},\n\t\"Asia/Thimbu\": {\n\t\ta: \"Asia/Thimphu\",\n\t\tr: 1\n\t},\n\t\"Asia/Thimphu\": {\n\t\tu: 360,\n\t\tc: [\n\t\t\t\"BT\"\n\t\t]\n\t},\n\t\"Asia/Tokyo\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"JP\"\n\t\t]\n\t},\n\t\"Asia/Tomsk\": {\n\t\tu: 420,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Ujung_Pandang\": {\n\t\ta: \"Asia/Makassar\",\n\t\tr: 1\n\t},\n\t\"Asia/Ulaanbaatar\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"MN\"\n\t\t]\n\t},\n\t\"Asia/Ulan_Bator\": {\n\t\ta: \"Asia/Ulaanbaatar\",\n\t\tr: 1\n\t},\n\t\"Asia/Urumqi\": {\n\t\tu: 360,\n\t\tc: [\n\t\t\t\"CN\"\n\t\t]\n\t},\n\t\"Asia/Ust-Nera\": {\n\t\tu: 600,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Vientiane\": {\n\t\ta: \"Asia/Bangkok\",\n\t\tc: [\n\t\t\t\"LA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Asia/Vladivostok\": {\n\t\tu: 600,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Yakutsk\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Yangon\": {\n\t\tu: 390,\n\t\tc: [\n\t\t\t\"MM\",\n\t\t\t\"CC\"\n\t\t]\n\t},\n\t\"Asia/Yekaterinburg\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Asia/Yerevan\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"AM\"\n\t\t]\n\t},\n\t\"Atlantic/Azores\": {\n\t\tu: -60,\n\t\td: 0,\n\t\tc: [\n\t\t\t\"PT\"\n\t\t]\n\t},\n\t\"Atlantic/Bermuda\": {\n\t\tu: -240,\n\t\td: -180,\n\t\tc: [\n\t\t\t\"BM\"\n\t\t]\n\t},\n\t\"Atlantic/Canary\": {\n\t\tu: 0,\n\t\td: 60,\n\t\tc: [\n\t\t\t\"ES\"\n\t\t]\n\t},\n\t\"Atlantic/Cape_Verde\": {\n\t\tu: -60,\n\t\tc: [\n\t\t\t\"CV\"\n\t\t]\n\t},\n\t\"Atlantic/Faeroe\": {\n\t\ta: \"Atlantic/Faroe\",\n\t\tr: 1\n\t},\n\t\"Atlantic/Faroe\": {\n\t\tu: 0,\n\t\td: 60,\n\t\tc: [\n\t\t\t\"FO\"\n\t\t]\n\t},\n\t\"Atlantic/Jan_Mayen\": {\n\t\ta: \"Europe/Berlin\",\n\t\tc: [\n\t\t\t\"SJ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Atlantic/Madeira\": {\n\t\tu: 0,\n\t\td: 60,\n\t\tc: [\n\t\t\t\"PT\"\n\t\t]\n\t},\n\t\"Atlantic/Reykjavik\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"IS\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Atlantic/South_Georgia\": {\n\t\tu: -120,\n\t\tc: [\n\t\t\t\"GS\"\n\t\t]\n\t},\n\t\"Atlantic/St_Helena\": {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"SH\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Atlantic/Stanley\": {\n\t\tu: -180,\n\t\tc: [\n\t\t\t\"FK\"\n\t\t]\n\t},\n\t\"Australia/ACT\": {\n\t\ta: \"Australia/Sydney\",\n\t\tr: 1\n\t},\n\t\"Australia/Adelaide\": {\n\t\tu: 570,\n\t\td: 630,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Brisbane\": {\n\t\tu: 600,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Broken_Hill\": {\n\t\tu: 570,\n\t\td: 630,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Canberra\": {\n\t\ta: \"Australia/Sydney\",\n\t\tr: 1\n\t},\n\t\"Australia/Currie\": {\n\t\ta: \"Australia/Hobart\",\n\t\tr: 1\n\t},\n\t\"Australia/Darwin\": {\n\t\tu: 570,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Eucla\": {\n\t\tu: 525,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Hobart\": {\n\t\tu: 600,\n\t\td: 660,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/LHI\": {\n\t\ta: \"Australia/Lord_Howe\",\n\t\tr: 1\n\t},\n\t\"Australia/Lindeman\": {\n\t\tu: 600,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Lord_Howe\": {\n\t\tu: 630,\n\t\td: 660,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Melbourne\": {\n\t\tu: 600,\n\t\td: 660,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/NSW\": {\n\t\ta: \"Australia/Sydney\",\n\t\tr: 1\n\t},\n\t\"Australia/North\": {\n\t\ta: \"Australia/Darwin\",\n\t\tr: 1\n\t},\n\t\"Australia/Perth\": {\n\t\tu: 480,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Queensland\": {\n\t\ta: \"Australia/Brisbane\",\n\t\tr: 1\n\t},\n\t\"Australia/South\": {\n\t\ta: \"Australia/Adelaide\",\n\t\tr: 1\n\t},\n\t\"Australia/Sydney\": {\n\t\tu: 600,\n\t\td: 660,\n\t\tc: [\n\t\t\t\"AU\"\n\t\t]\n\t},\n\t\"Australia/Tasmania\": {\n\t\ta: \"Australia/Hobart\",\n\t\tr: 1\n\t},\n\t\"Australia/Victoria\": {\n\t\ta: \"Australia/Melbourne\",\n\t\tr: 1\n\t},\n\t\"Australia/West\": {\n\t\ta: \"Australia/Perth\",\n\t\tr: 1\n\t},\n\t\"Australia/Yancowinna\": {\n\t\ta: \"Australia/Broken_Hill\",\n\t\tr: 1\n\t},\n\t\"Brazil/Acre\": {\n\t\ta: \"America/Rio_Branco\",\n\t\tr: 1\n\t},\n\t\"Brazil/DeNoronha\": {\n\t\ta: \"America/Noronha\",\n\t\tr: 1\n\t},\n\t\"Brazil/East\": {\n\t\ta: \"America/Sao_Paulo\",\n\t\tr: 1\n\t},\n\t\"Brazil/West\": {\n\t\ta: \"America/Manaus\",\n\t\tr: 1\n\t},\n\tCET: {\n\t\ta: \"Europe/Brussels\",\n\t\tr: 1\n\t},\n\tCST6CDT: {\n\t\ta: \"America/Chicago\",\n\t\tr: 1\n\t},\n\t\"Canada/Atlantic\": {\n\t\ta: \"America/Halifax\",\n\t\tr: 1\n\t},\n\t\"Canada/Central\": {\n\t\ta: \"America/Winnipeg\",\n\t\tr: 1\n\t},\n\t\"Canada/Eastern\": {\n\t\ta: \"America/Toronto\",\n\t\tc: [\n\t\t\t\"CA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Canada/Mountain\": {\n\t\ta: \"America/Edmonton\",\n\t\tr: 1\n\t},\n\t\"Canada/Newfoundland\": {\n\t\ta: \"America/St_Johns\",\n\t\tr: 1\n\t},\n\t\"Canada/Pacific\": {\n\t\ta: \"America/Vancouver\",\n\t\tr: 1\n\t},\n\t\"Canada/Saskatchewan\": {\n\t\ta: \"America/Regina\",\n\t\tr: 1\n\t},\n\t\"Canada/Yukon\": {\n\t\ta: \"America/Whitehorse\",\n\t\tr: 1\n\t},\n\t\"Chile/Continental\": {\n\t\ta: \"America/Santiago\",\n\t\tr: 1\n\t},\n\t\"Chile/EasterIsland\": {\n\t\ta: \"Pacific/Easter\",\n\t\tr: 1\n\t},\n\tCuba: {\n\t\ta: \"America/Havana\",\n\t\tr: 1\n\t},\n\tEET: {\n\t\ta: \"Europe/Athens\",\n\t\tr: 1\n\t},\n\tEST: {\n\t\ta: \"America/Panama\",\n\t\tr: 1\n\t},\n\tEST5EDT: {\n\t\ta: \"America/New_York\",\n\t\tr: 1\n\t},\n\tEgypt: {\n\t\ta: \"Africa/Cairo\",\n\t\tr: 1\n\t},\n\tEire: {\n\t\ta: \"Europe/Dublin\",\n\t\tr: 1\n\t},\n\t\"Etc/GMT\": {\n\t\tu: 0\n\t},\n\t\"Etc/GMT+0\": {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\t\"Etc/GMT+1\": {\n\t\tu: -60\n\t},\n\t\"Etc/GMT+10\": {\n\t\tu: -600\n\t},\n\t\"Etc/GMT+11\": {\n\t\tu: -660\n\t},\n\t\"Etc/GMT+12\": {\n\t\tu: -720\n\t},\n\t\"Etc/GMT+2\": {\n\t\tu: -120\n\t},\n\t\"Etc/GMT+3\": {\n\t\tu: -180\n\t},\n\t\"Etc/GMT+4\": {\n\t\tu: -240\n\t},\n\t\"Etc/GMT+5\": {\n\t\tu: -300\n\t},\n\t\"Etc/GMT+6\": {\n\t\tu: -360\n\t},\n\t\"Etc/GMT+7\": {\n\t\tu: -420\n\t},\n\t\"Etc/GMT+8\": {\n\t\tu: -480\n\t},\n\t\"Etc/GMT+9\": {\n\t\tu: -540\n\t},\n\t\"Etc/GMT-0\": {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\t\"Etc/GMT-1\": {\n\t\tu: 60\n\t},\n\t\"Etc/GMT-10\": {\n\t\tu: 600\n\t},\n\t\"Etc/GMT-11\": {\n\t\tu: 660\n\t},\n\t\"Etc/GMT-12\": {\n\t\tu: 720\n\t},\n\t\"Etc/GMT-13\": {\n\t\tu: 780\n\t},\n\t\"Etc/GMT-14\": {\n\t\tu: 840\n\t},\n\t\"Etc/GMT-2\": {\n\t\tu: 120\n\t},\n\t\"Etc/GMT-3\": {\n\t\tu: 180\n\t},\n\t\"Etc/GMT-4\": {\n\t\tu: 240\n\t},\n\t\"Etc/GMT-5\": {\n\t\tu: 300\n\t},\n\t\"Etc/GMT-6\": {\n\t\tu: 360\n\t},\n\t\"Etc/GMT-7\": {\n\t\tu: 420\n\t},\n\t\"Etc/GMT-8\": {\n\t\tu: 480\n\t},\n\t\"Etc/GMT-9\": {\n\t\tu: 540\n\t},\n\t\"Etc/GMT0\": {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\t\"Etc/Greenwich\": {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\t\"Etc/UCT\": {\n\t\ta: \"Etc/UTC\",\n\t\tr: 1\n\t},\n\t\"Etc/UTC\": {\n\t\tu: 0\n\t},\n\t\"Etc/Universal\": {\n\t\ta: \"Etc/UTC\",\n\t\tr: 1\n\t},\n\t\"Etc/Zulu\": {\n\t\ta: \"Etc/UTC\",\n\t\tr: 1\n\t},\n\t\"Europe/Amsterdam\": {\n\t\ta: \"Europe/Brussels\",\n\t\tc: [\n\t\t\t\"NL\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Andorra\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"AD\"\n\t\t]\n\t},\n\t\"Europe/Astrakhan\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/Athens\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"GR\"\n\t\t]\n\t},\n\t\"Europe/Belfast\": {\n\t\ta: \"Europe/London\",\n\t\tc: [\n\t\t\t\"GB\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Belgrade\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"RS\",\n\t\t\t\"BA\",\n\t\t\t\"HR\",\n\t\t\t\"ME\",\n\t\t\t\"MK\",\n\t\t\t\"SI\"\n\t\t]\n\t},\n\t\"Europe/Berlin\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"DE\",\n\t\t\t\"DK\",\n\t\t\t\"NO\",\n\t\t\t\"SE\",\n\t\t\t\"SJ\"\n\t\t]\n\t},\n\t\"Europe/Bratislava\": {\n\t\ta: \"Europe/Prague\",\n\t\tc: [\n\t\t\t\"SK\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Brussels\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"BE\",\n\t\t\t\"LU\",\n\t\t\t\"NL\"\n\t\t]\n\t},\n\t\"Europe/Bucharest\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"RO\"\n\t\t]\n\t},\n\t\"Europe/Budapest\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"HU\"\n\t\t]\n\t},\n\t\"Europe/Busingen\": {\n\t\ta: \"Europe/Zurich\",\n\t\tc: [\n\t\t\t\"DE\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Chisinau\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"MD\"\n\t\t]\n\t},\n\t\"Europe/Copenhagen\": {\n\t\ta: \"Europe/Berlin\",\n\t\tc: [\n\t\t\t\"DK\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Dublin\": {\n\t\tu: 0,\n\t\td: 60,\n\t\tc: [\n\t\t\t\"IE\"\n\t\t]\n\t},\n\t\"Europe/Gibraltar\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"GI\"\n\t\t]\n\t},\n\t\"Europe/Guernsey\": {\n\t\ta: \"Europe/London\",\n\t\tc: [\n\t\t\t\"GG\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Helsinki\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"FI\",\n\t\t\t\"AX\"\n\t\t]\n\t},\n\t\"Europe/Isle_of_Man\": {\n\t\ta: \"Europe/London\",\n\t\tc: [\n\t\t\t\"IM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Istanbul\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"TR\"\n\t\t]\n\t},\n\t\"Europe/Jersey\": {\n\t\ta: \"Europe/London\",\n\t\tc: [\n\t\t\t\"JE\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Kaliningrad\": {\n\t\tu: 120,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/Kiev\": {\n\t\ta: \"Europe/Kyiv\",\n\t\tr: 1\n\t},\n\t\"Europe/Kirov\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/Kyiv\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"UA\"\n\t\t]\n\t},\n\t\"Europe/Lisbon\": {\n\t\tu: 0,\n\t\td: 60,\n\t\tc: [\n\t\t\t\"PT\"\n\t\t]\n\t},\n\t\"Europe/Ljubljana\": {\n\t\ta: \"Europe/Belgrade\",\n\t\tc: [\n\t\t\t\"SI\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/London\": {\n\t\tu: 0,\n\t\td: 60,\n\t\tc: [\n\t\t\t\"GB\",\n\t\t\t\"GG\",\n\t\t\t\"IM\",\n\t\t\t\"JE\"\n\t\t]\n\t},\n\t\"Europe/Luxembourg\": {\n\t\ta: \"Europe/Brussels\",\n\t\tc: [\n\t\t\t\"LU\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Madrid\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"ES\"\n\t\t]\n\t},\n\t\"Europe/Malta\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"MT\"\n\t\t]\n\t},\n\t\"Europe/Mariehamn\": {\n\t\ta: \"Europe/Helsinki\",\n\t\tc: [\n\t\t\t\"AX\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Minsk\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"BY\"\n\t\t]\n\t},\n\t\"Europe/Monaco\": {\n\t\ta: \"Europe/Paris\",\n\t\tc: [\n\t\t\t\"MC\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Moscow\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/Nicosia\": {\n\t\ta: \"Asia/Nicosia\",\n\t\tr: 1\n\t},\n\t\"Europe/Oslo\": {\n\t\ta: \"Europe/Berlin\",\n\t\tc: [\n\t\t\t\"NO\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Paris\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"FR\",\n\t\t\t\"MC\"\n\t\t]\n\t},\n\t\"Europe/Podgorica\": {\n\t\ta: \"Europe/Belgrade\",\n\t\tc: [\n\t\t\t\"ME\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Prague\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"CZ\",\n\t\t\t\"SK\"\n\t\t]\n\t},\n\t\"Europe/Riga\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"LV\"\n\t\t]\n\t},\n\t\"Europe/Rome\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"IT\",\n\t\t\t\"SM\",\n\t\t\t\"VA\"\n\t\t]\n\t},\n\t\"Europe/Samara\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/San_Marino\": {\n\t\ta: \"Europe/Rome\",\n\t\tc: [\n\t\t\t\"SM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Sarajevo\": {\n\t\ta: \"Europe/Belgrade\",\n\t\tc: [\n\t\t\t\"BA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Saratov\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/Simferopol\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"RU\",\n\t\t\t\"UA\"\n\t\t]\n\t},\n\t\"Europe/Skopje\": {\n\t\ta: \"Europe/Belgrade\",\n\t\tc: [\n\t\t\t\"MK\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Sofia\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"BG\"\n\t\t]\n\t},\n\t\"Europe/Stockholm\": {\n\t\ta: \"Europe/Berlin\",\n\t\tc: [\n\t\t\t\"SE\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Tallinn\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"EE\"\n\t\t]\n\t},\n\t\"Europe/Tirane\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"AL\"\n\t\t]\n\t},\n\t\"Europe/Tiraspol\": {\n\t\ta: \"Europe/Chisinau\",\n\t\tr: 1\n\t},\n\t\"Europe/Ulyanovsk\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/Uzhgorod\": {\n\t\ta: \"Europe/Kyiv\",\n\t\tr: 1\n\t},\n\t\"Europe/Vaduz\": {\n\t\ta: \"Europe/Zurich\",\n\t\tc: [\n\t\t\t\"LI\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Vatican\": {\n\t\ta: \"Europe/Rome\",\n\t\tc: [\n\t\t\t\"VA\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Vienna\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"AT\"\n\t\t]\n\t},\n\t\"Europe/Vilnius\": {\n\t\tu: 120,\n\t\td: 180,\n\t\tc: [\n\t\t\t\"LT\"\n\t\t]\n\t},\n\t\"Europe/Volgograd\": {\n\t\tu: 180,\n\t\tc: [\n\t\t\t\"RU\"\n\t\t]\n\t},\n\t\"Europe/Warsaw\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"PL\"\n\t\t]\n\t},\n\t\"Europe/Zagreb\": {\n\t\ta: \"Europe/Belgrade\",\n\t\tc: [\n\t\t\t\"HR\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Europe/Zaporozhye\": {\n\t\ta: \"Europe/Kyiv\",\n\t\tr: 1\n\t},\n\t\"Europe/Zurich\": {\n\t\tu: 60,\n\t\td: 120,\n\t\tc: [\n\t\t\t\"CH\",\n\t\t\t\"DE\",\n\t\t\t\"LI\"\n\t\t]\n\t},\n\tFactory: {\n\t\tu: 0\n\t},\n\tGB: {\n\t\ta: \"Europe/London\",\n\t\tc: [\n\t\t\t\"GB\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"GB-Eire\": {\n\t\ta: \"Europe/London\",\n\t\tc: [\n\t\t\t\"GB\"\n\t\t],\n\t\tr: 1\n\t},\n\tGMT: {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\t\"GMT+0\": {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\t\"GMT-0\": {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\tGMT0: {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\tGreenwich: {\n\t\ta: \"Etc/GMT\",\n\t\tr: 1\n\t},\n\tHST: {\n\t\ta: \"Pacific/Honolulu\",\n\t\tr: 1\n\t},\n\tHongkong: {\n\t\ta: \"Asia/Hong_Kong\",\n\t\tr: 1\n\t},\n\tIceland: {\n\t\ta: \"Africa/Abidjan\",\n\t\tc: [\n\t\t\t\"IS\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Antananarivo\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"MG\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Chagos\": {\n\t\tu: 360,\n\t\tc: [\n\t\t\t\"IO\"\n\t\t]\n\t},\n\t\"Indian/Christmas\": {\n\t\ta: \"Asia/Bangkok\",\n\t\tc: [\n\t\t\t\"CX\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Cocos\": {\n\t\ta: \"Asia/Yangon\",\n\t\tc: [\n\t\t\t\"CC\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Comoro\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"KM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Kerguelen\": {\n\t\ta: \"Indian/Maldives\",\n\t\tc: [\n\t\t\t\"TF\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Mahe\": {\n\t\ta: \"Asia/Dubai\",\n\t\tc: [\n\t\t\t\"SC\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Maldives\": {\n\t\tu: 300,\n\t\tc: [\n\t\t\t\"MV\",\n\t\t\t\"TF\"\n\t\t]\n\t},\n\t\"Indian/Mauritius\": {\n\t\tu: 240,\n\t\tc: [\n\t\t\t\"MU\"\n\t\t]\n\t},\n\t\"Indian/Mayotte\": {\n\t\ta: \"Africa/Nairobi\",\n\t\tc: [\n\t\t\t\"YT\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Indian/Reunion\": {\n\t\ta: \"Asia/Dubai\",\n\t\tc: [\n\t\t\t\"RE\"\n\t\t],\n\t\tr: 1\n\t},\n\tIran: {\n\t\ta: \"Asia/Tehran\",\n\t\tr: 1\n\t},\n\tIsrael: {\n\t\ta: \"Asia/Jerusalem\",\n\t\tr: 1\n\t},\n\tJamaica: {\n\t\ta: \"America/Jamaica\",\n\t\tr: 1\n\t},\n\tJapan: {\n\t\ta: \"Asia/Tokyo\",\n\t\tr: 1\n\t},\n\tKwajalein: {\n\t\ta: \"Pacific/Kwajalein\",\n\t\tr: 1\n\t},\n\tLibya: {\n\t\ta: \"Africa/Tripoli\",\n\t\tr: 1\n\t},\n\tMET: {\n\t\ta: \"Europe/Brussels\",\n\t\tr: 1\n\t},\n\tMST: {\n\t\ta: \"America/Phoenix\",\n\t\tr: 1\n\t},\n\tMST7MDT: {\n\t\ta: \"America/Denver\",\n\t\tr: 1\n\t},\n\t\"Mexico/BajaNorte\": {\n\t\ta: \"America/Tijuana\",\n\t\tr: 1\n\t},\n\t\"Mexico/BajaSur\": {\n\t\ta: \"America/Mazatlan\",\n\t\tr: 1\n\t},\n\t\"Mexico/General\": {\n\t\ta: \"America/Mexico_City\",\n\t\tr: 1\n\t},\n\tNZ: {\n\t\ta: \"Pacific/Auckland\",\n\t\tc: [\n\t\t\t\"NZ\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"NZ-CHAT\": {\n\t\ta: \"Pacific/Chatham\",\n\t\tr: 1\n\t},\n\tNavajo: {\n\t\ta: \"America/Denver\",\n\t\tr: 1\n\t},\n\tPRC: {\n\t\ta: \"Asia/Shanghai\",\n\t\tr: 1\n\t},\n\tPST8PDT: {\n\t\ta: \"America/Los_Angeles\",\n\t\tr: 1\n\t},\n\t\"Pacific/Apia\": {\n\t\tu: 780,\n\t\tc: [\n\t\t\t\"WS\"\n\t\t]\n\t},\n\t\"Pacific/Auckland\": {\n\t\tu: 720,\n\t\td: 780,\n\t\tc: [\n\t\t\t\"NZ\",\n\t\t\t\"AQ\"\n\t\t]\n\t},\n\t\"Pacific/Bougainville\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"PG\"\n\t\t]\n\t},\n\t\"Pacific/Chatham\": {\n\t\tu: 765,\n\t\td: 825,\n\t\tc: [\n\t\t\t\"NZ\"\n\t\t]\n\t},\n\t\"Pacific/Chuuk\": {\n\t\ta: \"Pacific/Port_Moresby\",\n\t\tc: [\n\t\t\t\"FM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Easter\": {\n\t\tu: -360,\n\t\td: -300,\n\t\tc: [\n\t\t\t\"CL\"\n\t\t]\n\t},\n\t\"Pacific/Efate\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"VU\"\n\t\t]\n\t},\n\t\"Pacific/Enderbury\": {\n\t\ta: \"Pacific/Kanton\",\n\t\tr: 1\n\t},\n\t\"Pacific/Fakaofo\": {\n\t\tu: 780,\n\t\tc: [\n\t\t\t\"TK\"\n\t\t]\n\t},\n\t\"Pacific/Fiji\": {\n\t\tu: 720,\n\t\tc: [\n\t\t\t\"FJ\"\n\t\t]\n\t},\n\t\"Pacific/Funafuti\": {\n\t\ta: \"Pacific/Tarawa\",\n\t\tc: [\n\t\t\t\"TV\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Galapagos\": {\n\t\tu: -360,\n\t\tc: [\n\t\t\t\"EC\"\n\t\t]\n\t},\n\t\"Pacific/Gambier\": {\n\t\tu: -540,\n\t\tc: [\n\t\t\t\"PF\"\n\t\t]\n\t},\n\t\"Pacific/Guadalcanal\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"SB\",\n\t\t\t\"FM\"\n\t\t]\n\t},\n\t\"Pacific/Guam\": {\n\t\tu: 600,\n\t\tc: [\n\t\t\t\"GU\",\n\t\t\t\"MP\"\n\t\t]\n\t},\n\t\"Pacific/Honolulu\": {\n\t\tu: -600,\n\t\tc: [\n\t\t\t\"US\"\n\t\t]\n\t},\n\t\"Pacific/Johnston\": {\n\t\ta: \"Pacific/Honolulu\",\n\t\tc: [\n\t\t\t\"UM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Kanton\": {\n\t\tu: 780,\n\t\tc: [\n\t\t\t\"KI\"\n\t\t]\n\t},\n\t\"Pacific/Kiritimati\": {\n\t\tu: 840,\n\t\tc: [\n\t\t\t\"KI\"\n\t\t]\n\t},\n\t\"Pacific/Kosrae\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"FM\"\n\t\t]\n\t},\n\t\"Pacific/Kwajalein\": {\n\t\tu: 720,\n\t\tc: [\n\t\t\t\"MH\"\n\t\t]\n\t},\n\t\"Pacific/Majuro\": {\n\t\ta: \"Pacific/Tarawa\",\n\t\tc: [\n\t\t\t\"MH\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Marquesas\": {\n\t\tu: -570,\n\t\tc: [\n\t\t\t\"PF\"\n\t\t]\n\t},\n\t\"Pacific/Midway\": {\n\t\ta: \"Pacific/Pago_Pago\",\n\t\tc: [\n\t\t\t\"UM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Nauru\": {\n\t\tu: 720,\n\t\tc: [\n\t\t\t\"NR\"\n\t\t]\n\t},\n\t\"Pacific/Niue\": {\n\t\tu: -660,\n\t\tc: [\n\t\t\t\"NU\"\n\t\t]\n\t},\n\t\"Pacific/Norfolk\": {\n\t\tu: 660,\n\t\td: 720,\n\t\tc: [\n\t\t\t\"NF\"\n\t\t]\n\t},\n\t\"Pacific/Noumea\": {\n\t\tu: 660,\n\t\tc: [\n\t\t\t\"NC\"\n\t\t]\n\t},\n\t\"Pacific/Pago_Pago\": {\n\t\tu: -660,\n\t\tc: [\n\t\t\t\"AS\",\n\t\t\t\"UM\"\n\t\t]\n\t},\n\t\"Pacific/Palau\": {\n\t\tu: 540,\n\t\tc: [\n\t\t\t\"PW\"\n\t\t]\n\t},\n\t\"Pacific/Pitcairn\": {\n\t\tu: -480,\n\t\tc: [\n\t\t\t\"PN\"\n\t\t]\n\t},\n\t\"Pacific/Pohnpei\": {\n\t\ta: \"Pacific/Guadalcanal\",\n\t\tc: [\n\t\t\t\"FM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Ponape\": {\n\t\ta: \"Pacific/Guadalcanal\",\n\t\tc: [\n\t\t\t\"FM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Port_Moresby\": {\n\t\tu: 600,\n\t\tc: [\n\t\t\t\"PG\",\n\t\t\t\"AQ\",\n\t\t\t\"FM\"\n\t\t]\n\t},\n\t\"Pacific/Rarotonga\": {\n\t\tu: -600,\n\t\tc: [\n\t\t\t\"CK\"\n\t\t]\n\t},\n\t\"Pacific/Saipan\": {\n\t\ta: \"Pacific/Guam\",\n\t\tc: [\n\t\t\t\"MP\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Samoa\": {\n\t\ta: \"Pacific/Pago_Pago\",\n\t\tc: [\n\t\t\t\"AS\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Tahiti\": {\n\t\tu: -600,\n\t\tc: [\n\t\t\t\"PF\"\n\t\t]\n\t},\n\t\"Pacific/Tarawa\": {\n\t\tu: 720,\n\t\tc: [\n\t\t\t\"KI\",\n\t\t\t\"MH\",\n\t\t\t\"TV\",\n\t\t\t\"UM\",\n\t\t\t\"WF\"\n\t\t]\n\t},\n\t\"Pacific/Tongatapu\": {\n\t\tu: 780,\n\t\tc: [\n\t\t\t\"TO\"\n\t\t]\n\t},\n\t\"Pacific/Truk\": {\n\t\ta: \"Pacific/Port_Moresby\",\n\t\tc: [\n\t\t\t\"FM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Wake\": {\n\t\ta: \"Pacific/Tarawa\",\n\t\tc: [\n\t\t\t\"UM\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Wallis\": {\n\t\ta: \"Pacific/Tarawa\",\n\t\tc: [\n\t\t\t\"WF\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"Pacific/Yap\": {\n\t\ta: \"Pacific/Port_Moresby\",\n\t\tc: [\n\t\t\t\"FM\"\n\t\t],\n\t\tr: 1\n\t},\n\tPoland: {\n\t\ta: \"Europe/Warsaw\",\n\t\tr: 1\n\t},\n\tPortugal: {\n\t\ta: \"Europe/Lisbon\",\n\t\tr: 1\n\t},\n\tROC: {\n\t\ta: \"Asia/Taipei\",\n\t\tr: 1\n\t},\n\tROK: {\n\t\ta: \"Asia/Seoul\",\n\t\tr: 1\n\t},\n\tSingapore: {\n\t\ta: \"Asia/Singapore\",\n\t\tc: [\n\t\t\t\"SG\"\n\t\t],\n\t\tr: 1\n\t},\n\tTurkey: {\n\t\ta: \"Europe/Istanbul\",\n\t\tr: 1\n\t},\n\tUCT: {\n\t\ta: \"Etc/UTC\",\n\t\tr: 1\n\t},\n\t\"US/Alaska\": {\n\t\ta: \"America/Anchorage\",\n\t\tr: 1\n\t},\n\t\"US/Aleutian\": {\n\t\ta: \"America/Adak\",\n\t\tr: 1\n\t},\n\t\"US/Arizona\": {\n\t\ta: \"America/Phoenix\",\n\t\tc: [\n\t\t\t\"US\"\n\t\t],\n\t\tr: 1\n\t},\n\t\"US/Central\": {\n\t\ta: \"America/Chicago\",\n\t\tr: 1\n\t},\n\t\"US/East-Indiana\": {\n\t\ta: \"America/Indiana/Indianapolis\",\n\t\tr: 1\n\t},\n\t\"US/Eastern\": {\n\t\ta: \"America/New_York\",\n\t\tr: 1\n\t},\n\t\"US/Hawaii\": {\n\t\ta: \"Pacific/Honolulu\",\n\t\tr: 1\n\t},\n\t\"US/Indiana-Starke\": {\n\t\ta: \"America/Indiana/Knox\",\n\t\tr: 1\n\t},\n\t\"US/Michigan\": {\n\t\ta: \"America/Detroit\",\n\t\tr: 1\n\t},\n\t\"US/Mountain\": {\n\t\ta: \"America/Denver\",\n\t\tr: 1\n\t},\n\t\"US/Pacific\": {\n\t\ta: \"America/Los_Angeles\",\n\t\tr: 1\n\t},\n\t\"US/Samoa\": {\n\t\ta: \"Pacific/Pago_Pago\",\n\t\tc: [\n\t\t\t\"AS\"\n\t\t],\n\t\tr: 1\n\t},\n\tUTC: {\n\t\ta: \"Etc/UTC\",\n\t\tr: 1\n\t},\n\tUniversal: {\n\t\ta: \"Etc/UTC\",\n\t\tr: 1\n\t},\n\t\"W-SU\": {\n\t\ta: \"Europe/Moscow\",\n\t\tr: 1\n\t},\n\tWET: {\n\t\ta: \"Europe/Lisbon\",\n\t\tr: 1\n\t},\n\tZulu: {\n\t\ta: \"Etc/UTC\",\n\t\tr: 1\n\t}\n};\nvar data = {\n\tcountries: countries$1,\n\ttimezones: timezones$1\n};\n\nvar timezonesMap;\nfunction buildCountry(data, id) {\n  var name = data.countries[id];\n  if (!name) return null;\n  var tzMap = getTimezonesMap(data)[id] || {};\n  return {\n    id: id,\n    name: name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || []\n  };\n}\nfunction getTimezonesMap(data) {\n  timezonesMap || (timezonesMap = buildTimezonesMap(data));\n  return timezonesMap;\n}\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce(function (result, id) {\n    var tz = data.timezones[id];\n    var c = tz.c,\n      a = tz.a;\n    var aliasTz = data.timezones[a] || {};\n    var countries = c || aliasTz.c;\n    if (!countries) return result;\n    var _iterator = _createForOfIteratorHelper(countries),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var country = _step.value;\n        if (!result[country]) Object.assign(result, _defineProperty({}, country, {\n          current: [],\n          all: []\n        }));\n        if (tz.r === undefined) result[country].current.push(id);\n        result[country].all.push(id);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return result;\n  }, {});\n}\n\nfunction buildTimezone(data, name) {\n  var timezone = data.timezones[name];\n  if (!timezone) return null;\n  var _timezone$a = timezone.a,\n    aliasOf = _timezone$a === void 0 ? null : _timezone$a;\n  var aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  var tz = _objectSpread2(_objectSpread2({}, aliasTz), data.timezones[name]);\n  var countries = tz.c || [];\n  var utcOffset = tz.u;\n  var dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n  var result = {\n    name: name,\n    countries: countries,\n    utcOffset: utcOffset,\n    utcOffsetStr: getOffsetString(utcOffset),\n    dstOffset: dstOffset,\n    dstOffsetStr: getOffsetString(dstOffset),\n    aliasOf: aliasOf\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\nfunction getOffsetString(offset) {\n  var hours = Math.floor(Math.abs(offset) / 60);\n  var min = offset % 60;\n  var sign = offset < 0 ? '-' : '+';\n  return \"\".concat(sign).concat(getNumberString(hours), \":\").concat(getNumberString(min));\n}\nfunction getNumberString(input) {\n  var number_ = Math.abs(input);\n  var prefix = number_ < 10 ? '0' : '';\n  return \"\".concat(prefix).concat(number_);\n}\n\nvar _excluded = [\"allTimezones\"];\nvar totalTimezones = Object.keys(data.timezones).length;\nvar countries = {};\nvar timezones = {};\nvar memoizedTimezones = 0;\nfunction getAllCountries() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(data.countries).reduce(function (previous, id) {\n    return Object.assign(previous, _defineProperty({}, id, getCountry(id, options)));\n  }, {});\n}\nfunction getAllTimezones() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (totalTimezones !== memoizedTimezones) for (var _i = 0, _Object$keys = Object.keys(data.timezones); _i < _Object$keys.length; _i++) {\n    var name = _Object$keys[_i];\n    getTimezone(name);\n  }\n  return deliverTimezones(timezones, options);\n}\nfunction getCountry(id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\nfunction getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? _objectSpread2({}, timezones[name]) : null;\n}\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\nfunction getCountriesForTimezone(tzName) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var timezone = getTimezone(tzName) || {};\n  var values = timezone.countries || [];\n  return values.map(function (c) {\n    return getCountry(c, options);\n  });\n}\nfunction getCountryForTimezone(tzName) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _getCountriesForTimez = getCountriesForTimezone(tzName, options),\n    _getCountriesForTimez2 = _slicedToArray(_getCountriesForTimez, 1),\n    main = _getCountriesForTimez2[0];\n  return main || null;\n}\nfunction getTimezonesForCountry(countryId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var country = getCountry(countryId, options);\n  if (!country) return null;\n  var values = country.timezones || [];\n  return values.map(function (timezone) {\n    return getTimezone(timezone);\n  });\n}\nfunction deliverTimezones(tzs, options) {\n  var _ref = options || {},\n    deprecated = _ref.deprecated;\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce(function (previous, key) {\n    if (!tzs[key].deprecated) Object.assign(previous, _defineProperty({}, key, tzs[key]));\n    return previous;\n  }, {});\n}\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  var _ref2 = options || {},\n    deprecated = _ref2.deprecated;\n  country.allTimezones;\n    var other = _objectWithoutProperties(country, _excluded);\n  var tz = deprecated ? country.allTimezones : country.timezones;\n  return _objectSpread2(_objectSpread2({}, other), {}, {\n    timezones: tz\n  });\n}\nvar utils = {\n  getCountry: getCountry,\n  getTimezone: getTimezone,\n  getAllCountries: getAllCountries,\n  getAllTimezones: getAllTimezones,\n  getTimezonesForCountry: getTimezonesForCountry,\n  getCountriesForTimezone: getCountriesForTimezone,\n  getCountryForTimezone: getCountryForTimezone\n};\n\nexport { utils as default, getAllCountries, getAllTimezones, getCountriesForTimezone, getCountry, getCountryForTimezone, getTimezone, getTimezonesForCountry };\n//# sourceMappingURL=index.js.map\n","let timezonesMap;\n\nexport default function buildCountry(data, id) {\n  const name = data.countries[id];\n  if (!name) return null;\n\n  const tzMap = getTimezonesMap(data)[id] || {};\n\n  return {\n    id,\n    name,\n    timezones: tzMap.current || [],\n    allTimezones: tzMap.all || [],\n  };\n}\n\nfunction getTimezonesMap(data) {\n  timezonesMap ||= buildTimezonesMap(data);\n  return timezonesMap;\n}\n\nfunction buildTimezonesMap(data) {\n  return Object.keys(data.timezones).reduce((result, id) => {\n    const tz = data.timezones[id];\n    const {c, a} = tz;\n    const aliasTz = data.timezones[a] || {};\n    const countries = c || aliasTz.c;\n\n    if (!countries) return result;\n\n    for (const country of countries) {\n      if (!result[country])\n        Object.assign(result, {[country]: {current: [], all: []}});\n      if (tz.r === undefined) result[country].current.push(id);\n      result[country].all.push(id);\n    }\n\n    return result;\n  }, {});\n}\n","export default function buildTimezone(data, name) {\n  const timezone = data.timezones[name];\n  if (!timezone) return null;\n\n  const {a: aliasOf = null} = timezone;\n  const aliasTz = aliasOf ? data.timezones[aliasOf] : {};\n  const tz = {\n    ...aliasTz,\n    ...data.timezones[name],\n  };\n\n  const countries = tz.c || [];\n  const utcOffset = tz.u;\n  const dstOffset = Number.isInteger(tz.d) ? tz.d : utcOffset;\n\n  const result = {\n    name,\n    countries,\n    utcOffset,\n    utcOffsetStr: getOffsetString(utcOffset),\n    dstOffset,\n    dstOffsetStr: getOffsetString(dstOffset),\n    aliasOf,\n  };\n  if (timezone.r) result.deprecated = true;\n  return result;\n}\n\nfunction getOffsetString(offset) {\n  const hours = Math.floor(Math.abs(offset) / 60);\n  const min = offset % 60;\n  const sign = offset < 0 ? '-' : '+';\n\n  return `${sign}${getNumberString(hours)}:${getNumberString(min)}`;\n}\n\nfunction getNumberString(input) {\n  const number_ = Math.abs(input);\n  const prefix = number_ < 10 ? '0' : '';\n  return `${prefix}${number_}`;\n}\n","import data from './data.json';\nimport buildCountry from './build-country.js';\nimport buildTimezone from './build-timezone.js';\n\nconst totalTimezones = Object.keys(data.timezones).length;\nconst countries = {};\nconst timezones = {};\nlet memoizedTimezones = 0;\n\nexport function getAllCountries(options = {}) {\n  return Object.keys(data.countries).reduce((previous, id) => {\n    return Object.assign(previous, {[id]: getCountry(id, options)});\n  }, {});\n}\n\nexport function getAllTimezones(options = {}) {\n  if (totalTimezones !== memoizedTimezones)\n    for (const name of Object.keys(data.timezones)) {\n      getTimezone(name);\n    }\n\n  return deliverTimezones(timezones, options);\n}\n\nexport function getCountry(id, options = {}) {\n  if (!countries[id]) memoizeCountry(buildCountry(data, id));\n  return deliverCountry(countries[id], options);\n}\n\nfunction memoizeCountry(country) {\n  if (!country) return;\n  countries[country.id] = country;\n}\n\nexport function getTimezone(name) {\n  if (!timezones[name]) memoizeTimezone(buildTimezone(data, name));\n  return timezones[name] ? {...timezones[name]} : null;\n}\n\nfunction memoizeTimezone(timezone) {\n  if (!timezone) return;\n  timezones[timezone.name] = timezone;\n  memoizedTimezones = Object.keys(timezone).length;\n}\n\nexport function getCountriesForTimezone(tzName, options = {}) {\n  const timezone = getTimezone(tzName) || {};\n  const values = timezone.countries || [];\n  return values.map((c) => getCountry(c, options));\n}\n\nexport function getCountryForTimezone(tzName, options = {}) {\n  const [main] = getCountriesForTimezone(tzName, options);\n  return main || null;\n}\n\nexport function getTimezonesForCountry(countryId, options = {}) {\n  const country = getCountry(countryId, options);\n  if (!country) return null;\n  const values = country.timezones || [];\n  return values.map((timezone) => getTimezone(timezone));\n}\n\nfunction deliverTimezones(tzs, options) {\n  const {deprecated} = options || {};\n  if (deprecated === true) return tzs;\n  return Object.keys(tzs).reduce((previous, key) => {\n    if (!tzs[key].deprecated) Object.assign(previous, {[key]: tzs[key]});\n    return previous;\n  }, {});\n}\n\nfunction deliverCountry(country, options) {\n  if (!country) return null;\n  const {deprecated} = options || {};\n  const {allTimezones, ...other} = country;\n  const tz = deprecated ? country.allTimezones : country.timezones;\n  return {...other, timezones: tz};\n}\n\nconst utils = {\n  getCountry,\n  getTimezone,\n  getAllCountries,\n  getAllTimezones,\n  getTimezonesForCountry,\n  getCountriesForTimezone,\n  getCountryForTimezone,\n};\n\nexport default utils;\n"],"names":["$12e2750474abc44b$var$_arrayLikeToArray","r","a","length","e","n","Array","$12e2750474abc44b$var$_defineProperty","t","i","$12e2750474abc44b$var$_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","Object","defineProperty","value","enumerable","configurable","writable","$12e2750474abc44b$var$ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","$12e2750474abc44b$var$_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","$12e2750474abc44b$var$timezonesMap","$12e2750474abc44b$var$data","countries","AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","YT","ZA","ZM","ZW","timezones","u","c","d","CET","CST6CDT","Cuba","EET","EST","EST5EDT","Egypt","Eire","Factory","GMT","GMT0","Greenwich","HST","Hongkong","Iceland","Iran","Israel","Jamaica","Japan","Kwajalein","Libya","MET","MST","MST7MDT","Navajo","PRC","PST8PDT","Poland","Portugal","ROC","ROK","Singapore","Turkey","UCT","UTC","Universal","WET","Zulu","$12e2750474abc44b$var$getOffsetString","offset","hours","Math","floor","abs","sign","concat","$12e2750474abc44b$var$getNumberString","input","number_","prefix","$12e2750474abc44b$var$_excluded","$12e2750474abc44b$var$totalTimezones","$12e2750474abc44b$var$countries","$12e2750474abc44b$var$timezones","$12e2750474abc44b$var$memoizedTimezones","$12e2750474abc44b$export$5ba2b8988138595d","name","timezone","$12e2750474abc44b$var$buildTimezone","data","_timezone$a","aliasOf","tz","utcOffset","dstOffset","isInteger","result","utcOffsetStr","dstOffsetStr","deprecated","$543d6d2a56ed7d8d$var$tzs","options","undefined","_i","_Object$keys","_ref","reduce","previous","key","tzs","assign","$543d6d2a56ed7d8d$var$zones","document","getElementById","$543d6d2a56ed7d8d$var$utc","now","Date","utcHours","getUTCHours","minutes","getUTCMinutes","slice","textContent","offsetHours","$543d6d2a56ed7d8d$var$FIVE_PM","entries","zone","details","target","includes","tzName","values","map","$12e2750474abc44b$export$a27f7d52d5670305","id","country","$12e2750474abc44b$var$buildCountry","tzMap","$12e2750474abc44b$var$getTimezonesMap","aliasTz","_step","_iterator","$12e2750474abc44b$var$_createForOfIteratorHelper","iterator","isArray","$12e2750474abc44b$var$_unsupportedIterableToArray","toString","constructor","from","test","F","s","done","f","next","return","current","all","err","allTimezones","$12e2750474abc44b$var$deliverCountry","_ref2","other","$12e2750474abc44b$var$_objectWithoutProperties","$12e2750474abc44b$var$_objectWithoutPropertiesLoose","hasOwnProperty","propertyIsEnumerable","li","createElement","appendChild","timezonesMap","buildCountry","getTimezonesMap","buildTimezonesMap","_createForOfIteratorHelper","_defineProperty","buildTimezone","_objectSpread","getOffsetString","min","getNumberString","totalTimezones","memoizedTimezones","getAllCountries","getCountry","getAllTimezones","getTimezone","deliverTimezones","memoizeCountry","deliverCountry","memoizeTimezone","getCountriesForTimezone","getCountryForTimezone","_getCountriesForTimez","_getCountriesForTimez2","_slicedToArray","main","getTimezonesForCountry","countryId","_objectWithoutProperties","_excluded","utils"],"version":3,"file":"index.4e7854cd.js.map"}